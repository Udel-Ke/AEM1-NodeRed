[
    {
        "id": "0e1f3206f48adf14",
        "type": "tab",
        "label": "AEM1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "06c6cdf71851940d",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3ca569c54e5ebb61",
            "3a2e5ae01db4a464",
            "a54b88ebdc027299",
            "375e0ce60e51a32b",
            "d00973e02ef2d64c",
            "a1bf5e81cfcf58e3",
            "5811aec5a8ea97c9",
            "da753e14585654ba",
            "fb1ec398897fa4c8",
            "8bc7b7d40bdb88bf",
            "9a97bbc72a0e3555",
            "fdd2080b0ef3c2a6",
            "2ff1bd7c6ae39338",
            "3ae3b1dd7f0614df",
            "3f9120833317f5fd",
            "6a418aa5692cfa40",
            "c9fef8c6dd725e70",
            "a54626c22c4fa4ae",
            "d85e0233592774cf",
            "95d53dd5427fb178",
            "f3fbb69e2e543607",
            "4f125d9708a25241",
            "b75393e78ee555ee",
            "d67cd350e95814e5",
            "295be76956eeb3d1",
            "b849ee60fc7851a3",
            "fe5b2008e835142c",
            "d574e9d2ae32d3ae",
            "b3017782a7ed1b07",
            "aff089f10d47c071",
            "3c13fa52a4957e3a"
        ],
        "x": 54,
        "y": 2579,
        "w": 1052,
        "h": 522
    },
    {
        "id": "5258e746159f915c",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b2ffb736253c42ce",
            "d7b83c3bdbc132fc",
            "1b3f23fa28e5b05a",
            "bbfb835cba9a9b5a",
            "76a236a0770e41b9",
            "08288dd29ba947c3",
            "6b9d33d8dd75bde6",
            "f6e9e2024354ebb6",
            "db7d84da82eb83ee",
            "bfa18773572a7fef",
            "1adcfbfd7586ce6b",
            "a28627b538e4350e",
            "3655c26dfb4896fd",
            "ffaf214f88de0731",
            "d38f94132ffbf8d2",
            "3c9c30b75e7298df",
            "33d09f0b8f4f9363",
            "2a7dda672fc3e645",
            "23ec338b4258df73",
            "e3b7e200883886f3",
            "5a3ab29e6c62a71c",
            "079692fc55b380f4",
            "d87d5b4b2960e40d",
            "651989b179c54ccd",
            "c194274b99b7d817",
            "b3d28003c8a9b96e",
            "f6e55c6746f2e0d0"
        ],
        "x": 54,
        "y": 2119,
        "w": 1572,
        "h": 382
    },
    {
        "id": "ad5ef647cb4ea746",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "968c5c6feb1e2ed1",
            "f679ca1115c46a1e",
            "65f4a6d329a20c56",
            "c64bdfa07c836a68",
            "fa4ba3044dddabf0"
        ],
        "x": 2374,
        "y": 2199,
        "w": 732,
        "h": 129.5
    },
    {
        "id": "32776a10d46d718d",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c71dee702c83ad9e",
            "1fa25a2cb5e31ef6",
            "50616e509fe9c04b",
            "c2e94988fc480afa"
        ],
        "x": 2874,
        "y": 599,
        "w": 612,
        "h": 122
    },
    {
        "id": "b5c880e558e89abe",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "83e549ac89bad390",
            "6de10b54dda585b9",
            "9d6d4a50ba28b501",
            "18ecbf3af9f09387",
            "33456f72e3f84419",
            "2e2281a7ce0eced6",
            "c7de23c01c2709f7",
            "6e3c014f7a83dc6e",
            "29a608f961f5dfce",
            "ecec0dddc533efe9",
            "eb37a99b6ec86e15",
            "31fc354c9835486a",
            "59da409b16514d35",
            "177d65f708dfee16",
            "ec368c283fdfaa8a",
            "1e643c04615836d9"
        ],
        "x": 54,
        "y": 799,
        "w": 1332,
        "h": 262
    },
    {
        "id": "35a088b350aa3972",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "65208708e4372bc8",
            "a5039fb22db64485",
            "ef7e4a5d1320bf80",
            "2c3d63ee4f877c5a",
            "526e1843558ad752",
            "e82e6a879dd35783",
            "29d0ac5a03343b5a",
            "cb949aacedf8b399",
            "23e13ab57ea9677a",
            "9241aded0efea985",
            "1b952520d5aaf90b",
            "c262f6046510507d",
            "d917117175b94745",
            "e4ba86696d3fd1bf"
        ],
        "x": 1334,
        "y": 1099,
        "w": 712,
        "h": 282
    },
    {
        "id": "8523ba6f048159f6",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "56b364be4f21de16",
            "aa5db110eb32f34a",
            "9c9c3c1ab31cb97b",
            "fe0bb0717405edc1",
            "82f361b8a87140d7",
            "44769ace05fdd10b",
            "e493350636115e64",
            "edc71474186d9603",
            "81b6eb9b5e5dcf0a",
            "a1a88e13dcb6c08c",
            "24805c900167c968",
            "9aa23de8df763ac7",
            "fb1edbf186530db5",
            "15100a34803ec0b4",
            "a6d1d00bbd920ed1",
            "d835db8fa2b703e5",
            "aa176dc0751837e6",
            "92177eb81bdef385",
            "c01aa3cf6b0ca42b",
            "0acf4c3f1837eb3e",
            "561af053f2a01b14",
            "0a90f31996d9f9fb",
            "6c1ca61ccb0e9fe7",
            "f57cc15c0a1a5d40",
            "97f1c00a4c80b34b",
            "391eea99aec76dc3",
            "5cdf618ae772298c",
            "efcd4aed9b641d52",
            "347a216086cf6bf8",
            "9a5ba72a5d1e3962",
            "7b300e41668ddd85",
            "cff1439896c3e513",
            "13bc049226efdcbe",
            "0143b1f538d982a6",
            "46957ef2a3ec2d2f",
            "0c5a4cdd7c4ca1a6",
            "6d4f39ef0f600810",
            "5377e56725ca39c9",
            "018fc1c07d0b477c",
            "b1d6242f17150944",
            "23876e09867e18c6",
            "dc73003d84f979ad",
            "57475c8c2078282c",
            "8185bb2c93a770e5",
            "b325c97aac726b07",
            "718c1d4a24b148bb",
            "d95212fec88dc2a5"
        ],
        "x": 54,
        "y": 1419,
        "w": 1932,
        "h": 582
    },
    {
        "id": "783a604ad685b5f5",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "csv_input",
            "csv_parser",
            "filter_modbus_tags",
            "debug_output",
            "f76507ef24e89f5d",
            "ba78053e5aaa7eed",
            "023cde579789cf6c",
            "f9d70936d5ff8c9b",
            "510b431ad3e38e97",
            "08c0de3d9a6fc2c8",
            "53582435e115617e",
            "b429b5a8c896f336"
        ],
        "x": 74,
        "y": 1139,
        "w": 1092,
        "h": 222
    },
    {
        "id": "28d6aa434baf0184",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "78c83855ada6c722",
            "0c0d9dd093999933",
            "2c986d49933c2836",
            "ac0118475b89b5f1",
            "a2cabbb3e1741f6d",
            "e3749f3cbe911471",
            "601c184cc8cd4fe2",
            "75e9b4cbb923d25a",
            "be2a05249dece704",
            "45113a7508b326f3",
            "7edc65431e4f629c",
            "7510c110eb4d4481",
            "3d33c8da5bb204cf",
            "c6152156af323fc9",
            "a2917e2f62739f51",
            "23e7d95574434001",
            "d54e4de142a995c6",
            "246f2e5ba8d0961c",
            "6b0bf9d334def047"
        ],
        "x": 54,
        "y": 339,
        "w": 832,
        "h": 382
    },
    {
        "id": "525f6434f47c15f1",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "731b3aa4b9eea197",
            "ad1436e2f7b892fd",
            "87476d790eb1dfab",
            "4ae111cdbb1031f3",
            "137325ab94a685e0"
        ],
        "x": 1554,
        "y": 59,
        "w": 372,
        "h": 202
    },
    {
        "id": "e1b6d5ba8d3de0b8",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "401a02e5f0a36a3a",
            "c025225aa660bf27",
            "7359636993bb200e",
            "c955b39b856d6b12",
            "41b6500c6f27fc29",
            "5b9437060b5fa2a4",
            "2517cf943d440480",
            "b3e5ca75ee471501",
            "1ffb3eb4eb6a6a53",
            "8c73132f328aea58",
            "4ecd9bbe3d98a0ae",
            "872d027bb67079c1"
        ],
        "x": 554,
        "y": 39,
        "w": 832,
        "h": 242
    },
    {
        "id": "1c1f20c3ada10fc1",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "49263ca4933dbd63",
            "f8e57f19654fa8e7",
            "e40c571c4e7e87b2",
            "97a11857dbdbcc02",
            "1ee5227dd94e166a",
            "b497c2e56b6b9439",
            "df1fd79072832199"
        ],
        "x": 54,
        "y": 59,
        "w": 402,
        "h": 222
    },
    {
        "id": "a9e7fb168fe4a14b",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "check-alarms",
            "ui-table",
            "1eb68209c16b4838",
            "a10c1a2688a640bb",
            "f48aa9a9cf3d509d",
            "e78ddeff61a1c93e",
            "6ae40b3b9732b19e",
            "62c4e491e6bcbed7",
            "cf194dffbd2e48b6",
            "c5b888169030b019",
            "d1839f4c053d58e2",
            "db013277065953c9",
            "ca1d2bc8cf1b9e48",
            "c83b4665fe578a2c"
        ],
        "x": 54,
        "y": 3219,
        "w": 1092,
        "h": 242
    },
    {
        "id": "891263f2623b3ee2",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2d55dea777408eee",
            "a27854311ccad1e5",
            "3ae2d3e4437de255",
            "0d0fd00deab4a399",
            "1381504cc2d4d44b",
            "b4e3f4053a915245",
            "7f85d90e4955acfa",
            "73963f73e4846a0f",
            "b9ad53a94a9cade2",
            "e7832801775cf2e5",
            "45f325d04956ac88",
            "e814f9e77d873579",
            "07889394d1d1d567"
        ],
        "x": 54,
        "y": 3539,
        "w": 852,
        "h": 282
    },
    {
        "id": "adbe011cfa336e78",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "655caca86ec029a9",
            "098e0fb7b999add0",
            "43fb78c263cff003",
            "19582343872ba25b",
            "0c65acb1241053b1",
            "0fcfdb07a1eabfea",
            "ad409912680a26fc",
            "7c8cd82161696dbe",
            "155ec724df87d928",
            "fa42f446116f08bc",
            "b626fbf36323dfa9",
            "7a554a0d03cd9a5b",
            "e3e51d5261f83d18",
            "39244fa04a4ce7d5",
            "656a076b5d7b8bb7",
            "51d5578553b543b6",
            "0f4aaf118b0e298c",
            "57106c3855b7b9ce",
            "4eca2ac825cebd82",
            "70cf2f311c7d7f5b",
            "5079ebea03413b2a",
            "1b90b1a3bb0e23f6",
            "0a9712d38fbf0dcc",
            "9a0d4b79df7f94ae",
            "49e5b3cec8bda10d",
            "589ce0fdddac0565",
            "50a2e69e7921ace9",
            "871dd2fd31ac1461",
            "7389a894f1605cf3",
            "f5308650b7caeb57",
            "f821e642a405cd20",
            "25678c82a19b1e2d",
            "fc3e49778ffffccf",
            "2ab23c7acd8dd360",
            "ebedd42d3d73fc5c",
            "5bf7034acf6e3d8c",
            "2b3958255698811e",
            "8aab00cd65ccbebc",
            "32d6980f748e37a5",
            "62577cb0cc8f9bc5"
        ],
        "x": 54,
        "y": 4119,
        "w": 1292,
        "h": 862
    },
    {
        "id": "3c0806d8c07e2d4a",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "heartbeat_request",
            "heartbeat_success",
            "heartbeat_check",
            "heartbeat_alert",
            "56a3e6090f3f3f13",
            "dd03e86f89549f23",
            "32c96a4e68fc9d38",
            "98d9105a0fe9c4f2",
            "9d7c0453e92f3eb0",
            "heartbeat_modbus",
            "1891ff190c2b30dc",
            "babd223a9d940a0a"
        ],
        "x": 54,
        "y": 5479,
        "w": 932,
        "h": 362
    },
    {
        "id": "b2387cf1c1f9066f",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "42e37092c2672e48",
            "2425e4aac2f29b35",
            "f78b0d87bd180969",
            "fcaa640b2f7de25a",
            "40cf32dbbea3cb5b",
            "0f5641a1acf5eeda",
            "a41148cd8fa6b452",
            "e9289b689f0b5e3e",
            "299053fa01342bc8",
            "bd7d6e9091f594cc",
            "8ee848ca2c5eacca",
            "ebc99a25bec0f07d",
            "38e0892783d5c8ca",
            "0e20b32b0c110503",
            "d75702393effd7c1",
            "c06988ef1045565b",
            "56f29ee35375fbc1"
        ],
        "x": 54,
        "y": 5059,
        "w": 1212,
        "h": 302
    },
    {
        "id": "e963842154a5297f",
        "type": "group",
        "z": "0e1f3206f48adf14",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "8eb07d2b571bf3fd",
            "da9eab8ee8993426"
        ],
        "x": 54,
        "y": 3919,
        "w": 312,
        "h": 122
    },
    {
        "id": "cade13d4f42d5807",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": 8086,
        "protocol": "http",
        "database": "database",
        "name": "CCH_influxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "timeout": 10,
        "rejectUnauthorized": true
    },
    {
        "id": "ca731339695e2524",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": 8086,
        "protocol": "http",
        "database": "database",
        "name": "CCHCloud",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "https://us-east-1-1.aws.cloud2.influxdata.com/",
        "timeout": 10,
        "rejectUnauthorized": true
    },
    {
        "id": "f905b5f3395bcec1",
        "type": "modbus-client",
        "name": "AEM1",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "10.0.0.10",
        "tcpPort": 502,
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": 9600,
        "serialDatabits": 8,
        "serialStopbits": 1,
        "serialParity": "none",
        "serialConnectionDelay": 100,
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "3c1a688be99acbdc",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "Tahoma,Geneva,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "Tahoma,Geneva,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d3d55aa3f04b322d",
        "type": "ui_tab",
        "name": "AEM1-Control",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "78c63c00e1f5b7aa",
        "type": "ui_group",
        "name": "Control",
        "tab": "d3d55aa3f04b322d",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8dfb09ca026a96ce",
        "type": "ui_tab",
        "name": "AEM1-Monitor",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8957cf7476477dee",
        "type": "ui_tab",
        "name": "AEM1-P&ID",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "03ac2f6393c19355",
        "type": "ui_group",
        "name": "Data Table",
        "tab": "8dfb09ca026a96ce",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "adaa473fe0dfd2cc",
        "type": "ui_group",
        "name": "Coil status",
        "tab": "8dfb09ca026a96ce",
        "order": 2,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2d8055515cc5bf53",
        "type": "ui_group",
        "name": "P&ID and Manual Operation",
        "tab": "8957cf7476477dee",
        "order": 4,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "542918f4c374e490",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "page",
        "navigationStyle": "default",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": 1,
        "showDisconnectNotification": true,
        "allowInstall": true
    },
    {
        "id": "51332e42f70be886",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "36c65bd960cf7dbe",
        "type": "ui-page",
        "name": "AEM1 v2",
        "ui": "542918f4c374e490",
        "path": "/page1",
        "icon": "home",
        "layout": "grid",
        "theme": "51332e42f70be886",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "4afe546e24b27211",
        "type": "ui-group",
        "name": "Control",
        "page": "36c65bd960cf7dbe",
        "width": "4",
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "27b4d8d85025283e",
        "type": "ui-group",
        "name": "Monitor",
        "page": "36c65bd960cf7dbe",
        "width": "4",
        "height": 1,
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "43d8a259e21e9d16",
        "type": "ui-group",
        "name": "Manual and P&ID",
        "page": "36c65bd960cf7dbe",
        "width": "4",
        "height": 1,
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "531cd27466139d99",
        "type": "ui-page",
        "name": "PS Manual Test",
        "ui": "542918f4c374e490",
        "path": "/page2",
        "icon": "home",
        "layout": "grid",
        "theme": "51332e42f70be886",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "2004d5a11cd15969",
        "type": "ui-group",
        "name": "Group Name",
        "page": "531cd27466139d99",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "5075a7d8e4947586",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px",
            "density": "default"
        }
    },
    {
        "id": "d0621b8f20aee671",
        "type": "ui-page",
        "name": "Charts",
        "ui": "542918f4c374e490",
        "path": "/charts",
        "icon": "home",
        "layout": "notebook",
        "theme": "5075a7d8e4947586",
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "8de7b0ba54b83e6a",
        "type": "ui-group",
        "name": "Line Charts",
        "page": "d0621b8f20aee671",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "3da0442fed5034a1",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "2d8055515cc5bf53",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "d6e21611327658a2",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "2d8055515cc5bf53",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "240da3aab4d221ce",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "2d8055515cc5bf53",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "ea357ff36bec97ac",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "2d8055515cc5bf53",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "40347b1ed62059c6",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "2d8055515cc5bf53",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "305a249a82118813",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "2d8055515cc5bf53",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "b3714dcb7ce96c8b",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "2d8055515cc5bf53",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "c66ede0cf1862607",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "2d8055515cc5bf53",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "344eeafe6c0a51d2",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "2d8055515cc5bf53",
        "order": 28,
        "width": 2,
        "height": 1
    },
    {
        "id": "089ca021ddbcf9ef",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "2d8055515cc5bf53",
        "order": 30,
        "width": 2,
        "height": 1
    },
    {
        "id": "0d07e459be98abf3",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "78c63c00e1f5b7aa",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "8c592afd3c3d6794",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "78c63c00e1f5b7aa",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "f469e98aaba160c7",
        "type": "ui_spacer",
        "z": "0e1f3206f48adf14",
        "name": "spacer",
        "group": "78c63c00e1f5b7aa",
        "order": 18,
        "width": 4,
        "height": 1
    },
    {
        "id": "401a02e5f0a36a3a",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "name": "Start Test Script",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "iso",
        "payloadType": "date",
        "x": 1060,
        "y": 80,
        "wires": [
            [
                "7359636993bb200e"
            ]
        ]
    },
    {
        "id": "b2ffb736253c42ce",
        "type": "file in",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Read Test Script CSV",
        "filename": "/app/files/Test Sequence Script.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 540,
        "y": 2300,
        "wires": [
            [
                "d7b83c3bdbc132fc",
                "b3d28003c8a9b96e"
            ]
        ]
    },
    {
        "id": "d7b83c3bdbc132fc",
        "type": "csv",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Parse CSV to JSON",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 880,
        "y": 2160,
        "wires": [
            [
                "f6e55c6746f2e0d0"
            ]
        ]
    },
    {
        "id": "1b3f23fa28e5b05a",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Process Test Sequence",
        "func": "// Initialize index to track the current row being processed\nvar index = 0;\n\n// Store CSV data from the incoming message payload\nvar data = msg.payload;\n\nlet timeoutID2 = flow.get(\"timeoutID2\");\n\n// Ensure the data is an array before processing\nif (!Array.isArray(data) || data.length === 0) {\n    node.error(\"CSV data is empty or not an array\", msg);\n    return null;\n}\n\nfunction processNextRow() {\n    // Check if all rows have been processed\n    if (index >= data.length) {\n        node.status({ text: \"Test Completed\" });\n        flow.set(\"testStep\", \"Test Completed\");\n        var triggerMsg = { payload: \"Test Completed\" };\n        node.send([null, triggerMsg]);\n        return;\n    }\n\n    var row = data[index];\n\n    // Validate row data before processing\n    if (!row || row.Duration === undefined) {\n        node.error(`Invalid row data at index ${index}: ${JSON.stringify(row)}`, msg);\n        return;\n    }\n\n    node.status({ text: `Row ${index + 1}: Processing setpoints` });\n    flow.set(\"testStep\", \"Test Step\" + (index + 1));\n    flow.set(\"scriptStep\", (index+1));\n\n    let modbusValues = [];\n    let address = 100; // Starting Modbus address, adjust as needed\n\n    // Process all elements in the row except 'Test Step' and 'Duration'\n    Object.keys(row).forEach(tag => {\n        if (tag !== \"Test_step\" && tag !== \"Duration\") {\n            let buffer = Buffer.alloc(4);\n            buffer.writeFloatBE(parseFloat(row[tag]), 0);\n            modbusValues.push(buffer.readUInt16BE(2)); // High 16 bits\n            modbusValues.push(buffer.readUInt16BE(0)); // Low 16 bits\n        }\n    });\n\n    // Ensure modbusValues length is even (required for Modbus FC16)\n    if (modbusValues.length % 2 !== 0) {\n        node.error(\"Invalid register quantity: Must be an even number\", msg);\n        return;\n    }\n\n    // Create Modbus write message with all setpoints\n    var combinedMsg = {\n        payload: {\n            'unitId': 1,\n            'fc': 16,  // Function Code: Write Multiple Registers\n            'address': address,  // Starting address for the first tag.  Modbus Address (400001 - 400001 = 10 for 0-based addressing)\n            'quantity': modbusValues.length,\n            'value': modbusValues\n        }\n    };\n\n    // Retrieve test duration and initialize counter\n    var duration = parseInt(row.Duration);\n    var counter = 0;\n\n    function loop() {\n        let stopTest = flow.get(\"stopTest\");\n        let permStatus = flow.get(\"permStatus\");\n        let modHoldReg = flow.get(\"modHoldReg\") || [];\n\n        if (stopTest === true || permStatus === false) {\n            let statusMessage = \"Stopped\";\n            node.status({ text: statusMessage });\n            flow.set(\"testStep\", statusMessage);\n\n            if (timeoutID2) {\n                clearTimeout(timeoutID2);\n                flow.set(\"timeoutID2\", null); // Clear the timeout ID from flow\n            }\n\n            let currentSetpoint = modHoldReg.find(entry => entry[\"Tag Name\"] === \"Current_Setpoint\");\n            let voltageSetpoint = modHoldReg.find(entry => entry[\"Tag Name\"] === \"Voltage_Setpoint\");\n\n            let resetMsg = {\n                payload: {\n                    'unitId': 1,\n                    'fc': 16,\n                    'address': Math.min(currentSetpoint[\"MODBUS Start Address\"], voltageSetpoint[\"MODBUS Start Address\"]) - 400001,\n                    'quantity': 4,\n                    'value': [0, 0, 0, 0]  // Set both to zero\n                }\n            };\n\n            var triggerMsg = { payload: \"Test Completed\" };\n\n            // Send email alert if permStatus is false\n            if (permStatus === false) {\n                var emailMsg = {\n                    topic: \"ALERT: Test Stand AEM1 Stopped Due to permStatus\",\n                    payload: \"The test on AEM1 has been stopped because permStatus is FALSE. Please check the system immediately.\"\n                };\n                node.send([resetMsg, triggerMsg, emailMsg]); // Send email as third output\n            } else {\n                node.send([resetMsg, triggerMsg]);\n            }\n            return;\n        }\n\n        if (counter < duration) {\n            node.send([combinedMsg, null]);\n            counter++;\n            timeoutID2 = setTimeout(loop, 1000); // Check conditions every second\n            flow.set(\"timeoutID2\", timeoutID2); // Store the timeout ID in flow\n        } else {\n            index++;\n            processNextRow();\n        }\n    }\n\n\n    loop(); // Start the counter loop\n}\n\n// Start processing the first row\n// Clear timeout if test is stopped\nif (flow.get(\"testStep\") === \"Stopped\") {\n    if (timeoutID2) {\n        clearTimeout(timeoutID2);\n        flow.set(\"timeoutID2\", null); // Clear the timeout ID from flow\n    }\n} else {\n    processNextRow();\n}\n\n\nreturn null;\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2300,
        "wires": [
            [
                "bbfb835cba9a9b5a",
                "76a236a0770e41b9"
            ],
            [
                "6b9d33d8dd75bde6",
                "db7d84da82eb83ee",
                "e3b7e200883886f3"
            ],
            [
                "5a3ab29e6c62a71c"
            ]
        ]
    },
    {
        "id": "76a236a0770e41b9",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "debug_main_process CSV rows",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 2240,
        "wires": []
    },
    {
        "id": "aa5db110eb32f34a",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Read 001-100_PV values",
        "func": "// Retrieve logTags from flow context\nlet logTags = flow.get(\"logTags\") || [];\nlet tags_400001_400100 = flow.get(\"tags_400001_400100\") || [];\n// Each float requires 2 Modbus registers\nlet quantity = tags_400001_400100.length*2;//logTags.length * 2;\n\n// Construct Modbus request\nmsg.payload = {\n    'unitId': 1,       // PLC Modbus Unit ID\n    'fc': 3,          // Function Code: Read Holding Registers\n    'address': 0,    // Modbus Address (400001 - 400001 = 10 for 0-based addressing)\n    'quantity': quantity  // Dynamic quantity based on logTags\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1700,
        "wires": [
            [
                "56b364be4f21de16",
                "fe0bb0717405edc1"
            ]
        ]
    },
    {
        "id": "9c9c3c1ab31cb97b",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Modbus Data Parsing",
        "func": "// Ensure payload is received\nif (!msg.payload) {\n    node.warn(\"Missing payload\");\n    return null;\n}\n\n// Retrieve all hold register tag names from flow context\nlet tags_400001_400100 = flow.get(\"tags_400001_400100\") || [];\nlet parsedData = {};\nlet buffer = Buffer.alloc(4);\n\n// Define tags to keep at 3 decimal places\nconst threeDecimalTags = [\"PSVoltage_PV\", \"Cell1_Voltage\", \"Cell2_Voltage\", \"Cell3_Voltage\", \"CT201_PV\", \"CT210_PV\"];\n\n// Add timestamp\nlet timestamp = new Date().toISOString();\nparsedData[\"timestamp\"] = timestamp;\n\n// Process Modbus response dynamically\nfor (let i = 0; i < tags_400001_400100.length; i++) {\n    let tagName = tags_400001_400100[i];\n\n    // Ensure we have enough data for each tag (each float takes 2 registers)\n    if ((i * 2 + 1) < msg.payload.length) {\n        buffer.writeUInt16BE(msg.payload[i * 2], 2);\n        buffer.writeUInt16BE(msg.payload[i * 2 + 1], 0);\n        let rawValue = buffer.readFloatBE(0);\n\n        // Apply conditional rounding\n        parsedData[tagName] = parseFloat(\n            rawValue.toFixed(threeDecimalTags.includes(tagName) ? 3 : 1)\n        );\n    } else {\n        node.warn(`Insufficient data for tag: ${tagName}`);\n        parsedData[tagName] = null;\n    }\n}\n\n// Set the parsed data as the new payload\nmsg.payload = parsedData;\nflow.set(\"modHoldReg001-100_PV\", msg.payload);\n\n// Extract the timestamp\nvar logData = { \"timestamp\": parsedData.timestamp };\n\n// Get the first 14 tags (excluding timestamp)\nvar keys = Object.keys(parsedData).filter(key => key !== \"timestamp\").slice(0, 14);\n\n// Populate logData with selected tags\nkeys.forEach(key => {\n    logData[key] = parsedData[key];\n});\n\n// Save logData back to flow context\nflow.set(\"logData\", logData);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1700,
        "wires": [
            [
                "46957ef2a3ec2d2f"
            ]
        ]
    },
    {
        "id": "fe0bb0717405edc1",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "debug_getter input",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1640,
        "wires": []
    },
    {
        "id": "44769ace05fdd10b",
        "type": "trigger",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "Test Completed",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 440,
        "y": 1700,
        "wires": [
            [
                "9aa23de8df763ac7",
                "aa5db110eb32f34a",
                "347a216086cf6bf8",
                "0c5a4cdd7c4ca1a6"
            ]
        ]
    },
    {
        "id": "6b9d33d8dd75bde6",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "End of test",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 2240,
        "wires": []
    },
    {
        "id": "f6e9e2024354ebb6",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Test Complete",
        "info": "Test complete triggers data logging stop",
        "x": 990,
        "y": 2360,
        "wires": []
    },
    {
        "id": "db7d84da82eb83ee",
        "type": "link out",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Test complete_out",
        "mode": "link",
        "links": [
            "ef7e4a5d1320bf80",
            "375e0ce60e51a32b",
            "be2a05249dece704"
        ],
        "x": 875,
        "y": 2360,
        "wires": []
    },
    {
        "id": "e493350636115e64",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Process log tag read",
        "func": "// Function Node: Log Tag Retrieve\n// Converts a comma-separated string into an array of log tag names\n\nif (!msg.payload || typeof msg.payload !== 'string') {\n    node.warn(\"No valid input string received\");\n    return null;\n}\n\ntry {\n    // Convert CSV header into an array of log tag names\n    let logTags = msg.payload.split(',').map(tag => tag.trim());\n\n    // Store log tags in flow context\n    flow.set(\"logTags\", logTags);\n\n    // Pass through log tags\n    msg.payload = logTags;\n} catch (err) {\n    node.warn(\"Error processing input string: \" + err.message);\n    msg.payload = [];\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "edc71474186d9603",
        "type": "file in",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Read log tag csv file",
        "filename": "/app/files/Log Tag.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 240,
        "y": 1760,
        "wires": [
            [
                "e493350636115e64"
            ]
        ]
    },
    {
        "id": "a1a88e13dcb6c08c",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Convert object to array",
        "func": "// Function Node: Object to Array Converter\n// Converts an object into an array containing a single object\n\nif (typeof msg.payload !== \"object\" || msg.payload === null) {\n    node.warn(\"Payload is not a valid object\");\n    return null;\n}\n\nlet utcDate = new Date(msg.payload.timestamp);\nlet estDate = utcDate.toLocaleString(\"en-US\", {\n    timeZone: \"America/New_York\"\n\n})\nmsg.payload.timestamp = estDate;\n// Wrap the object inside an array\nmsg.payload = [msg.payload];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 1660,
        "wires": [
            [
                "15100a34803ec0b4"
            ]
        ]
    },
    {
        "id": "ef7e4a5d1320bf80",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "name": "Test complete_in",
        "links": [
            "db7d84da82eb83ee"
        ],
        "x": 1525,
        "y": 1320,
        "wires": [
            [
                "9241aded0efea985"
            ]
        ]
    },
    {
        "id": "7359636993bb200e",
        "type": "link out",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "name": "Test start_output",
        "mode": "link",
        "links": [
            "bfa18773572a7fef",
            "e82e6a879dd35783",
            "3a2e5ae01db4a464",
            "75e9b4cbb923d25a"
        ],
        "x": 1335,
        "y": 120,
        "wires": []
    },
    {
        "id": "bfa18773572a7fef",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "link in 2",
        "links": [
            "7359636993bb200e"
        ],
        "x": 95,
        "y": 2300,
        "wires": [
            [
                "2a7dda672fc3e645"
            ]
        ]
    },
    {
        "id": "c955b39b856d6b12",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "name": "Test start",
        "info": "Read script and process set points. \n",
        "x": 640,
        "y": 100,
        "wires": []
    },
    {
        "id": "2c3d63ee4f877c5a",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "name": "Test stand status indication",
        "info": "",
        "x": 1470,
        "y": 1140,
        "wires": []
    },
    {
        "id": "526e1843558ad752",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "name": "Test stop_in",
        "links": [
            "ad1436e2f7b892fd"
        ],
        "x": 1525,
        "y": 1280,
        "wires": [
            [
                "9241aded0efea985"
            ]
        ]
    },
    {
        "id": "ad1436e2f7b892fd",
        "type": "link out",
        "z": "0e1f3206f48adf14",
        "g": "525f6434f47c15f1",
        "name": "Test stop_out",
        "mode": "link",
        "links": [
            "526e1843558ad752",
            "5811aec5a8ea97c9",
            "a28627b538e4350e",
            "601c184cc8cd4fe2"
        ],
        "x": 1865,
        "y": 160,
        "wires": []
    },
    {
        "id": "87476d790eb1dfab",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "525f6434f47c15f1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Stopped",
        "payloadType": "str",
        "x": 1680,
        "y": 140,
        "wires": [
            [
                "ad1436e2f7b892fd"
            ]
        ]
    },
    {
        "id": "e82e6a879dd35783",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "name": "Test start_input",
        "links": [
            "7359636993bb200e"
        ],
        "x": 1525,
        "y": 1240,
        "wires": [
            [
                "9241aded0efea985"
            ]
        ]
    },
    {
        "id": "29d0ac5a03343b5a",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "name": "Test start",
        "info": "",
        "x": 1430,
        "y": 1240,
        "wires": []
    },
    {
        "id": "cb949aacedf8b399",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "name": "Test stop",
        "info": "",
        "x": 1430,
        "y": 1280,
        "wires": []
    },
    {
        "id": "23e13ab57ea9677a",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "name": "Test complete",
        "info": "",
        "x": 1440,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9aa23de8df763ac7",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Retrieve test step",
        "func": "msg.payload = flow.get(\"testStep\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1900,
        "wires": [
            [
                "24805c900167c968",
                "fb1edbf186530db5",
                "b1d6242f17150944"
            ]
        ]
    },
    {
        "id": "fb1edbf186530db5",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1880,
        "wires": []
    },
    {
        "id": "15100a34803ec0b4",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Tranverse",
        "func": "// Ensure payload is an array with at least one object\nif (!Array.isArray(msg.payload) || msg.payload.length === 0) {\n    node.warn(\"Invalid payload format\");\n    return null;\n}\n\n// Take the latest data row (assuming the first row is the most recent)\nlet dataRow = msg.payload[0];\n\n// Convert object keys to a vertical table format\nlet verticalTable = Object.keys(dataRow).map(key => {\n    return { \"Parameter\": key, \"Value\": dataRow[key] };\n});\n\n// Send transformed data to ui_table\nmsg.payload = verticalTable;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 1660,
        "wires": [
            [
                "81b6eb9b5e5dcf0a",
                "57475c8c2078282c"
            ]
        ]
    },
    {
        "id": "968c5c6feb1e2ed1",
        "type": "exec",
        "z": "0e1f3206f48adf14",
        "d": true,
        "g": "ad5ef647cb4ea746",
        "command": "powershell -command \"& {Add-Type -AssemblyName System.Windows.Forms; $f = New-Object System.Windows.Forms.OpenFileDialog; $f.ShowDialog() | Out-Null; Write-Output $f.FileName}\"",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "File path picker",
        "x": 2660,
        "y": 2280,
        "wires": [
            [
                "65f4a6d329a20c56"
            ],
            [],
            []
        ]
    },
    {
        "id": "65f4a6d329a20c56",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "d": true,
        "g": "ad5ef647cb4ea746",
        "name": "function 8",
        "func": "// Check if the user selected a file, otherwise set default text\nlet filePath = msg.payload.trim();\nif (filePath === \"\") {\n    filePath = \"No file selected\";\n}\n\n// Store the file path as a flow variable\nflow.set(\"test_sequence_path\", filePath);\n\n// Send the file path as the output\nmsg.payload = filePath;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2840,
        "y": 2280,
        "wires": [
            [
                "c64bdfa07c836a68"
            ]
        ]
    },
    {
        "id": "d835db8fa2b703e5",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "PV_tag_compile",
        "func": "// Retrieve logTags array from flow context\nlet logTags = flow.get(\"logTags\") || [];\n\n// Ensure logTags is an array with values\nif (!Array.isArray(logTags) || logTags.length === 0) {\n    msg.options = [];  // Return an empty array if no valid data\n    return msg;\n}\n\n// Create an array of dropdown options with key-value pairs (e.g., { \"TECell_PV\": \"TECell_PV\" })\nlet dropdownOptions = logTags.map(tag => ({\n    [tag]: tag  // Dynamic key-value pair\n}));\n\n// Assign the array to msg.options\nmsg.options = dropdownOptions;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1520,
        "wires": [
            [
                "a6d1d00bbd920ed1"
            ]
        ]
    },
    {
        "id": "aa176dc0751837e6",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "History data",
        "func": "// Retrieve historical data storage or initialize if empty\nlet history = flow.get(\"modbus_history\") || {};\n\n// Get the current Modbus Data PV\nlet modbusData = flow.get(\"modHoldReg_PV\") || {};\n\n// Get the current timestamp\nlet timestamp = new Date().getTime();\n\n// Loop through Modbus Data PV and store each parameter over time\nObject.keys(modbusData).forEach(param => {\n    if (!history[param]) {\n        history[param] = []; // Initialize array for each parameter\n    }\n\n    // Add new data point (timestamp, value)\n    history[param].push({ x: timestamp, y: modbusData[param] });\n\n    // Keep only the last 15 minutes of data (900,000 ms)\n    history[param] = history[param].filter(point => timestamp - point.x <= 60000);\n});\n\n// Save updated history in flow memory\nflow.set(\"modbus_history\", history);\nmsg.payload = history;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1740,
        "wires": [
            [
                "92177eb81bdef385",
                "718c1d4a24b148bb"
            ]
        ]
    },
    {
        "id": "92177eb81bdef385",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Data for chart",
        "func": "// Retrieve selected parameter from dropdown\n//let selectedParam = msg.payload || \"TECell_PV\";\nlet selectedParam = flow.get(\"chartLegend\") || \"TECell_PV\";\n// Retrieve historical data\nlet history = flow.get(\"modbus_history\") || {};\n\nlet chart = {\n    \"series\": [selectedParam],  // Modify this if you have multiple series\n    \"data\": [history[selectedParam] || []],  // Wrap inputData in an array\n    \"labels\": [\"\"]\n};\n\n// Assign the formatted object to msg.payload\nmsg.payload = [chart];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1740,
        "wires": [
            [
                "c01aa3cf6b0ca42b"
            ]
        ]
    },
    {
        "id": "0acf4c3f1837eb3e",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "chartLegend",
        "func": "flow.set(\"chartLegend\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "49263ca4933dbd63",
        "type": "link out",
        "z": "0e1f3206f48adf14",
        "g": "1c1f20c3ada10fc1",
        "name": "Repeat inject after deploy",
        "mode": "link",
        "links": [
            "0d0fd00deab4a399",
            "62c4e491e6bcbed7",
            "c7de23c01c2709f7",
            "1b952520d5aaf90b",
            "56a3e6090f3f3f13",
            "3c13fa52a4957e3a"
        ],
        "x": 415,
        "y": 100,
        "wires": []
    },
    {
        "id": "1adcfbfd7586ce6b",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Ready to send setpoints",
        "info": "Process test script and setpoints",
        "x": 180,
        "y": 2260,
        "wires": []
    },
    {
        "id": "f8e57f19654fa8e7",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "1c1f20c3ada10fc1",
        "name": "Single inject after deploy",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "1ee5227dd94e166a",
                "df1fd79072832199"
            ]
        ]
    },
    {
        "id": "e40c571c4e7e87b2",
        "type": "link out",
        "z": "0e1f3206f48adf14",
        "g": "1c1f20c3ada10fc1",
        "name": "Single inject after deploy_out",
        "mode": "link",
        "links": [
            "561af053f2a01b14",
            "f9d70936d5ff8c9b",
            "51d5578553b543b6",
            "e9289b689f0b5e3e"
        ],
        "x": 395,
        "y": 200,
        "wires": []
    },
    {
        "id": "561af053f2a01b14",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "d": true,
        "g": "8523ba6f048159f6",
        "name": "Single inject after deploy_in",
        "links": [
            "e40c571c4e7e87b2"
        ],
        "x": 145,
        "y": 1720,
        "wires": [
            [
                "edc71474186d9603"
            ]
        ]
    },
    {
        "id": "3ca569c54e5ebb61",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Get flow data",
        "func": "// Clear previous timeout if it exists\nlet timeoutID = flow.get(\"logLoopTimeoutID\");\nif (timeoutID) {\n    clearTimeout(timeoutID);\n    flow.set(\"logLoopTimeoutID\", null);\n}\n\n// Retrieve logging interval in seconds\nlet interval = flow.get(\"logIntervalSec\") || 5; // Default to 5 seconds if not set\nlet measurement = flow.get(\"influxMeasurement\") || \"testID_miss\";\n\n// Check system status\nlet isRunning = flow.get(\"System_Running_test\") === true;\n\nif (isRunning) {\n    // Retrieve logging data\n    let logData = flow.get(\"logData\") || {};\n    let scriptStep = flow.get(\"scriptStep\") || 0;\n\n    // Merge log data with script step\n    let logDataWithStep = {\n        ...logData,\n        step: scriptStep\n    };\n\n    // Send data\n    node.send([{ \n        payload: logDataWithStep,\n        measurement: measurement }]);\n}\n\n// Schedule the next logging event\nlet newTimeout = setTimeout(() => {\n    node.send([{payload: \"triggerLog\"}]); // Feed this back into the same function\n}, interval * 1000);\n\n// Save timeout ID so we can cancel it later\nflow.set(\"logLoopTimeoutID\", newTimeout);\n\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2700,
        "wires": [
            [
                "2ff1bd7c6ae39338"
            ]
        ]
    },
    {
        "id": "3a2e5ae01db4a464",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "dataLog_start",
        "links": [
            "7359636993bb200e"
        ],
        "x": 125,
        "y": 2660,
        "wires": [
            [
                "3ae3b1dd7f0614df"
            ]
        ]
    },
    {
        "id": "a54b88ebdc027299",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Data logging management",
        "info": "",
        "x": 210,
        "y": 2620,
        "wires": []
    },
    {
        "id": "0a90f31996d9f9fb",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Get logTags and Display",
        "info": "",
        "x": 210,
        "y": 1540,
        "wires": []
    },
    {
        "id": "fa4ba3044dddabf0",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "ad5ef647cb4ea746",
        "name": "Test script select",
        "info": "",
        "x": 2480,
        "y": 2240,
        "wires": []
    },
    {
        "id": "csv_input",
        "type": "file in",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "Read CSV File",
        "filename": "/app/files/TKD Lambda PowerSupply Testing_Extended.csv",
        "filenameType": "str",
        "format": "utf8",
        "encoding": "utf8",
        "allProps": false,
        "x": 300,
        "y": 1240,
        "wires": [
            [
                "csv_parser",
                "08c0de3d9a6fc2c8"
            ]
        ]
    },
    {
        "id": "csv_parser",
        "type": "csv",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "Parse CSV",
        "spec": "rfc",
        "sep": ",",
        "hdrin": true,
        "multi": "mult",
        "temp": "",
        "skip": 0,
        "strings": true,
        "include_empty_strings": true,
        "include_null_values": true,
        "x": 500,
        "y": 1240,
        "wires": [
            [
                "filter_modbus_tags",
                "53582435e115617e"
            ]
        ]
    },
    {
        "id": "filter_modbus_tags",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "Filter Modbus Tags",
        "func": "// Ensure msg.payload is an array\nif (!Array.isArray(msg.payload)) {\n    node.error(\"Invalid data: Expected an array, but got \" + typeof msg.payload);\n    return;\n}\n\n// Store incoming payload as allTags\nlet allTags = msg.payload;\n\n// Filter relevant columns\nlet validTags = allTags.map(tag => ({\n    \"Tag Name\": tag[\"Tag Name\"],\n    \"MODBUS Start Address\": tag[\"MODBUS Start Address\"],\n    \"MODBUS End Address\": tag[\"MODBUS End Address\"],\n    \"Data Type\": tag[\"Data Type\"]\n})).filter(tag => tag[\"MODBUS Start Address\"] && !isNaN(parseInt(tag[\"MODBUS Start Address\"])));\n\n// Sort by Modbus Start Address\nvalidTags.sort((a, b) => parseInt(a[\"MODBUS Start Address\"]) - parseInt(b[\"MODBUS Start Address\"]));\n\n// Separate modbus types\nlet modCoil = [];\nlet modDisInput = [];\nlet modInputReg = [];\nlet modHoldReg = [];\n\n// Filter based on Modbus Address Range\nvalidTags.forEach(tag => {\n    let address = parseInt(tag[\"MODBUS Start Address\"]);\n    if (address >= 1 && address <= 99999) {\n        modCoil.push(tag);\n    } else if (address >= 100001 && address <= 199999) {\n        modDisInput.push(tag);\n    } else if (address >= 300001 && address <= 399999) {\n        modInputReg.push(tag);\n    } else if (address >= 400001 && address <= 499999) {\n        modHoldReg.push(tag);\n    }\n});\n\n// Store as flow variables\nflow.set(\"modCoil\", modCoil);\nflow.set(\"modDisInput\", modDisInput);\nflow.set(\"modInputReg\", modInputReg);\nflow.set(\"modHoldReg\", modHoldReg);\n\n// Debug logs\n//node.warn(`Stored Coil Tags: ${JSON.stringify(modCoil)}`);\n//node.warn(`Stored Discrete Input Tags: ${JSON.stringify(modDisInput)}`);\n//node.warn(`Stored Input Register Tags: ${JSON.stringify(modInputReg)}`);\n//node.warn(`Stored Holding Register Tags: ${JSON.stringify(modHoldReg)}`);\n\n// Send outputs separately using node.send()\nreturn [\n    { payload: validTags },  // Output 1: Valid Tags Array\n    { payload: modCoil },      // Output 2: Coil Tags\n    { payload: modDisInput },  // Output 3: Discrete Input Tags\n    { payload: modInputReg },  // Output 4: Input Register Tags\n    { payload: modHoldReg }    // Output 5: Holding Register Tags\n];\n",
        "outputs": 5,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1240,
        "wires": [
            [
                "debug_output"
            ],
            [
                "ba78053e5aaa7eed",
                "97f1c00a4c80b34b"
            ],
            [],
            [],
            [
                "023cde579789cf6c"
            ]
        ]
    },
    {
        "id": "debug_output",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "Debug Coil & Float Tags",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f76507ef24e89f5d",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1180,
        "wires": [
            [
                "csv_input"
            ]
        ]
    },
    {
        "id": "ba78053e5aaa7eed",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1240,
        "wires": []
    },
    {
        "id": "023cde579789cf6c",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1280,
        "wires": []
    },
    {
        "id": "6de10b54dda585b9",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "name": "modPerms_read",
        "func": "// Retrieve stored coil tags\nlet modCoil = flow.get(\"modCoil\") || [];\n\n// Ensure there are coil tags to read\nif (modCoil.length === 0) {\n    //node.warn(\"No coil tags found to read.\");\n    return null;\n}\n\n// Get the starting Modbus address (first coil)\nlet startAddress = parseInt(modCoil[0][\"MODBUS Start Address\"]) - 1; // Convert to zero-based\nlet quantity = modCoil.length; // Read all coils in a single request\n\n// Create Modbus request payload\nmsg.payload = {\n    \"fc\": 1,  // Function Code for reading coils\n    \"unitid\": 1,  // PLC Modbus ID\n    \"address\": startAddress,\n    \"quantity\": quantity\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 940,
        "wires": [
            [
                "9d6d4a50ba28b501",
                "6e3c014f7a83dc6e"
            ]
        ]
    },
    {
        "id": "33456f72e3f84419",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "name": "Process Coil Response",
        "func": "// Retrieve coil tags for mapping\nlet modCoil = flow.get(\"modCoil\") || [];\nlet coilStatus = msg.payload || [];\n\n// Ensure we have valid data\nif (coilStatus.length < modCoil.length) {\n    node.warn(\"Received fewer coil values than expected.\");\n    return null;\n}\n\n// Extract only the required coil statuses\nlet modbusCoilStatus = {};\nfor (let i = 0; i < modCoil.length; i++) {\n    modbusCoilStatus[modCoil[i][\"Tag Name\"]] = coilStatus[i]; // Map to tag name\n}\n\n// Store coil statuses in flow variable\nflow.set(\"modbusCoilStatus\", modbusCoilStatus);\n\n// Debug log\n//node.warn(`Updated Coil Status: ${JSON.stringify(modbusCoilStatus)}`);\n\nreturn { payload: modbusCoilStatus };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 940,
        "wires": [
            [
                "18ecbf3af9f09387",
                "29a608f961f5dfce",
                "31fc354c9835486a",
                "59da409b16514d35",
                "1e643c04615836d9"
            ]
        ]
    },
    {
        "id": "2e2281a7ce0eced6",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "name": "Read coil status from PLC and display",
        "info": "",
        "x": 230,
        "y": 880,
        "wires": []
    },
    {
        "id": "c7de23c01c2709f7",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "name": "link in 3",
        "links": [
            "49263ca4933dbd63"
        ],
        "x": 115,
        "y": 940,
        "wires": [
            [
                "6de10b54dda585b9"
            ]
        ]
    },
    {
        "id": "f9d70936d5ff8c9b",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "Single inject after deploy_in",
        "links": [
            "e40c571c4e7e87b2"
        ],
        "x": 175,
        "y": 1240,
        "wires": [
            [
                "csv_input"
            ]
        ]
    },
    {
        "id": "510b431ad3e38e97",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "Read extended tag databse from PLC code",
        "info": "Change path when PLC program changes",
        "x": 620,
        "y": 1180,
        "wires": []
    },
    {
        "id": "375e0ce60e51a32b",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Test complete_in",
        "links": [
            "db7d84da82eb83ee"
        ],
        "x": 95,
        "y": 2840,
        "wires": [
            [
                "a1bf5e81cfcf58e3"
            ]
        ],
        "info": "Stop data logging"
    },
    {
        "id": "d00973e02ef2d64c",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Stop data logging (Abort/Test Complete)",
        "info": "",
        "x": 310,
        "y": 2880,
        "wires": []
    },
    {
        "id": "1fa25a2cb5e31ef6",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "32776a10d46d718d",
        "name": "Single coil read module. Input is tag name (string type)",
        "info": "",
        "x": 3120,
        "y": 640,
        "wires": []
    },
    {
        "id": "6c1ca61ccb0e9fe7",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Pulse for data table and trend chart displaying",
        "info": "",
        "x": 550,
        "y": 1860,
        "wires": []
    },
    {
        "id": "a1bf5e81cfcf58e3",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Stop logging",
        "func": "msg.payload = \"Stop data logging\";\nflow.set(\"testStep\", \"Test Completed\");\nlet logLoopTimeoutID = flow.get(\"logLoopTimeoutID\");\nif (logLoopTimeoutID) {\n    clearTimeout(logLoopTimeoutID);\n    flow.set(\"logLoopTimeoutID\", null);  // Optional: clean up the reference\n}\n\nlet csvRotationTimeoutID = flow.get(\"csvRotationTimeoutID\");\nif (csvRotationTimeoutID) {\n    clearTimeout(csvRotationTimeoutID);\n    flow.set(\"csvRotationTimeoutID\", null);  // Optional: clean up the reference\n}\nflow.set(\"System_Running_test\", false);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2840,
        "wires": [
            [
                "f3fbb69e2e543607"
            ]
        ]
    },
    {
        "id": "5811aec5a8ea97c9",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Test stop_in",
        "links": [
            "ad1436e2f7b892fd"
        ],
        "x": 95,
        "y": 2880,
        "wires": [
            [
                "a1bf5e81cfcf58e3"
            ]
        ]
    },
    {
        "id": "a28627b538e4350e",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Test stop_in",
        "links": [
            "ad1436e2f7b892fd"
        ],
        "x": 95,
        "y": 2420,
        "wires": [
            [
                "ffaf214f88de0731"
            ]
        ]
    },
    {
        "id": "3655c26dfb4896fd",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Pulse after start",
        "info": "1s pulse after hitting start button",
        "x": 720,
        "y": 2360,
        "wires": []
    },
    {
        "id": "ffaf214f88de0731",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Stop test",
        "func": "flow.set(\"stopTest\", true);\nflow.set(\"testStep\", \"Stopped\");\nlet timeoutID2 = flow.get(\"timeoutID2\");\nif (timeoutID2) {\n    clearTimeout(timeoutID2);\n    flow.set(\"timeoutID2\", null);  // Optional: clean up the reference\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 2420,
        "wires": [
            [
                "1b3f23fa28e5b05a",
                "33d09f0b8f4f9363"
            ]
        ]
    },
    {
        "id": "d38f94132ffbf8d2",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Hit ABORT",
        "info": "",
        "x": 360,
        "y": 2420,
        "wires": []
    },
    {
        "id": "1ee5227dd94e166a",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "1c1f20c3ada10fc1",
        "name": "Define initial value",
        "func": "flow.set(\"stopTest\", false);\nflow.set(\"test_sequence_path\", \"C: \\Users\\gonnk\\OneDrive - University of Delaware - o365\\Code\\Node - red\\Log Tag.csv\")\nflow.set(\"System_Running\",false);\nflow.set(\"procedureStatus\", \"Standby\");\nflow.set(\"scriptStep\",0);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 200,
        "wires": [
            [
                "e40c571c4e7e87b2"
            ]
        ]
    },
    {
        "id": "f57cc15c0a1a5d40",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Dropdown selection",
        "info": "",
        "x": 1250,
        "y": 1520,
        "wires": []
    },
    {
        "id": "b497c2e56b6b9439",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "1c1f20c3ada10fc1",
        "name": "Initialize flow values",
        "info": "",
        "x": 270,
        "y": 240,
        "wires": []
    },
    {
        "id": "3c9c30b75e7298df",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Process Test Sequence",
        "info": "",
        "x": 180,
        "y": 2200,
        "wires": []
    },
    {
        "id": "33d09f0b8f4f9363",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Check Run stage 3",
        "func": "let testStep = flow.get(\"testStep\");\nlet timeoutID = flow.get(\"timeoutID\"); // Retrieve the stored timeout ID\n\nfunction waitForRunStage() {\n    let modbusCoilStatus = flow.get(\"modbusCoilStatus\") || {};\n    let runPhase3 = modbusCoilStatus.Run_Phase_3;\n    if (testStep === \"Stopped\" || testStep === \"Permissive not met\"){\n    } else{\n        if (runPhase3 === true) {\n            node.send(msg); // Proceed when Run_Phase_3 is 1\n        } else {\n            flow.set(\"testStep\", \"Wait for Run_Phase_3\");\n            timeoutID = setTimeout(waitForRunStage, 1000); // Check again after 1 second\n            flow.set(\"timeoutID\", timeoutID); // Store the timeout ID in flow\n        }\n    }\n}\n\n// Clear timeout if test is complete\nif (testStep === \"Stopped\") {\n    //flow.set(\"testStep\", \"Stopped\");\n    if (timeoutID) {\n        clearTimeout(timeoutID);\n        flow.set(\"timeoutID\", null); // Clear the timeout ID from flow\n    }\n} else {\n    waitForRunStage();\n}\n\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2300,
        "wires": [
            [
                "b2ffb736253c42ce"
            ]
        ]
    },
    {
        "id": "78c83855ada6c722",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "Single coil write",
        "func": "// Retrieve the coil tag and setpoint from msg.payload\nlet { tag, setpoint } = msg.payload;\n\n// Retrieve Modbus coil address mapping from flow context\nlet modCoil = flow.get(\"modCoil\") || [];\n\n// Find the Modbus address for the given tag\nlet coilData = modCoil.find(entry => entry[\"Tag Name\"] === tag);\n\nif (!coilData) {\n    node.error(`Unknown coil tag: ${tag}`, msg);\n    return null;\n}\n\n// Convert Modbus address to 0-based integer\nlet address = parseInt(coilData[\"MODBUS Start Address\"], 10) - 1;\n\n// Construct Modbus write message\nmsg.payload = {\n    'unitId': 1,      // PLC Modbus Unit ID\n    'fc': 5,         // Function Code: Write Single Coil\n    'address': address, // Modbus coil address\n    'value': setpoint ? 1 : 0, // Convert boolean to 1 or 0\n    'quantity': 1\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 520,
        "wires": [
            [
                "2c986d49933c2836",
                "a2917e2f62739f51"
            ]
        ]
    },
    {
        "id": "0c0d9dd093999933",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "ac0118475b89b5f1"
            ]
        ]
    },
    {
        "id": "ac0118475b89b5f1",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "HMI_start",
        "func": "// First, send HMI_Start = true\nvar msg1 = { payload: { \"tag\": \"HMI_Start\", \"setpoint\": true } };\n\n// Create a second message to set it back to false after 1 second\nsetTimeout(() => {\n    var msg2 = { payload: { \"tag\": \"HMI_Start\", \"setpoint\": false } };\n    node.send(msg2);\n}, 1000);\n\n// Send the first message immediately\nreturn msg1;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 460,
        "wires": [
            [
                "78c83855ada6c722",
                "3d33c8da5bb204cf"
            ]
        ]
    },
    {
        "id": "a2cabbb3e1741f6d",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "HMI_stop",
        "func": "// First, send HMI_Stop = true\nvar msg1 = { payload: { \"tag\": \"HMI_Stop\", \"setpoint\": true } };\n\n// Create a second message to set it back to false after 1 second\nsetTimeout(() => {\n    var msg2 = { payload: { \"tag\": \"HMI_Stop\", \"setpoint\": false } };\n    node.send(msg2);\n}, 1000);\n\n// Send the first message immediately\nreturn msg1;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 540,
        "wires": [
            [
                "78c83855ada6c722"
            ]
        ]
    },
    {
        "id": "e3749f3cbe911471",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 500,
        "wires": [
            [
                "a2cabbb3e1741f6d"
            ]
        ]
    },
    {
        "id": "2a7dda672fc3e645",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Reset",
        "func": "// Get the permissive status from flow context\nlet permStatus = flow.get(\"permStatus\");\n\n// Determine the test step based on the permissive status\nlet testStep = permStatus === true ? \"Test to start\" : \"Permissive not met\";\n\n// Store it in flow context or return it as payload\nflow.set(\"testStep\", testStep);\n\nflow.set(\"stopTest\", false);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 2300,
        "wires": [
            [
                "33d09f0b8f4f9363"
            ]
        ]
    },
    {
        "id": "601c184cc8cd4fe2",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "link in 6",
        "links": [
            "ad1436e2f7b892fd"
        ],
        "x": 215,
        "y": 540,
        "wires": [
            [
                "a2cabbb3e1741f6d"
            ]
        ]
    },
    {
        "id": "75e9b4cbb923d25a",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "link in 7",
        "links": [
            "7359636993bb200e"
        ],
        "x": 205,
        "y": 460,
        "wires": [
            [
                "ac0118475b89b5f1"
            ]
        ]
    },
    {
        "id": "23ec338b4258df73",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 780,
        "y": 2420,
        "wires": [
            [
                "1b3f23fa28e5b05a"
            ]
        ]
    },
    {
        "id": "e3b7e200883886f3",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 2380,
        "wires": []
    },
    {
        "id": "be2a05249dece704",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "Test complete_in",
        "links": [
            "db7d84da82eb83ee"
        ],
        "x": 215,
        "y": 580,
        "wires": [
            [
                "a2cabbb3e1741f6d"
            ]
        ]
    },
    {
        "id": "97a11857dbdbcc02",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "1c1f20c3ada10fc1",
        "name": "On deploy",
        "info": "",
        "x": 140,
        "y": 100,
        "wires": []
    },
    {
        "id": "4ae111cdbb1031f3",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "525f6434f47c15f1",
        "name": "Test stop _ I changed topic to string.control",
        "info": "",
        "x": 1740,
        "y": 100,
        "wires": []
    },
    {
        "id": "df1fd79072832199",
        "type": "trigger",
        "z": "0e1f3206f48adf14",
        "g": "1c1f20c3ada10fc1",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 300,
        "y": 100,
        "wires": [
            [
                "49263ca4933dbd63"
            ]
        ]
    },
    {
        "id": "d87d5b4b2960e40d",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "Send email alert",
        "info": "",
        "x": 1120,
        "y": 2460,
        "wires": []
    },
    {
        "id": "65105f83fb9508df",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2350,
        "y": 2840,
        "wires": [
            [
                "4f2f100ebc5d0c2d"
            ]
        ]
    },
    {
        "id": "4f2f100ebc5d0c2d",
        "type": "change",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Temperature",
                "pt": "global",
                "to": "50*$random()",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "Density",
                "pt": "global",
                "to": "100*$random()",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "timestamp",
                "pt": "global",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 2840,
        "wires": [
            [
                "237df4c624b54b3f"
            ]
        ]
    },
    {
        "id": "237df4c624b54b3f",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "function 11",
        "func": "msg.topic = \"InfluxData\";\nvar Dens = global.get(\"Density\");\nvar Temp = global.get(\"Temperature\");\nvar timestamp = global.get(\"timestamp\");\nmsg.payload = {\n    \"timestamp\" : timestamp,\n    \"Temperature\" : Temp,\n    \"Density\" : Dens\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2710,
        "y": 2840,
        "wires": [
            [
                "07d151bed69cc8ae",
                "c44813d86362a8f3",
                "2420445d3171ac4b"
            ]
        ]
    },
    {
        "id": "07d151bed69cc8ae",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2900,
        "y": 2900,
        "wires": []
    },
    {
        "id": "97f1c00a4c80b34b",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Define logTags and allHoldRegTags",
        "func": "// Retrieve modHoldReg from flow context\nlet modHoldReg = flow.get(\"modHoldReg\") || [];\n\n// Filter tags where MODBUS Start Address is less than 400100\nlet logTags = modHoldReg\n    .filter(item => item[\"MODBUS Start Address\"] < 400029)\n    .map(item => item[\"Tag Name\"]);\n\n// Store the extracted array in flow context\nflow.set(\"logTags\", logTags);\n\nlet allHoldRegTags = modHoldReg\n    .map(item => item[\"Tag Name\"]);\n\nflow.set(\"allHoldRegTags\", allHoldRegTags);\n\n\n// Initialize arrays to store tags in each range\nvar tags_400001_400100 = [];\nvar tags_400101_400200 = [];\nvar tags_400201_400300 = [];\n\n// Iterate through the modHoldReg array\nmodHoldReg.forEach(tag => {\n    let startAddr = tag[\"MODBUS Start Address\"];\n\n    // Categorize tags based on MODBUS Start Address range\n    if (startAddr >= 400001 && startAddr <= 400100) {\n        tags_400001_400100.push(tag[\"Tag Name\"]);\n    } else if (startAddr >= 400101 && startAddr <= 400200) {\n        tags_400101_400200.push(tag[\"Tag Name\"]);\n    } else if (startAddr >= 400201 && startAddr <= 400300) {\n        tags_400201_400300.push(tag[\"Tag Name\"]);\n    }\n});\n\n// Store the categorized tags in flow variables\nflow.set(\"tags_400001_400100\", tags_400001_400100);\nflow.set(\"tags_400101_400200\", tags_400101_400200);\nflow.set(\"tags_400201_400300\", tags_400201_400300);\n\n\n// Output the logTag array as payload\nmsg.payload = logTags;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1600,
        "wires": [
            [
                "d835db8fa2b703e5",
                "44769ace05fdd10b",
                "391eea99aec76dc3",
                "dc73003d84f979ad"
            ]
        ]
    },
    {
        "id": "391eea99aec76dc3",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1540,
        "wires": []
    },
    {
        "id": "079692fc55b380f4",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "",
        "props": [
            {
                "p": "to",
                "v": "udelcch@gmail.com",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PEM1 Alert",
        "payload": "PEM1 test stand stopped.",
        "payloadType": "str",
        "x": 950,
        "y": 2420,
        "wires": [
            [
                "5a3ab29e6c62a71c"
            ]
        ]
    },
    {
        "id": "check-alarms",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "name": "Check Alarm Status",
        "func": "// Retrieve stored active alarms\nlet previousActiveAlarms = flow.get(\"activeAlarms\") || {};\n\n// Retrieve the alarm definitions\nconst alarms = flow.get(\"alarms\") || {};\n\n// Retrieve the Modbus response (array of coil states)\nconst alarmStates = msg.payload;\n\n// Get current timestamp\nconst timestamp = new Date().toLocaleString();\n\n// Get alarm tag names in order\nconst alarmTags = Object.keys(alarms);\n\n// Create a new active alarms object\nlet newActiveAlarms = {};\n\n// Check for active alarms\nfor (let i = 0; i < alarmTags.length; i++) {\n    let tag = alarmTags[i];\n\n    if (alarmStates[i] === true) { // Alarm is active\n        if (!previousActiveAlarms[tag]) {\n            // Store the first occurrence with a timestamp\n            newActiveAlarms[tag] = {\n                tag: tag,\n                message: alarms[tag],\n                time: timestamp\n            };\n        } else {\n            // Keep the previous timestamp if it was already active\n            newActiveAlarms[tag] = previousActiveAlarms[tag];\n        }\n    }\n}\n\n// Compare old and new active alarms\nconst previousKeys = Object.keys(previousActiveAlarms).sort();\nconst newKeys = Object.keys(newActiveAlarms).sort();\nconst isUnchanged = JSON.stringify(previousKeys) === JSON.stringify(newKeys);\n\n// If no change, do not send a payload\nif (isUnchanged) {\n    return null;\n}\n\n// Save updated active alarms list in flow variable\nflow.set(\"activeAlarms\", newActiveAlarms);\n\n// Convert to array format for UI table\nmsg.payload = Object.values(newActiveAlarms);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 3320,
        "wires": [
            [
                "ui-table",
                "d1839f4c053d58e2",
                "ca1d2bc8cf1b9e48"
            ]
        ]
    },
    {
        "id": "1eb68209c16b4838",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "name": "Get alarms",
        "func": "// Define the alarm messages\nconst alarms = {\n    \"LT201_Timer.Done\": \"SEP200 low. System will shut down if level remains low.\",\n    \"LT203_Timer.Done\": \"SEP200 over-filled. System will shut down if level remains high.\",\n    \"LT301_Timer.Done\": \"SEP300 low. System will shut down if level remains low.\",\n    \"LT303_Timer.Done\": \"SEP300 over-filled. System will shut down if level remains high.\",\n    \"ResinChange_Alarm\": \"Change resin bottle after this run.\",\n    \"Temp_Alarm\": \"Water temperature approaching shut down limit.\",\n    \"CellTemp_Alarm\": \"Cell temperature approaching shut down limit.\",\n    \"InPressure_Alarm\": \"Inlet pressure approaching limit.\",\n    \"Pressure_Alarm\": \"Backpressure approaching shut down limit.\",\n    \"PressureDrop_Alarm\": \"Backpressure approaching lower shut down limit.\",\n    \"PressureDrop_SDAlarm\": \"Backpressure too low. System will shut down.\",\n    \"Conductivity_Alarm\": \"Conductivity approaching maximum acceptable level.\",\n    \"Flow_Alarm\": \"Flow control may be malfunctioning.\",\n    \"Current_Alarm\": \"Cell current deviating. Power supply may be malfunctioning.\",\n    \"UnderVoltage_Alarm\": \"Cell voltage is dropping below minimum desired voltage.\",\n    \"OverVoltage_Alarm\": \"Cell voltage is rising above maximum desired voltage.\",\n    \"LEL_Alarm\": \"Caution: Lower LEL limit reached.\",\n    \"Leak Detected\": \"Water detected. Check for leaks.\",\n    \"Leak Confirmed\": \"Leak confirmed. System will shut down.\",\n    \"HCDVoltage_Alarm\": \"Voltage powering LEL sensor deviating from required voltage.\",\n    \"Fume Hood OK\": \"Low flow detected in fume hood. System will shut down.\",\n    \"EStop_Not_Tripped\": \"EStop activated. System will shut down.\",\n    \"Air Monitor OK\": \"Room air monitor error. System will shut down.\",\n    \"Temp_SDAlarm\": \"Water temperature reached maximum. System will shut down.\",\n    \"TCError_Alarm\": \"Thermocouple error. System will shut down.\",\n    \"InPressure_SDAlarm\": \"Inlet pressure reached limit. System will shut down.\",\n    \"Pressure_SDAlarm\": \"Backpressure reached limit. System will shut down.\",\n    \"Conductivity_SDAlarm\": \"Conductivity reached limit. System will shut down.\",\n    \"Flow_SDTimer.Done\": \"Flow control malfunctioning. System will shut down.\",\n    \"UnderVoltage_SDTimer.Done\": \"Cell voltage too low. System will shut down.\",\n    \"OverVoltage_SDTimer.Done\": \"Cell voltage too high. System will shut down.\",\n    \"Current_SDTimer.Done\": \"Cell current major deviation from SP. System will shut down.\",\n    \"LT201_SDTimer.Done\": \"SEP200 low level uncorrected. System will shut down.\",\n    \"LT203_SDTimer.Done\": \"SEP200 over-fill uncorrected. System will shut down.\",\n    \"LT301_SDTimer.Done\": \"SEP300 low level uncorrected. System will shut down.\",\n    \"LT303_SDTimer.Done\": \"SEP300 over-fill uncorrected. System will shut down.\",\n    \"HTLC_HTR201\": \"HTR201 temperature limit reached. System will shut down.\",\n    \"HTLC_HTRCell\": \"HTRCell temperature limit reached. System will shut down.\",\n    \"HCDVoltage_SDTimer.Done\": \"Voltage powering LEL sensor uncorrected. System will shut down.\",\n    \"PressureDrop_SDTimer.Done\": \"Backpressure dropped below minimum. System will shut down.\",\n    \"CellTemp_SDAlarm\": \"Cell temperature reached limit. System will shut down.\",\n    \"LEL_SDAlarm\": \"Higher LEL limit reached. System will shut down.\",\n    \"Battery Low\": \"UPS battery low.\",\n    \"Power Lost\": \"Power lost. UPS in battery mode.\",\n    \"Battery Fault\": \"UPS battery fault.\",\n    \"PS110\": \"Nitrogen purge pressure low.\",\n    \"PS110_Bad\": \"PS110 Bad\"\n}\n\n// Store the alarms object as a flow variable\nflow.set(\"alarms\", alarms);\n\nnode.status({ fill: \"green\", shape: \"dot\", text: \"Alarms stored in flow\" });\n\n// Get the number of alarms dynamically\nconst numAlarms = Object.keys(alarms).length;\n\n// Define the starting Modbus address for alarm coils\nconst startAddress = 100;  // Modbus address 00100\n\n// Create the Modbus Flex Read payload\nmsg.payload = {\n    'fc': 1,  // Function code 1 (Read Coils)\n    'unitid': 1,  // Modbus device ID (change if necessary)\n    'address': startAddress,  // Starting coil address\n    'quantity': numAlarms  // Dynamically set quantity based on alarm count\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 3320,
        "wires": [
            [
                "a10c1a2688a640bb"
            ]
        ]
    },
    {
        "id": "f48aa9a9cf3d509d",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "name": "Clear Alarms",
        "func": "// Clear all active alarms\nflow.set(\"activeAlarms\", {});\n\n// Send empty array to reset the table\nmsg.payload = [];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 3420,
        "wires": [
            [
                "ui-table",
                "c5b888169030b019"
            ]
        ]
    },
    {
        "id": "45113a7508b326f3",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "Reset",
        "func": "// First, send Reset = true\nvar msg1 = { payload: { \"tag\": \"HMI_Reset\", \"setpoint\": true } };\n\n// Create a second message to set it back to false after 1 second\nsetTimeout(() => {\n    var msg2 = { payload: { \"tag\": \"HMI_Reset\", \"setpoint\": false } };\n    node.send(msg2);\n}, 1000);\n\n// Send the first message immediately\nreturn msg1;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 620,
        "wires": [
            [
                "78c83855ada6c722",
                "c6152156af323fc9"
            ]
        ]
    },
    {
        "id": "6ae40b3b9732b19e",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 3260,
        "wires": [
            [
                "1eb68209c16b4838"
            ]
        ]
    },
    {
        "id": "62c4e491e6bcbed7",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "name": "link in 5",
        "links": [
            "49263ca4933dbd63"
        ],
        "x": 125,
        "y": 3320,
        "wires": [
            [
                "1eb68209c16b4838"
            ]
        ]
    },
    {
        "id": "cf194dffbd2e48b6",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "name": "Alarm table and clear",
        "info": "",
        "x": 180,
        "y": 3260,
        "wires": []
    },
    {
        "id": "7510c110eb4d4481",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "Single coil write for start/stop/reset",
        "info": "",
        "x": 240,
        "y": 380,
        "wires": []
    },
    {
        "id": "41b6500c6f27fc29",
        "type": "delay",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
<<<<<<< HEAD
        "x": 1250,
        "y": 180,
=======
        "x": 1190,
        "y": 160,
>>>>>>> 0e9a0f42a3087d01f18b8c0b7cd9eed6d6d0cb92
        "wires": [
            [
                "7359636993bb200e"
            ]
        ]
    },
    {
<<<<<<< HEAD
        "id": "984a3513e1ec75f2",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "name": "Update symbol color",
        "func": "// Retrieve the latest modbus coil statuses\nlet modbusCoilStatus = flow.get(\"modbusCoilStatus\") || {};\n\n// Define the coil-to-selector mapping and colors\nconst coilMapping = {\n    \"SV120.SV_Open\": { selectors: [\"SV120_1\", \"SV120_2\", \"SV120_3\"], activeColor: \"rgba(198, 243, 198, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"SV130.SV_Open\": { selectors: [\"SV130_1\", \"SV130_2\", \"SV130_3\"], activeColor: \"rgba(198, 243, 198, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"SV210.SV_Open\": { selectors: [\"SV210_1\", \"SV210_2\", \"SV210_3\"], activeColor: \"rgba(198, 243, 198, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"SV310.SV_Open\": { selectors: [\"SV310_1\", \"SV310_2\", \"SV310_3\"], activeColor: \"rgba(198, 243, 198, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"SV320.SV_Open\": { selectors: [\"SV320_1\", \"SV320_2\", \"SV320_3\"], activeColor: \"rgba(198, 243, 198, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"PMP200_MTR.Status_Run\": { selectors: [\"PMP200_1\", \"PMP200_2\"], activeColor: \"rgba(198, 243, 198, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"PMP210_MTR.Status_Run\": { selectors: [\"PMP210_1\", \"PMP210_2\"], activeColor: \"rgba(198, 243, 198, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"HTR201_HTR.Status_Run\": { selectors: [\"HTR201\"], activeColor: \"rgba(198, 243, 198, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"HTRCell_HTR.Status_Run\": { selectors: [\"HTRCell\"], activeColor: \"rgba(198, 243, 198, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"LT201\": { selectors: [\"LT201\"], activeColor: \"rgba(198, 243, 247, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"LT202\": { selectors: [\"LT202\"], activeColor: \"rgba(198, 243, 247, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"LT203\": { selectors: [\"LT203\"], activeColor: \"rgba(198, 243, 247, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"LT301\": { selectors: [\"LT301\"], activeColor: \"rgba(198, 243, 247, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"LT302\": { selectors: [\"LT302\"], activeColor: \"rgba(198, 243, 247, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" },\n    \"LT303\": { selectors: [\"LT303\"], activeColor: \"rgba(198, 243, 247, 1.0)\", inactiveColor: \"rgba(230, 230, 230, 1.0)\" }\n};\n\n// Create an array for updates\nlet updates = [];\n\nfor (let coilTag in coilMapping) {\n    // Read the current state\n    let isActive = modbusCoilStatus[coilTag] === true;  \n\n    // Determine color based on state\n    let color = isActive ? coilMapping[coilTag].activeColor : coilMapping[coilTag].inactiveColor;\n\n    // Format selectors with #\n    let selectors = coilMapping[coilTag].selectors.map(s => `#${s}`).join(\", \");\n\n    // Add to updates\n    updates.push({\n        \"command\": \"set_style\",\n        \"selector\": selectors, \n        \"attributeName\": \"fill\",\n        \"attributeValue\": color\n    });\n}\n\n// Send updates\nmsg.payload = updates;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 3700,
        "wires": [
            [
                "2d55dea777408eee",
                "e7832801775cf2e5"
            ]
        ]
    },
    {
        "id": "3ae2d3e4437de255",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 3700,
        "wires": [
            [
                "a27854311ccad1e5"
            ]
        ]
    },
    {
        "id": "655caca86ec029a9",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "Single coil write",
        "func": "// Retrieve the coil tag and setpoint from msg.payload\nlet { tag, setpoint } = msg.payload;\n\n// Retrieve Modbus coil address mapping from flow context\nlet modCoil = flow.get(\"modCoil\") || [];\n\n// Find the Modbus address for the given tag\nlet coilData = modCoil.find(entry => entry[\"Tag Name\"] === tag);\n\nif (!coilData) {\n    node.error(`Unknown coil tag: ${tag}`, msg);\n    return null;\n}\n\n// Convert Modbus address to 0-based integer\nlet address = parseInt(coilData[\"MODBUS Start Address\"], 10) - 1;\n\n// Construct Modbus write message\nmsg.payload = {\n    'unitId': 1,      // PLC Modbus Unit ID\n    'fc': 5,         // Function Code: Write Single Coil\n    'address': address, // Modbus coil address\n    'value': setpoint ? 1 : 0, // Convert boolean to 1 or 0\n    'quantity': 1\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 4280,
        "wires": [
            [
                "098e0fb7b999add0"
            ]
        ]
    },
    {
        "id": "3d33c8da5bb204cf",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 420,
        "wires": []
    },
    {
        "id": "43fb78c263cff003",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "HMI_Manual",
        "func": "if (msg.payload === true) {\n    // When switch is turned ON, set HMI_Manual to true for 0.2s\n    var msg1 = { payload: { \"tag\": \"HMI_Manual\", \"setpoint\": true } };\n\n    setTimeout(() => {\n        var msg2 = { payload: { \"tag\": \"HMI_Manual\", \"setpoint\": false } };\n        node.send(msg2);\n    }, 200);\n\n    return msg1;\n} else {\n    // When switch is turned OFF, set HMI_Auto to true for 0.2s\n    var msg3 = { payload: { \"tag\": \"HMI_Auto\", \"setpoint\": true } };\n\n    setTimeout(() => {\n        var msg4 = { payload: { \"tag\": \"HMI_Auto\", \"setpoint\": false } };\n        node.send(msg4);\n    }, 200);\n\n    return msg3;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 4160,
        "wires": [
            [
                "655caca86ec029a9",
                "5bf7034acf6e3d8c"
            ]
        ]
    },
    {
        "id": "0d0fd00deab4a399",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "name": "link in 8",
        "links": [
            "49263ca4933dbd63"
        ],
        "x": 285,
        "y": 3660,
        "wires": [
            [
                "a27854311ccad1e5",
                "7f85d90e4955acfa",
                "e814f9e77d873579"
            ]
        ]
    },
    {
        "id": "0c65acb1241053b1",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "SV120",
        "func": "var msg = { payload: { \"tag\": \"HMI_SV120_Open\", \"setpoint\": msg.payload } };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 4220,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "ad409912680a26fc",
        "type": "change",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 4320,
        "wires": [
            [
                "19582343872ba25b",
                "7c8cd82161696dbe",
                "fa42f446116f08bc",
                "7a554a0d03cd9a5b",
                "39244fa04a4ce7d5",
                "589ce0fdddac0565",
                "49e5b3cec8bda10d",
                "5079ebea03413b2a",
                "0a9712d38fbf0dcc",
                "bd7d6e9091f594cc",
                "8ee848ca2c5eacca",
                "ebc99a25bec0f07d",
                "871dd2fd31ac1461",
                "f821e642a405cd20",
                "fc3e49778ffffccf",
                "ebedd42d3d73fc5c",
                "0e20b32b0c110503"
            ]
        ]
    },
    {
        "id": "155ec724df87d928",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "SV130",
        "func": "var msg = { payload: { \"tag\": \"HMI_SV130_Open\", \"setpoint\": msg.payload } };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 4280,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "b626fbf36323dfa9",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "SV210",
        "func": "var msg = {\n    payload: {\n        \"tag\": \"SV210_HMI_Open\", \"setpoint\": msg.payload } };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 4340,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "e3e51d5261f83d18",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "SV310 (NO) off",
        "func": "var msg = { payload: { \"tag\": \"SV310.HMI_Close\", \"setpoint\": msg.payload } };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 4400,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "656a076b5d7b8bb7",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "SV320",
        "func": "var msg = { payload: { \"tag\": \"SV320_HMI_Open\", \"setpoint\": msg.payload } };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 4460,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "1381504cc2d4d44b",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "name": "P&ID symbol display, color and PV",
        "info": "This section pulls the coil status and holdReg PV every second and update int the SVG figure.\nMake sure the object or text ID in SVG file matches the tag name. ",
        "x": 220,
        "y": 3620,
        "wires": []
    },
    {
        "id": "51d5578553b543b6",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "link in 9",
        "links": [
            "e40c571c4e7e87b2"
        ],
        "x": 115,
        "y": 4240,
        "wires": [
            [
                "0f4aaf118b0e298c"
            ]
        ]
    },
    {
        "id": "0f4aaf118b0e298c",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "Init false",
        "func": "msg.payload = false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 4240,
        "wires": [
            [
                "0fcfdb07a1eabfea"
            ]
        ]
    },
    {
        "id": "42e37092c2672e48",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "Single holdReg write",
        "func": "// Retrieve the input tag and setpoint\nlet { tag, setpoint } = msg.payload;\n\n// Retrieve the modHoldReg mapping from the flow context\nlet modHoldReg = flow.get(\"modHoldReg\") || [];\n\n// Find the corresponding Modbus entry\nlet modbusEntry = modHoldReg.find(entry => entry[\"Tag Name\"] === tag);\n\nif (!modbusEntry) {\n    node.error(`Tag ${tag} not found in modHoldReg`, msg);\n    return null;\n}\n\n// Get Modbus start address and data type\nlet address = modbusEntry[\"MODBUS Start Address\"];\nlet dataType = modbusEntry[\"Data Type\"];\n\n// Convert setpoint value to Modbus register format\nlet buffer = Buffer.alloc(4);\n\nif (dataType === \"F32\") {\n    buffer.writeFloatBE(setpoint, 0);  // Convert float to buffer (big-endian)\n} else if (dataType === \"S32\") {\n    buffer.writeInt32BE(setpoint, 0);  // Convert integer to buffer\n} else {\n    node.error(`Unsupported data type: ${dataType} for tag ${tag}`, msg);\n    return null;\n}\n\n// Split buffer into two 16-bit registers (Modbus uses 16-bit words)\nlet registerValues = [\n    buffer.readUInt16BE(2),  // High 16 bits\n    buffer.readUInt16BE(0)   // Low 16 bits\n];\n\n// Construct Modbus Flex Write message with quantity\nmsg.payload = {\n    value: registerValues,\n    fc: 16,  // Function Code 16 (Write Multiple Registers)\n    address: address - 400001,  // Convert absolute to zero-based address\n    quantity: 2,  // Writing two 16-bit registers (32-bit value)\n    unitid: 1  // Change if necessary based on your PLC setup\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 5160,
        "wires": [
            [
                "299053fa01342bc8"
            ]
        ]
    },
    {
        "id": "2425e4aac2f29b35",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "SP_tag_compile",
        "func": "// Define the tags available for setting\nlet availableTags = [\n    \"PMP200_Setpoint\",\n    \"HTR201_SetPoint\",\n    \"HTRCell_SetPoint\",\n    \"Current_Setpoint\",\n    \"Voltage_Setpoint\"\n];\n\n// Format the dropdown options as required by ui_dropdown\nmsg.options = availableTags;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 5240,
        "wires": [
            [
                "8ee848ca2c5eacca"
            ]
        ]
    },
    {
        "id": "f78b0d87bd180969",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "setPoint selected",
        "func": "flow.set(\"tagSelectedforSetChange\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 5240,
        "wires": [
            []
        ]
    },
    {
        "id": "b4e3f4053a915245",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "name": "Update PV (test)",
        "func": "\n msg.payload =  \n    {\n        \"command\": \"update_text\",\n        \"selector\": \"#TE201_PV\",\n        \"textContent\": \"20.6\"\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 3780,
        "wires": [
            [
                "2d55dea777408eee"
            ]
        ]
    },
    {
        "id": "73963f73e4846a0f",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 3780,
        "wires": [
            [
                "b4e3f4053a915245"
            ]
        ]
    },
    {
        "id": "5cdf618ae772298c",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Disabled log tag CSV file",
        "info": "logTag will be all Modbus Hold Register parameters.",
        "x": 190,
        "y": 1720,
        "wires": []
    },
    {
        "id": "7f85d90e4955acfa",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "name": "Update modHoldReg PV",
        "func": "// Get the flow variable\nvar modHoldReg_PV = flow.get(\"modHoldReg_PV\") || {};\n\n// Prepare an array to store multiple messages\nvar messages = [];\n\n// Iterate through the key-value pairs in modHoldReg_PV\nfor (var tag in modHoldReg_PV) {\n    if (tag !== \"timestamp\") { // Skip timestamp field\n        messages.push({\n            payload: {\n                \"command\": \"update_text\",\n                \"selector\": `#${tag}`,\n                \"textContent\": `${modHoldReg_PV[tag]}`, // Ensure it's treated as a string\n                \"attributes\": {\n                    \"fill\": \"black\",  // Keep text color black\n                    \"font-size\": \"16px\",  // Maintain original font size\n                    \"font-family\": \"Arial, sans-serif\", // Preserve font family\n                    \"text-anchor\": \"middle\"  // Center alignment\n                }\n            }\n        });\n    }\n}\n\n// Return as multiple messages\nreturn [messages];\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 3740,
        "wires": [
            [
                "2d55dea777408eee",
                "45f325d04956ac88"
            ]
        ]
    },
    {
        "id": "b9ad53a94a9cade2",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 3740,
        "wires": [
            [
                "7f85d90e4955acfa"
            ]
        ]
    },
    {
        "id": "fcaa640b2f7de25a",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 5240,
        "wires": [
            [
                "2425e4aac2f29b35"
            ]
        ]
    },
    {
        "id": "40cf32dbbea3cb5b",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "Retreive tagSelected and SP",
        "func": "msg.payload = {\n    tag: flow.get(\"tagSelectedforSetChange\"),  // Tag from dropdown\n    setpoint: flow.get(\"tagSelectedforSetChange_SP\")          // Value from numeric input\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 5160,
        "wires": [
            [
                "42e37092c2672e48"
            ]
        ]
    },
    {
        "id": "0f5641a1acf5eeda",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 5320,
        "wires": [
            [
                "ebc99a25bec0f07d"
            ]
        ]
    },
    {
        "id": "a41148cd8fa6b452",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "Store setPoint SP",
        "func": "flow.set(\"tagSelectedforSetChange_SP\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 5320,
        "wires": [
            []
        ]
    },
    {
        "id": "6e3c014f7a83dc6e",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 880,
        "wires": []
    },
    {
        "id": "8eb07d2b571bf3fd",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "e963842154a5297f",
        "name": "Change switch text and spacing",
        "info": "",
        "x": 210,
        "y": 3960,
        "wires": []
    },
    {
        "id": "57106c3855b7b9ce",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "Enable SV switch buttons",
        "info": "",
        "x": 350,
        "y": 4360,
        "wires": []
    },
    {
        "id": "4eca2ac825cebd82",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "Switch goggle for manual and SV control",
        "info": "",
        "x": 240,
        "y": 4160,
        "wires": []
    },
    {
        "id": "50a2e69e7921ace9",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "PS_HMI_Enable",
        "func": "var msg = { payload: { \"tag\": \"PS_HMI_Enable\", \"setpoint\": msg.payload } };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 4520,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "70cf2f311c7d7f5b",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "PS_HMI_On",
        "func": "var msg = { payload: { \"tag\": \"PS_HMI_On\", \"setpoint\": msg.payload } };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 4640,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "1b90b1a3bb0e23f6",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "PS_HMI_Off",
        "func": "var msg = { payload: { \"tag\": \"PS_HMI_Off\", \"setpoint\": msg.payload } };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 4700,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "9a0d4b79df7f94ae",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "PS_HMI_Disable",
        "func": "var msg = { payload: { \"tag\": \"PS_HMI_Disable\", \"setpoint\": msg.payload } };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 4580,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "e9289b689f0b5e3e",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "link in 10",
        "links": [
            "e40c571c4e7e87b2"
        ],
        "x": 145,
        "y": 5160,
        "wires": [
            [
                "2425e4aac2f29b35"
            ]
        ]
    },
    {
        "id": "efcd4aed9b641d52",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Only log data for modbus address <29",
        "info": "",
        "x": 310,
        "y": 1640,
        "wires": []
    },
    {
        "id": "347a216086cf6bf8",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Read 101-200_PV values",
        "func": "// Retrieve logTags from flow context\nlet logTags = flow.get(\"logTags\") || [];\nlet tags_400101_400200 = flow.get(\"tags_400101_400200\") || [];\n// Each float requires 2 Modbus registers\nlet quantity = tags_400101_400200.length*2;//logTags.length * 2;\n\n// Construct Modbus request\nmsg.payload = {\n    'unitId': 1,       // PLC Modbus Unit ID\n    'fc': 3,          // Function Code: Read Holding Registers\n    'address': 100,    // Modbus Address (400001 - 400001 = 10 for 0-based addressing)\n    'quantity': quantity  // Dynamic quantity based on logTags\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1760,
        "wires": [
            [
                "9a5ba72a5d1e3962",
                "cff1439896c3e513"
            ]
        ]
    },
    {
        "id": "7b300e41668ddd85",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Modbus Data Parsing",
        "func": "// Ensure payload is received\nif (!msg.payload) {\n    node.warn(\"Missing payload\");\n    return null;\n}\n\n// Retrieve all hold register tag names from flow context\nlet tags_400101_400200 = flow.get(\"tags_400101_400200\") || [];\nlet parsedData = {};\nlet buffer = Buffer.alloc(4);\n\n// Process Modbus response dynamically\nfor (let i = 0; i < tags_400101_400200.length; i++) {\n    let tagName = tags_400101_400200[i];\n\n    // Ensure we have enough data for each tag (each float takes 2 registers)\n    if ((i * 2 + 1) < msg.payload.length) {\n        buffer.writeUInt16BE(msg.payload[i * 2], 2);\n        buffer.writeUInt16BE(msg.payload[i * 2 + 1], 0);\n        parsedData[tagName] = parseFloat(buffer.readFloatBE(0).toFixed(3)); // Keep only 3 decimal places\n    } else {\n        node.warn(`Insufficient data for tag: ${tagName}`);\n        parsedData[tagName] = null; // Assign null if data is missing\n    }\n}\n\n// Set the parsed data as the new payload\nmsg.payload = parsedData;\nflow.set(\"modHoldReg101-200_PV\", msg.payload);\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "cff1439896c3e513",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 1860,
        "wires": []
    },
    {
        "id": "13bc049226efdcbe",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1660,
        "wires": []
    },
    {
        "id": "0143b1f538d982a6",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 1920,
        "wires": []
    },
    {
        "id": "46957ef2a3ec2d2f",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Combine PV and SP",
        "func": "// Retrieve both variables from flow context\nlet modHoldReg001_100_PV = flow.get(\"modHoldReg001-100_PV\") || {};\nlet modHoldReg101_200_PV = flow.get(\"modHoldReg101-200_PV\") || {};\nlet modHoldReg201_300_PV = flow.get(\"modHoldReg201-300_PV\") || {};\n\n// Merge the two objects into one\nlet modHoldReg_PV = { ...modHoldReg001_100_PV, ...modHoldReg101_200_PV, ...modHoldReg201_300_PV };\n\n// Store the combined object in flow context\nflow.set(\"modHoldReg_PV\", modHoldReg_PV);\n\n// Output for debugging\nmsg.payload = modHoldReg_PV;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1700,
        "wires": [
            [
                "aa176dc0751837e6",
                "a1a88e13dcb6c08c",
                "b325c97aac726b07"
            ]
        ]
    },
    {
        "id": "7389a894f1605cf3",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "PMP200 control",
        "func": "if (msg.payload === true) {\n    // When switch is turned ON, set HMI_Start to true for 0.2s\n    var msg1 = { payload: { \"tag\": \"PMP200_MTR.HMI_Start\", \"setpoint\": true } };\n\n    setTimeout(() => {\n        var msg2 = { payload: { \"tag\": \"PMP200_MTR.HMI_Start\", \"setpoint\": false } };\n        node.send(msg2);\n    }, 200);\n\n    return msg1;\n} else {\n    // When switch is turned OFF, set HMI_Stop to true for 0.2s\n    var msg3 = { payload: { \"tag\": \"PMP200_MTR.HMI_Stop\", \"setpoint\": true } };\n\n    setTimeout(() => {\n        var msg4 = { payload: { \"tag\": \"PMP200_MTR.HMI_Stop\", \"setpoint\": false } };\n        node.send(msg4);\n    }, 200);\n\n    return msg3;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 4680,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "f5308650b7caeb57",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "PMP220 control",
        "func": "if (msg.payload === true) {\n    // When switch is turned ON, set HMI_Start to true for 0.2s\n    var msg1 = { payload: { \"tag\": \"PMP210_MTR.HMI_Start\", \"setpoint\": true } };\n\n    setTimeout(() => {\n        var msg2 = { payload: { \"tag\": \"PMP210_MTR.HMI_Start\", \"setpoint\": false } };\n        node.send(msg2);\n    }, 200);\n\n    return msg1;\n} else {\n    // When switch is turned OFF, set HMI_Stop to true for 0.2s\n    var msg3 = { payload: { \"tag\": \"PMP210_MTR.HMI_Stop\", \"setpoint\": true } };\n\n    setTimeout(() => {\n        var msg4 = { payload: { \"tag\": \"PMP210_MTR.HMI_Stop\", \"setpoint\": false } };\n        node.send(msg4);\n    }, 200);\n\n    return msg3;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 4820,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "0c5a4cdd7c4ca1a6",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Read 201-300_PV values",
        "func": "// Retrieve logTags from flow context\nlet logTags = flow.get(\"logTags\") || [];\nlet tags_400201_400300 = flow.get(\"tags_400201_400300\") || [];\n// Each float requires 2 Modbus registers\nlet quantity = tags_400201_400300.length*2;//logTags.length * 2;\n\n// Construct Modbus request\nmsg.payload = {\n    'unitId': 1,       // PLC Modbus Unit ID\n    'fc': 3,          // Function Code: Read Holding Registers\n    'address': 200,    // Modbus Address (400201 - 400001 = 10 for 0-based addressing)\n    'quantity': quantity  // Dynamic quantity based on logTags\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1820,
        "wires": [
            [
                "6d4f39ef0f600810"
            ]
        ]
    },
    {
        "id": "5377e56725ca39c9",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Modbus Data Parsing",
        "func": "// Ensure payload is received\nif (!msg.payload) {\n    node.warn(\"Missing payload\");\n    return null;\n}\n\n// Retrieve tag names from flow context\nlet tags_400201_400300 = flow.get(\"tags_400201_400300\") || [];\nlet parsedData = {};\nlet buffer = Buffer.alloc(4);\n\n// Process Modbus response dynamically (2 registers per tag)\nfor (let i = 0; i < tags_400201_400300.length; i++) {\n    let tagName = tags_400201_400300[i];\n\n    // Check if we have enough register data\n    if ((i * 2 + 1) < msg.payload.length) {\n        // Word swap: High word is second, Low word is first\n        buffer.writeUInt16BE(msg.payload[i * 2 + 1], 0); // High\n        buffer.writeUInt16BE(msg.payload[i * 2], 2);     // Low\n\n        // Read as signed 32-bit integer\n        parsedData[tagName] = buffer.readInt32BE(0);\n    } else {\n        node.warn(`Insufficient data for tag: ${tagName}`);\n        parsedData[tagName] = null;\n    }\n}\n\n// Set output\nmsg.payload = parsedData;\nflow.set(\"modHoldReg201-300_PV\", msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "9241aded0efea985",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "name": "Status check",
        "func": "// Retrieve coil status from flow context\nlet coilStatus = flow.get(\"modbusCoilStatus\") || {};\n\n// Define the relevant test phase tags\nlet phaseTags = [\n    \"Run_Phase_1\",\n    \"Run_Phase_2\",\n    \"RunPhase_3a\",\n    \"RunPhase_3\",\n    \"RunPhase 4\",  // Note the space — double-check your tag naming here\n    \"Finished\"\n];\n\n// Collect which phase tags are currently true\nlet activePhases = phaseTags.filter(tag => coilStatus[tag] === true);\n\n// Decision logic\nif (activePhases.length === 0) {\n    return { payload: \"Test not started\" };\n} else if (activePhases.length === 1) {\n    return { payload: activePhases[0] };\n} else {\n    return { payload: null };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 1280,
        "wires": [
            [
                "65208708e4372bc8",
                "a5039fb22db64485",
                "d917117175b94745",
                "e4ba86696d3fd1bf"
            ]
        ]
    },
    {
        "id": "1b952520d5aaf90b",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "name": "link in 11",
        "links": [
            "49263ca4933dbd63"
        ],
        "x": 1525,
        "y": 1200,
        "wires": [
            [
                "9241aded0efea985"
            ]
        ]
    },
    {
        "id": "c262f6046510507d",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "name": "Pulse check",
        "info": "",
        "x": 1430,
        "y": 1200,
        "wires": []
    },
    {
        "id": "25678c82a19b1e2d",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "HTR201 control",
        "func": "if (msg.payload === true) {\n    // When switch is turned ON, set HMI_Start to true for 0.2s\n    var msg1 = { payload: { \"tag\": \"HTR201_HTR.HMI_Start\", \"setpoint\": true } };\n\n    setTimeout(() => {\n        var msg2 = { payload: { \"tag\": \"HTR201_HTR.HMI_Start\", \"setpoint\": false } };\n        node.send(msg2);\n    }, 200);\n\n    return msg1;\n} else {\n    // When switch is turned OFF, set HMI_Stop to true for 0.2s\n    var msg3 = { payload: { \"tag\": \"HTR201_HTR.HMI_Stop\", \"setpoint\": true } };\n\n    setTimeout(() => {\n        var msg4 = { payload: { \"tag\": \"HTR201_HTR.HMI_Stop\", \"setpoint\": false } };\n        node.send(msg4);\n    }, 200);\n\n    return msg3;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 4880,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "2ab23c7acd8dd360",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "HTRCell control",
        "func": "if (msg.payload === true) {\n    // When switch is turned ON, set HMI_Start to true for 0.2s\n    var msg1 = { payload: { \"tag\": \"HTRCell_HTR.HMI_Start\", \"setpoint\": true } };\n\n    setTimeout(() => {\n        var msg2 = { payload: { \"tag\": \"HTRCell_HTR.HMI_Start\", \"setpoint\": false } };\n        node.send(msg2);\n    }, 200);\n\n    return msg1;\n} else {\n    // When switch is turned OFF, set HMI_Stop to true for 0.2s\n    var msg3 = { payload: { \"tag\": \"HTRCell_HTR.HMI_Stop\", \"setpoint\": true } };\n\n    setTimeout(() => {\n        var msg4 = { payload: { \"tag\": \"HTRCell_HTR.HMI_Stop\", \"setpoint\": false } };\n        node.send(msg4);\n    }, 200);\n\n    return msg3;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 4940,
        "wires": [
            [
                "655caca86ec029a9"
            ]
        ]
    },
    {
        "id": "c6152156af323fc9",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 620,
        "wires": []
    },
    {
        "id": "a2917e2f62739f51",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 580,
        "wires": []
    },
    {
        "id": "08c0de3d9a6fc2c8",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1320,
        "wires": []
    },
    {
        "id": "53582435e115617e",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1320,
        "wires": []
    },
    {
        "id": "heartbeat_request",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "Read Heartbeat Register",
        "func": "msg.payload = {\n    unitid: 1,\n    fc: 1,\n    address: 0,\n    quantity: 1\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 5580,
        "wires": [
            [
                "heartbeat_modbus"
            ]
        ]
    },
    {
        "id": "heartbeat_success",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "Store Heartbeat Timestamp",
        "func": "flow.set(\"lastHeartbeat\", Date.now());\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 5580,
        "wires": [
            []
        ]
    },
    {
        "id": "heartbeat_check",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "Check Last Heartbeat",
        "func": "const now = Date.now();\nconst last = flow.get(\"lastHeartbeat\") || 0;\n\nif ((now - last) > 5000) {\n    flow.set(\"stopTest\", true);\n    //node.warn(\"PLC UNRESPONSIVE — Aborting test.\");\n    return { payload: \"PLC unresponsive — Test aborted\" };\n} else {\n    return null;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 5640,
        "wires": [
            [
                "heartbeat_alert"
            ]
        ]
    },
    {
        "id": "heartbeat_alert",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "PLC Watchdog Alert",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 5640,
        "wires": []
    },
    {
        "id": "56a3e6090f3f3f13",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "HeartBeat_Check",
        "links": [
            "49263ca4933dbd63"
        ],
        "x": 105,
        "y": 5580,
        "wires": [
            [
                "heartbeat_request",
                "dd03e86f89549f23"
            ]
        ]
    },
    {
        "id": "dd03e86f89549f23",
        "type": "delay",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 5640,
        "wires": [
            [
                "heartbeat_check",
                "98d9105a0fe9c4f2"
            ]
        ]
    },
    {
        "id": "b429b5a8c896f336",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "783a604ad685b5f5",
        "name": "ModBus Address Principles",
        "info": "400001-400100: PV\n400101-400200: SP\n400201-400300: CV (control value)\n400301-400400: system",
        "x": 890,
        "y": 1320,
        "wires": []
    },
    {
        "id": "32c96a4e68fc9d38",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 5800,
        "wires": []
    },
    {
        "id": "98d9105a0fe9c4f2",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "modbus_heartbeat generator",
        "func": "msg.payload = {\n    tag: \"modbus_heartbeat\",  // assign value to modbus_heartbeat in PLC\n    setpoint: Math.random()          // random value\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 5740,
        "wires": [
            [
                "9d7c0453e92f3eb0"
            ]
        ]
    },
    {
        "id": "9d7c0453e92f3eb0",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "Single holdReg write",
        "func": "// Retrieve the input tag and setpoint\nlet { tag, setpoint } = msg.payload;\n\n// Retrieve the modHoldReg mapping from the flow context\nlet modHoldReg = flow.get(\"modHoldReg\") || [];\n\n// Find the corresponding Modbus entry\nlet modbusEntry = modHoldReg.find(entry => entry[\"Tag Name\"] === tag);\n\nif (!modbusEntry) {\n    //node.error(`Tag ${tag} not found in modHoldReg`, msg);\n    return null;\n}\n\n// Get Modbus start address and data type\nlet address = modbusEntry[\"MODBUS Start Address\"];\nlet dataType = modbusEntry[\"Data Type\"];\n\n// Convert setpoint value to Modbus register format\nlet buffer = Buffer.alloc(4);\n\nif (dataType === \"F32\") {\n    buffer.writeFloatBE(setpoint, 0);  // Convert float to buffer (big-endian)\n} else if (dataType === \"S32\") {\n    buffer.writeInt32BE(setpoint, 0);  // Convert integer to buffer\n} else {\n    node.error(`Unsupported data type: ${dataType} for tag ${tag}`, msg);\n    return null;\n}\n\n// Split buffer into two 16-bit registers (Modbus uses 16-bit words)\nlet registerValues = [\n    buffer.readUInt16BE(2),  // High 16 bits\n    buffer.readUInt16BE(0)   // Low 16 bits\n];\n\n// Construct Modbus Flex Write message with quantity\nmsg.payload = {\n    value: registerValues,\n    fc: 16,  // Function Code 16 (Write Multiple Registers)\n    address: address - 400001,  // Convert absolute to zero-based address\n    quantity: 2,  // Writing two 16-bit registers (32-bit value)\n    unitid: 1  // Change if necessary based on your PLC setup\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 5740,
        "wires": [
            [
                "1891ff190c2b30dc",
                "32c96a4e68fc9d38"
            ]
        ]
    },
    {
        "id": "5bf7034acf6e3d8c",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 4160,
        "wires": []
    },
    {
        "id": "c44813d86362a8f3",
        "type": "influxdb out",
        "z": "0e1f3206f48adf14",
        "d": true,
        "influxdb": "cade13d4f42d5807",
        "name": "testInfluxDB",
        "measurement": "FlowMeter",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "my-org",
        "bucket": "my-bucket",
        "x": 2930,
        "y": 2840,
        "wires": []
    },
    {
        "id": "2420445d3171ac4b",
        "type": "influxdb out",
        "z": "0e1f3206f48adf14",
        "d": true,
        "influxdb": "ca731339695e2524",
        "name": "",
        "measurement": "sensor_data",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "Test Lab",
        "bucket": "PEM1",
        "x": 2910,
        "y": 2780,
        "wires": []
    },
    {
        "id": "da753e14585654ba",
        "type": "influxdb out",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "influxdb": "ca731339695e2524",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "Test Lab",
        "bucket": "AEM1",
        "x": 970,
        "y": 2660,
        "wires": []
    },
    {
        "id": "fb1ec398897fa4c8",
        "type": "influxdb out",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "influxdb": "cade13d4f42d5807",
        "name": "LocalInfluxDB",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "my-org",
        "bucket": "my-bucket",
        "x": 960,
        "y": 2700,
        "wires": []
    },
    {
        "id": "08288dd29ba947c3",
        "type": "modbus-response",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "",
        "registerShowMax": 20,
        "x": 1510,
        "y": 2300,
        "wires": []
    },
    {
        "id": "82f361b8a87140d7",
        "type": "modbus-response",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "",
        "registerShowMax": 20,
        "x": 1070,
        "y": 1580,
        "wires": []
    },
    {
        "id": "83e549ac89bad390",
        "type": "modbus-response",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "name": "",
        "registerShowMax": 20,
        "x": 690,
        "y": 880,
        "wires": []
    },
    {
        "id": "018fc1c07d0b477c",
        "type": "modbus-response",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "",
        "registerShowMax": 20,
        "x": 1310,
        "y": 1860,
        "wires": []
    },
    {
        "id": "56b364be4f21de16",
        "type": "modbus-flex-getter",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": true,
        "server": "f905b5f3395bcec1",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 870,
        "y": 1700,
        "wires": [
            [
                "82f361b8a87140d7",
                "9c9c3c1ab31cb97b",
                "13bc049226efdcbe"
            ],
            []
        ]
    },
    {
        "id": "c71dee702c83ad9e",
        "type": "modbus-flex-getter",
        "z": "0e1f3206f48adf14",
        "d": true,
        "g": "32776a10d46d718d",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": true,
        "server": "f905b5f3395bcec1",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 3170,
        "y": 680,
        "wires": [
            [
                "c2e94988fc480afa"
            ],
            []
        ]
    },
    {
        "id": "9d6d4a50ba28b501",
        "type": "modbus-flex-getter",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": true,
        "server": "f905b5f3395bcec1",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 470,
        "y": 940,
        "wires": [
            [
                "83e549ac89bad390",
                "33456f72e3f84419"
            ],
            []
        ]
    },
    {
        "id": "a10c1a2688a640bb",
        "type": "modbus-flex-getter",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f905b5f3395bcec1",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 450,
        "y": 3320,
        "wires": [
            [
                "check-alarms"
            ],
            []
        ]
    },
    {
        "id": "9a5ba72a5d1e3962",
        "type": "modbus-flex-getter",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": true,
        "server": "f905b5f3395bcec1",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 870,
        "y": 1760,
        "wires": [
            [
                "7b300e41668ddd85",
                "0143b1f538d982a6"
            ],
            []
        ]
    },
    {
        "id": "6d4f39ef0f600810",
        "type": "modbus-flex-getter",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": true,
        "server": "f905b5f3395bcec1",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 870,
        "y": 1820,
        "wires": [
            [
                "5377e56725ca39c9",
                "018fc1c07d0b477c"
            ],
            []
        ]
    },
    {
        "id": "heartbeat_modbus",
        "type": "modbus-flex-getter",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "PLC Heartbeat Poll",
        "showStatusActivities": true,
        "showErrors": true,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "f905b5f3395bcec1",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 570,
        "y": 5580,
        "wires": [
            [
                "heartbeat_success"
            ],
            []
        ]
    },
    {
        "id": "bbfb835cba9a9b5a",
        "type": "modbus-flex-write",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f905b5f3395bcec1",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1270,
        "y": 2300,
        "wires": [
            [
                "08288dd29ba947c3"
            ],
            []
        ]
    },
    {
        "id": "2c986d49933c2836",
        "type": "modbus-flex-write",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f905b5f3395bcec1",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 770,
        "y": 520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "098e0fb7b999add0",
        "type": "modbus-flex-write",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f905b5f3395bcec1",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1210,
        "y": 4280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "299053fa01342bc8",
        "type": "modbus-flex-write",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f905b5f3395bcec1",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1110,
        "y": 5160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1891ff190c2b30dc",
        "type": "modbus-flex-write",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "modbus_heartbeat write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f905b5f3395bcec1",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 810,
        "y": 5700,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2d55dea777408eee",
        "type": "ui_svg_graphics",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "group": "2d8055515cc5bf53",
        "order": 1,
        "width": 10,
        "height": 8,
        "svgString": "<svg xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns=\"http://www.w3.org/2000/svg\" width=\"540px\" height=\"317px\" viewBox=\"64.85020446777344 31.676584243774414 303.292236328125 178.30682373046875\" version=\"1.1\" id=\"svg1\" inkscape:version=\"1.4 (86a8ad7, 2024-10-11)\" sodipodi:docname=\"drawing_AEM1.svg\" preserveAspectRatio=\"xMinYMin meet\"><rect id=\"svgEditorBackground\" x=\"0\" y=\"0\" width=\"507.9999694824219\" height=\"285.75\" style=\"fill:none;stroke:none\"/>\n  <sodipodi:namedview id=\"namedview1\" pagecolor=\"#ffffff\" bordercolor=\"#999999\" borderopacity=\"1\" inkscape:showpageshadow=\"2\" inkscape:pageopacity=\"0\" inkscape:pagecheckerboard=\"0\" inkscape:deskcolor=\"#d1d1d1\" inkscape:document-units=\"mm\" inkscape:zoom=\"0.90127385\" inkscape:cx=\"720.0919\" inkscape:cy=\"509.83394\" inkscape:window-width=\"1920\" inkscape:window-height=\"1001\" inkscape:window-x=\"-7\" inkscape:window-y=\"-7\" inkscape:window-maximized=\"1\" inkscape:current-layer=\"layer2\" showgrid=\"false\"/>\n  <defs id=\"defs1\">\n    <marker style=\"overflow:visible\" id=\"marker45\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path45\"/>\n    </marker>\n    <marker style=\"overflow:visible\" id=\"marker44\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path44\"/>\n    </marker>\n    <marker style=\"overflow:visible\" id=\"marker43\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path43\"/>\n    </marker>\n    <marker style=\"overflow:visible\" id=\"marker42\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path42\"/>\n    </marker>\n    <marker style=\"overflow:visible\" id=\"ConcaveTriangle\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path41\"/>\n    </marker>\n    <marker style=\"overflow:visible\" id=\"DartArrow\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Dart arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" d=\"M 0,0 5,-5 -12.5,0 5,5 Z\" transform=\"scale(-0.5)\" id=\"path40\"/>\n    </marker>\n    <pattern inkscape:collect=\"always\" xlink:href=\"#Strips1_1\" preserveAspectRatio=\"xMidYMid\" id=\"pattern17\" patternTransform=\"matrix(0.25490928,0.17103592,-0.14717195,0.29624288,-76.115336,-82.492364)\" x=\"0\" y=\"0\"/>\n    <pattern inkscape:collect=\"always\" patternUnits=\"userSpaceOnUse\" width=\"2\" height=\"10\" patternTransform=\"translate(0,0) scale(2,2)\" preserveAspectRatio=\"xMidYMid\" id=\"Strips1_1\" style=\"fill:#000000\" inkscape:stockid=\"Stripes 01 (1:1)\" inkscape:isstock=\"true\" inkscape:label=\"Stripes 01 (1:1)\">\n      <rect style=\"stroke:none\" x=\"0\" y=\"-0.5\" width=\"1\" height=\"11\" id=\"rect134\"/>\n    </pattern>\n    <marker style=\"overflow:visible\" id=\"marker44-9\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path44-4\"/>\n    </marker>\n  </defs>\n  <g inkscape:label=\"Layer 1\" inkscape:groupmode=\"layer\" id=\"layer1\">\n    <path style=\"fill:#000000;stroke-width:0.264583\" d=\"M 297.08194,163.60179 V 99.814807\" id=\"path2\"/>\n    <rect style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.775595;stroke-dasharray:none;stroke-opacity:1\" id=\"rect4\" width=\"33.735306\" height=\"52.410202\" x=\"112.88165\" y=\"81.572609\" ry=\"6.6265779\"/>\n    <path id=\"LT201\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 146.29544,118.93521 h -33.09226 v 8.2869 c 0,3.62612 2.89889,6.54587 6.5001,6.54587 h 20.09207 c 3.6012,0 6.50009,-2.91975 6.50009,-6.54587 z\"/>\n    <path id=\"LT202\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"M 146.29502,97.910872 H 113.2036 v 21.238518 h 33.09142 z\"/>\n    <path id=\"LT203\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 119.70328,81.785892 c -3.60121,0 -6.5001,2.91895 -6.5001,6.54508 v 9.68699 h 33.09226 v -9.68699 c 0,-3.62613 -2.89889,-6.54508 -6.50009,-6.54508 z\" inkscape:label=\"#LT203\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.28933;stroke-dasharray:none;stroke-opacity:1\" id=\"PMP200_2\" width=\"12.371079\" height=\"7.0946174\" x=\"155.78075\" y=\"147.8779\"/>\n    <circle style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.309003;stroke-dasharray:none;stroke-opacity:1\" id=\"PMP200_1\" cx=\"155.55208\" cy=\"154.46744\" r=\"6.5797076\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 154.24709,124.86408 h 27.35044\" id=\"path30\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 153.60029,110.17245 h 28.27444\" id=\"path31\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 153.78509,125.78807 h 28.08964\" id=\"path32\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"88.451965\" y=\"101.49514\" id=\"text41\"><tspan sodipodi:role=\"line\" id=\"tspan41\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"88.451965\" y=\"101.49514\">SV120</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"157.11792\" y=\"92.034447\" id=\"text41-7\"><tspan sodipodi:role=\"line\" id=\"tspan41-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"157.11792\" y=\"92.034447\">LT203</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"148.86781\" y=\"166.41386\" id=\"text41-13\"><tspan sodipodi:role=\"line\" id=\"tspan41-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"148.86781\" y=\"166.41386\">PMP200</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 96.143,153.79356 v -5.14574\" id=\"path5-1\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.354308;stroke-dasharray:none;stroke-opacity:1\" id=\"SV210_3\" width=\"6.3941364\" height=\"5.433466\" x=\"92.94593\" y=\"143.0372\" ry=\"0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"94.630341\" y=\"147.39536\" id=\"text41-1-9\"><tspan sodipodi:role=\"line\" id=\"tspan41-9-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"94.630341\" y=\"147.39536\">S</tspan></text>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV210_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,91.67328,158.74407)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV210_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,100.62865,148.81453)\"/>\n    <rect style=\"fill:#b3b3b3;stroke:#000000;stroke-width:0.155496;stroke-dasharray:none\" id=\"Cell_1\" width=\"6.6500001\" height=\"30.082857\" x=\"239.53181\" y=\"89.901398\"/>\n    <rect style=\"fill:#e6e6e6;stroke:#000000;stroke-width:0.136308;stroke-dasharray:none\" id=\"rect2\" width=\"3.9426398\" height=\"23.728094\" x=\"246.32745\" y=\"93.078781\"/>\n    <rect style=\"fill:#b3b3b3;stroke:#000000;stroke-width:0.155496;stroke-dasharray:none\" id=\"Cell_2\" width=\"6.6497378\" height=\"30.082857\" x=\"250.416\" y=\"89.901398\"/>\n    <text xml:space=\"preserve\" style=\"font-size:3.175px;text-align:start;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#b3b3b3;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" x=\"241.92961\" y=\"106.06137\" id=\"text2\"><tspan sodipodi:role=\"line\" id=\"tspan2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.175px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#1a1a1a;stroke-width:0.2\" x=\"241.92961\" y=\"106.06137\">+</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-size:3.175px;text-align:start;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#b3b3b3;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" x=\"253.21144\" y=\"105.76526\" id=\"text2-1\"><tspan sodipodi:role=\"line\" id=\"tspan2-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.175px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#1a1a1a;stroke-width:0.2\" x=\"253.21144\" y=\"105.76526\">-</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"270.85858\" y=\"62.502247\" id=\"text41-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"270.85858\" y=\"62.502247\">SV310</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 277.82003,52.982803 v -5.14574\" id=\"path5-1-4\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.354308;stroke-dasharray:none;stroke-opacity:1\" id=\"SV310_3\" width=\"6.3941364\" height=\"5.433466\" x=\"274.62296\" y=\"42.22644\" ry=\"0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"276.30737\" y=\"46.584595\" id=\"text41-1-9-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-9-2-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"276.30737\" y=\"46.584595\">S</tspan></text>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV310_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,273.35031,57.933313)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV310_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,282.30568,48.003773)\"/>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 146.36992,90.443502 h 9.83446\" id=\"path3\"/>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 146.22313,105.70894 h 9.98125\" id=\"path4\"/>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 146.22313,122.88255 h 9.83446\" id=\"path5\"/>\n    <g id=\"g1\" transform=\"translate(122.64954,0.18601478)\">\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"34.480518\" y=\"106.89229\" id=\"text41-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"34.480518\" y=\"106.89229\">LT202</tspan></text>\n    </g>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"156.98701\" y=\"124.265\" id=\"text41-1\"><tspan sodipodi:role=\"line\" id=\"tspan41-23\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"156.98701\" y=\"124.265\">LT201</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"88.823891\" y=\"164.72838\" id=\"text41-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"88.823891\" y=\"164.72838\">SV210</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 95.840281,91.128017 v -5.14574\" id=\"path5-1-7\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.354308;stroke-dasharray:none;stroke-opacity:1\" id=\"SV120_3\" width=\"6.3941364\" height=\"5.433466\" x=\"92.643219\" y=\"80.371658\" ry=\"0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"94.327637\" y=\"84.729805\" id=\"text41-1-9-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-9-2-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"94.327637\" y=\"84.729805\">S</tspan></text>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV120_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,91.370561,96.078537)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV120_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,100.32593,86.148987)\"/>\n    <rect style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.775595;stroke-dasharray:none;stroke-opacity:1\" id=\"rect4-6\" width=\"33.735306\" height=\"52.410202\" x=\"291.26431\" y=\"79.172539\" ry=\"6.6265779\"/>\n    <path id=\"LT301\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 324.6781,116.53515 h -33.09226 v 8.2869 c 0,3.62612 2.89889,6.54587 6.5001,6.54587 h 20.09207 c 3.6012,0 6.50009,-2.91975 6.50009,-6.54587 z\"/>\n    <path id=\"LT302\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 324.67768,95.510814 h -33.09142 v 21.238516 h 33.09142 z\"/>\n    <path id=\"LT303\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 298.08594,79.385834 c -3.60121,0 -6.5001,2.91895 -6.5001,6.54508 v 9.68699 h 33.09226 v -9.68699 c 0,-3.62613 -2.89889,-6.54508 -6.50009,-6.54508 z\" inkscape:label=\"#LT203\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 332.62975,122.46402 h 27.35044\" id=\"path30-8\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 331.98295,107.77239 h 28.27444\" id=\"path31-6\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 332.16775,123.38801 h 28.08964\" id=\"path32-0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"335.50058\" y=\"89.634377\" id=\"text41-7-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-6-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"335.50058\" y=\"89.634377\">LT303</tspan></text>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 324.75258,88.043444 h 9.83446\" id=\"path3-8\"/>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 324.60579,103.30888 h 9.98125\" id=\"path4-6\"/>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 324.60579,120.48249 h 9.83446\" id=\"path5-5\"/>\n    <g id=\"g2\" transform=\"translate(301.0322,-2.2140469)\">\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"34.480518\" y=\"106.89229\" id=\"text41-2-0\"><tspan sodipodi:role=\"line\" id=\"tspan41-7-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"34.480518\" y=\"106.89229\">LT302</tspan></text>\n    </g>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"335.36969\" y=\"121.86494\" id=\"text41-1-0\"><tspan sodipodi:role=\"line\" id=\"tspan41-23-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"335.36969\" y=\"121.86494\">LT301</tspan></text>\n    <circle style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.309003;stroke-dasharray:none;stroke-opacity:1\" id=\"HTR200\" cx=\"221.98189\" cy=\"150.87193\" r=\"6.5797076\"/>\n    <path style=\"fill:none;stroke:#000000;stroke-width:1.2;stroke-dasharray:none\" d=\"m 212.80889,151.13678 h 5.29335 l 2.3872,-4.7744 3.5289,7.99193 2.3872,-3.6327 h 5.50094\" id=\"path6\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"212.71053\" y=\"162.2764\" id=\"text41-13-0\"><tspan sodipodi:role=\"line\" id=\"tspan41-2-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"212.71053\" y=\"162.2764\">HTR201</tspan></text>\n    <path style=\"fill:none;stroke:#406bbf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 136.58927,133.68312 v 20.55067 l 12.20022,0\" id=\"path7\" sodipodi:nodetypes=\"ccc\"/>\n    <path style=\"fill:none;stroke:#406bbf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 168.03387,151.12005 44.92095,0\" id=\"path8\" sodipodi:nodetypes=\"cc\"/>\n    <path style=\"fill:none;stroke:#406bbf;stroke-width:1.20599;stroke-dasharray:none;marker-end:url(#marker42);stroke-opacity:1\" d=\"m 228.56,150.70663 14.10247,-0.11009 v -26.79906\" id=\"path9\" sodipodi:nodetypes=\"ccc\"/>\n    <path style=\"fill:none;stroke:#406bbf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"M 242.7607,89.794489 V 70.749397 H 137.976 l 0,10.641766\" id=\"path10\" sodipodi:nodetypes=\"cccc\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"256.77304\" y=\"190.58794\" id=\"text41-61\"><tspan sodipodi:role=\"line\" id=\"tspan41-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"256.77304\" y=\"190.58794\">SV320</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 264.04891,179.88506 v -5.14574\" id=\"path5-1-2\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.354308;stroke-dasharray:none;stroke-opacity:1\" id=\"SV320_3\" width=\"6.3941364\" height=\"5.433466\" x=\"260.85184\" y=\"169.12871\" ry=\"0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"262.53625\" y=\"173.48685\" id=\"text41-1-9-22\"><tspan sodipodi:role=\"line\" id=\"tspan41-9-2-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"262.53625\" y=\"173.48685\">S</tspan></text>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV320_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,259.57919,184.83557)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV320_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,268.53457,174.90603)\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"M 253.90926,89.827492 V 74.385844 h 9.56854\" id=\"path22\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"260.23669\" y=\"83.151291\" id=\"text41-61-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-4-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"260.23669\" y=\"83.151291\">BPR302</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 269.30807,74.497529 v -5.14574\" id=\"path5-1-2-7\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"BPR302_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,264.83835,79.448039)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"BPR302_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,273.79373,69.518499)\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.3;stroke-dasharray:none;stroke-opacity:1\" id=\"path23\" sodipodi:type=\"arc\" sodipodi:cx=\"269.32678\" sodipodi:cy=\"-69.288177\" sodipodi:rx=\"2.0758247\" sodipodi:ry=\"2.0758247\" sodipodi:start=\"0\" sodipodi:end=\"3.1415927\" sodipodi:arc-type=\"slice\" d=\"m 271.40261,-69.288177 a 2.0758247,2.0758247 0 0 1 -1.03792,1.797716 2.0758247,2.0758247 0 0 1 -2.07582,0 2.0758247,2.0758247 0 0 1 -1.03791,-1.797716 h 2.07582 z\" transform=\"scale(1,-1)\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 269.09054,74.256989 -4.77044,-5.10071 v -4.95393 h 5.06399 v 2.93567\" id=\"path24\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 253.88597,79.711673 v -26.77814 h 17.8521\" id=\"path26\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker45)\" d=\"M 316.4641,78.382113 V 35.227916\" id=\"path27\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 284.12853,52.622161 h 31.91581\" id=\"path28\" sodipodi:nodetypes=\"cc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#ConcaveTriangle)\" d=\"m 309.12495,131.77443 v 47.70708 l -35.03619,0.0734\" id=\"path29\" sodipodi:nodetypes=\"ccc\"/>\n    <g id=\"g4\" inkscape:label=\"HEX210 group\" transform=\"translate(-100.98669,-63.703816)\">\n      <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.420264;stroke-dasharray:none;stroke-opacity:1\" id=\"HEX210\" width=\"14.614301\" height=\"4.650341\" x=\"212.46649\" y=\"123.96944\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 214.84355,122.50622 v 7.57676 l -2.49099,2.49099\" id=\"path17\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 224.81672,122.50622 v 7.57676 l 2.49099,2.49099\" id=\"path17-2\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 218.02777,130.63686 c -1.11921,-0.53209 0,-0.84401 0,-0.84401 l 1.35775,0.27523 z\" id=\"path18\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 221.35399,130.66163 c 1.11921,-0.53209 0,-0.84401 0,-0.84401 l -1.35775,0.27523 z\" id=\"path18-1\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 204.22779,126.09549 h 8.36663\" id=\"path19\"/>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"210.5563\" y=\"137.36679\" id=\"text41-13-7-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-2-9-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"210.5563\" y=\"137.36679\">HEX210</tspan></text>\n    </g>\n    <path style=\"fill:none;fill-opacity:1;stroke:#406abf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"M 257.60414,179.51559 H 130.93042 l 0,-45.64951\" id=\"path33\" sodipodi:nodetypes=\"ccc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#406abf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker43)\" d=\"M 102.33817,153.66293 H 125.6393 V 138.14614\" id=\"path34\" sodipodi:nodetypes=\"ccc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker44)\" d=\"m 102.10464,90.505964 h 6.80259\" id=\"path35\" sodipodi:nodetypes=\"cc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#35a75a;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#DartArrow)\" d=\"M 130.56938,81.268543 V 54.603268 h 30.8919\" id=\"path36\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"120.8921\" y=\"94.683907\" id=\"text41-3-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-8-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"120.8921\" y=\"94.683907\">SEP200</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"299.01617\" y=\"93.524315\" id=\"text41-3-6-4\"><tspan sodipodi:role=\"line\" id=\"tspan41-8-1-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"299.01617\" y=\"93.524315\">SEP300</tspan></text>\n    <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"HCD220\" cx=\"140.21278\" cy=\"46.687172\" r=\"3.1137373\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 140.21278,49.923588 v 4.255439\" id=\"path38\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"132.28711\" y=\"42.429344\" id=\"text41-18\"><tspan sodipodi:role=\"line\" id=\"tspan41-49\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"132.28711\" y=\"42.429344\">HCD220</tspan></text>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 136.95254,46.654164 h 6.17558\" id=\"path46\"/>\n    <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"PT302_1\" cx=\"253.87256\" cy=\"45.099213\" r=\"3.1137373\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 253.87255,48.335628 v 4.255439\" id=\"path38-0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"246.98479\" y=\"41.048969\" id=\"text41-18-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"246.98479\" y=\"41.048969\">PT302</tspan></text>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 250.61231,45.066204 h 6.17558\" id=\"path46-7\"/>\n    <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"TE201\" cx=\"250.65663\" cy=\"131.1696\" r=\"3.1137373\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 247.39638,131.1696 h 6.17558\" id=\"path46-2\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"M 247.38643,131.1696 H 242.9234\" id=\"path47\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"255.10944\" y=\"132.95612\" id=\"text41-18-9\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"255.10944\" y=\"132.95612\">TE201</tspan></text>\n    <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"PT201\" cx=\"250.90489\" cy=\"150.17039\" r=\"3.1137373\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 247.64464,150.17039 h 6.17558\" id=\"path46-2-6\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 247.63469,150.17039 h -4.46303\" id=\"path47-1\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"255.35771\" y=\"151.95691\" id=\"text41-18-9-5\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"255.35771\" y=\"151.95691\">PT201</tspan></text>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 82.691174,90.756703 h 6.80259\" id=\"path35-2\" sodipodi:nodetypes=\"cc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#406abf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 82.961834,153.78627 h 6.80259\" id=\"path35-2-5\" sodipodi:nodetypes=\"cc\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"65.56723\" y=\"155.5878\" id=\"text41-20\"><tspan sodipodi:role=\"line\" id=\"tspan41-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"65.56723\" y=\"155.5878\">DI H<tspan style=\"font-size:65%;baseline-shift:sub\" id=\"tspan48\">2</tspan>O</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"76.515106\" y=\"92.236549\" id=\"text41-20-7\"><tspan sodipodi:role=\"line\" id=\"tspan41-0-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"76.515106\" y=\"92.236549\">N<tspan style=\"font-size:65%;baseline-shift:sub\" id=\"tspan47\">2</tspan></tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"166.74419\" y=\"56.188801\" id=\"text41-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-26\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"166.74419\" y=\"56.188801\">O<tspan style=\"font-size:65%;baseline-shift:sub\" id=\"tspan49\">2</tspan> Discharge</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"318.12579\" y=\"41.224129\" id=\"text41-8-0\"><tspan sodipodi:role=\"line\" id=\"tspan41-26-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"318.12579\" y=\"41.224129\">H<tspan style=\"font-size:65%;baseline-shift:sub\" id=\"tspan49-2\">2</tspan> Discharge</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"335.05841\" y=\"77.509506\" id=\"text41-35\"><tspan sodipodi:role=\"line\" id=\"tspan41-12\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"335.05841\" y=\"77.509506\">SV130</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 342.33429,66.806643 v -5.14574\" id=\"path5-1-0\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.354308;stroke-dasharray:none;stroke-opacity:1\" id=\"SV130_3\" width=\"6.3941364\" height=\"5.433466\" x=\"339.13721\" y=\"56.050282\" ry=\"0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"340.82162\" y=\"60.408428\" id=\"text41-1-9-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-9-2-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"340.82162\" y=\"60.408428\">S</tspan></text>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV130_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,337.86456,71.757156)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV130_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,346.81994,61.827613)\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-start:url(#marker44-9)\" d=\"m 320.36358,66.488982 15.75635,0\" id=\"path35-1\" sodipodi:nodetypes=\"cc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 348.52619,66.624291 h 6.80259\" id=\"path35-2-8\" sodipodi:nodetypes=\"cc\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"356.14774\" y=\"68.177528\" id=\"text41-20-7-9\"><tspan sodipodi:role=\"line\" id=\"tspan41-0-1-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"356.14774\" y=\"68.177528\">N<tspan style=\"font-size:65%;baseline-shift:sub\" id=\"tspan47-4\">2</tspan></tspan></text>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 275.51165,74.125406 h 26.42095 v 4.697056\" id=\"path51\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"255.84178\" y=\"137.85464\" id=\"text41-18-9-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"255.84178\" y=\"137.85464\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"265.1008\" y=\"137.85464\" id=\"TE201_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"265.1008\" y=\"137.85464\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"134.72339\" y=\"59.057102\" id=\"text41-18-9-8-86\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-50\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"134.72339\" y=\"59.057102\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"143.98241\" y=\"59.057102\" id=\"HCD220_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"143.98241\" y=\"59.057102\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"243.04144\" y=\"46.330055\" id=\"text41-18-9-8-86-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-50-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"243.04144\" y=\"46.330055\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"242.85548\" y=\"51.260139\" id=\"PT302_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-0-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"242.85548\" y=\"51.260139\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"255.83411\" y=\"156.4803\" id=\"text41-18-9-8-65\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"255.83411\" y=\"156.4803\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"265.09311\" y=\"156.4803\" id=\"PT201_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"265.09311\" y=\"156.4803\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"255.84178\" y=\"141.92778\" id=\"text41-18-9-8-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-14\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"255.84178\" y=\"141.92778\">SP:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"265.1008\" y=\"141.91306\" id=\"HTR201_SetPoint\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-3\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"265.1008\" y=\"141.91306\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"215.89624\" y=\"167.8726\" id=\"text41-18-9-8-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"215.89624\" y=\"167.8726\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"225.15526\" y=\"167.8726\" id=\"HTR201_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"225.15526\" y=\"167.8726\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"215.89624\" y=\"171.94574\" id=\"text41-18-9-8-6-1\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-14-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"215.89624\" y=\"171.94574\">CV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"225.15526\" y=\"171.93102\" id=\"HTR201_CV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-3-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"225.15526\" y=\"171.93102\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"145.09996\" y=\"170.72717\" id=\"text41-18-9-8-8-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"145.09996\" y=\"170.72717\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"154.35898\" y=\"170.72717\" id=\"FT201_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"154.35898\" y=\"170.72717\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"145.09996\" y=\"174.80031\" id=\"text41-18-9-8-6-1-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-14-8-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"145.09996\" y=\"174.80031\">CV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"154.35898\" y=\"174.78558\" id=\"PMP200_CV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-3-2-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"154.35898\" y=\"174.78558\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"162.39384\" y=\"170.7419\" id=\"text41-18-9-8-8-3-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"162.39384\" y=\"170.7419\">SP:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"171.65286\" y=\"170.72717\" id=\"PMP200_Setpoint\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"171.65286\" y=\"170.72717\">___</tspan></text>\n    <circle style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.197872;stroke-dasharray:none;stroke-opacity:1\" id=\"HTR200-6\" cx=\"265.50583\" cy=\"100.69448\" r=\"4.2133541\"/>\n    <path style=\"fill:none;stroke:#000000;stroke-width:0.768427;stroke-dasharray:none\" d=\"m 257.07052,100.86408 h 5.95095 l 1.52866,-3.057319 2.25975,5.117679 1.52865,-2.32622 h 3.52256\" id=\"path6-1\" sodipodi:nodetypes=\"cccccc\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"260.97198\" y=\"111.29164\" id=\"text41-13-0-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-2-6-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"260.97198\" y=\"111.29164\">HTRCell</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"259.13818\" y=\"116.1917\" id=\"text41-18-9-8-8-9\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"259.13818\" y=\"116.1917\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"268.39722\" y=\"116.1917\" id=\"TECell_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"268.39722\" y=\"116.1917\">__</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"259.13818\" y=\"120.26484\" id=\"text41-18-9-8-6-1-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-14-8-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"259.13818\" y=\"120.26484\">CV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"268.39722\" y=\"120.25012\" id=\"HTRCell_CV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-3-2-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"268.39722\" y=\"120.25012\">__</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"274.58926\" y=\"116.20643\" id=\"text41-18-9-8-8-3-2-8-5\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-7-4-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"274.58926\" y=\"116.20643\">SP:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"283.8483\" y=\"116.1917\" id=\"HTRCell_SetPoint\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-9-7-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"283.8483\" y=\"116.1917\">__</tspan></text>\n    <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"PT302_1-2\" cx=\"190.00726\" cy=\"158.99252\" r=\"3.1137373\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 190.00725,151.59035 v 4.25544\" id=\"path38-0-6\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"183.17139\" y=\"167.18964\" id=\"text41-18-8-0\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-7-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"183.17139\" y=\"167.18964\">CT201</tspan></text>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 186.74701,158.95952 h 6.17558\" id=\"path46-7-6\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"184.72899\" y=\"172.88589\" id=\"text41-18-9-8-86-8-5\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-50-9-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"184.72899\" y=\"172.88589\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"193.98802\" y=\"172.88589\" id=\"CT201_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-0-4-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"193.98802\" y=\"172.88589\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"73.522552\" y=\"198.75708\" id=\"Current_Setpoint_text\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"73.522552\" y=\"198.75708\">Current_Setpoint:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"118.06753\" y=\"199.06845\" id=\"Current_Setpoint\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"118.06753\" y=\"199.06845\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"73.522552\" y=\"207.47498\" id=\"text41-18-9-8-8-3-8-1\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-5\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"73.522552\" y=\"207.47498\">Voltage_Setpoint:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"118.06753\" y=\"207.78635\" id=\"Voltage_Setpoint\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"118.06753\" y=\"207.78635\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"145.70152\" y=\"199.19173\" id=\"text41-18-9-8-8-3-8-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"145.70152\" y=\"199.19173\">CellVoltage_PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"185.84302\" y=\"199.5031\" id=\"CellVoltage_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"185.84302\" y=\"199.5031\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"145.70152\" y=\"207.90962\" id=\"text41-18-9-8-8-3-8-1-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-5-5\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"145.70152\" y=\"207.90962\">CellCurrent_PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"185.84302\" y=\"208.22099\" id=\"CellCurrent_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-7-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"185.84302\" y=\"208.22099\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"208.18166\" y=\"203.54758\" id=\"text41-18-9-8-8-3-8-3-7\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-2-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"208.18166\" y=\"203.54758\">Cell1_Voltage:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"244.53018\" y=\"203.85895\" id=\"Cell1_Voltage\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-6-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"244.53018\" y=\"203.85895\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"259.5925\" y=\"203.54758\" id=\"text41-18-9-8-8-3-8-3-7-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-2-9-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"259.5925\" y=\"203.54758\">Cell2_Voltage:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"295.94101\" y=\"203.85895\" id=\"Cell2_Voltage\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-6-4-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"295.94101\" y=\"203.85895\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"310.74976\" y=\"203.54758\" id=\"text41-18-9-8-8-3-8-3-7-3-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-2-9-4-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"310.74976\" y=\"203.54758\">Cell3_Voltage:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"347.0983\" y=\"203.85895\" id=\"Cell3_Voltage\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-6-4-1-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"347.0983\" y=\"203.85895\">___</tspan></text>\n  </g>\n  <g inkscape:groupmode=\"layer\" id=\"layer2\" inkscape:label=\"Disabled elements\" style=\"display:none\">\n    <g id=\"g3\" inkscape:label=\"PMP210 group\">\n      <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.28933;stroke-dasharray:none;stroke-opacity:1\" id=\"PMP210_2\" width=\"12.371079\" height=\"7.0946174\" x=\"191.90289\" y=\"122.71127\"/>\n      <circle style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.309003;stroke-dasharray:none;stroke-opacity:1\" id=\"PMP220_1\" cx=\"191.67422\" cy=\"129.30081\" r=\"6.5797076\"/>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"183.97939\" y=\"140.14026\" id=\"text41-13-7\"><tspan sodipodi:role=\"line\" id=\"tspan41-2-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"183.97939\" y=\"140.14026\">PMP210</tspan></text>\n    </g>\n    <g id=\"g6\" inkscape:label=\"CT210 group\">\n      <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"PT302_1-1\" cx=\"188.37054\" cy=\"89.4786\" r=\"3.1137373\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 188.37055,92.71502 v 4.255443\" id=\"path38-0-4\"/>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"181.48277\" y=\"85.42836\" id=\"text41-18-8-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-7-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"181.48277\" y=\"85.42836\">CT210</tspan></text>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 185.11031,89.445596 h 6.17558\" id=\"path46-7-7\"/>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"182.41763\" y=\"103.1644\" id=\"text41-18-9-8-86-8-1\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-50-9-77\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"182.41763\" y=\"103.1644\">PV:</tspan></text>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"191.67667\" y=\"103.1644\" id=\"CT210_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-0-4-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"191.67667\" y=\"103.1644\">___</tspan></text>\n    </g>\n    <g id=\"g5\" inkscape:label=\"DMN210 group\">\n      <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.634624;stroke-dasharray:none\" id=\"rect1\" width=\"22.165438\" height=\"7.9170485\" x=\"204.368\" y=\"93.611443\" ry=\"3.5504117\" rx=\"2.3676498\"/>\n      <path style=\"fill:url(#pattern17);fill-opacity:1;stroke:none;stroke-width:0.610057;stroke-dasharray:none\" d=\"m 208.38451,93.962831 v 7.211759 h 14.35865 v -7.211759 z\" id=\"path11\"/>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"206.44814\" y=\"91.958069\" id=\"text41-13-7-8-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-2-9-6-5\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"206.44814\" y=\"91.958069\">DMN210</tspan></text>\n    </g>\n    <path style=\"fill:none;fill-opacity:1;stroke:#406bbf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 226.92649,125.79302 h 5.43097 V 97.389091 l -5.8483,0\" id=\"path20\" sodipodi:nodetypes=\"cccc\"/>\n    <path style=\"fill:none;stroke:#406abf;stroke-width:1.2;stroke-opacity:1\" d=\"m 140.32576,133.68312 v 6.64264 h 34.25111 v -10.58671 h 10.37912\" id=\"path1\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#406bbf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 204.57771,97.406895 -57.90589,0\" id=\"path21\" sodipodi:nodetypes=\"cc\"/>\n  </g>\n</svg>",
        "clickableShapes": [],
        "javascriptHandlers": [],
        "smilAnimations": [],
        "bindings": [],
        "showCoordinates": false,
        "autoFormatAfterEdit": false,
        "showBrowserErrors": false,
        "showBrowserEvents": false,
        "enableJsDebugging": false,
        "sendMsgWhenLoaded": false,
        "noClickWhenDblClick": false,
        "outputField": "payload",
        "editorUrl": "//drawsvg.org/drawsvg.html",
        "directory": "",
        "panning": "disabled",
        "zooming": "disabled",
        "panOnlyWhenZoomed": false,
        "doubleClickZoomEnabled": false,
        "mouseWheelZoomEnabled": false,
        "dblClickZoomPercentage": 150,
        "cssString": "div.ui-svg svg{\n    color: var(--nr-dashboard-widgetColor);\n    fill: currentColor !important;\n}\ndiv.ui-svg path {\n    fill: inherit;\n}",
        "name": "",
        "x": 720,
        "y": 3720,
        "wires": [
            []
        ]
    },
    {
        "id": "c025225aa660bf27",
        "type": "ui_button",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "name": "",
        "group": "78c63c00e1f5b7aa",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "Green",
        "bgcolor": "white",
        "className": "",
        "icon": "play_arrow",
        "payload": "start_requested",
        "payloadType": "str",
        "topic": "control",
        "topicType": "str",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "8c73132f328aea58"
            ]
        ]
    },
    {
        "id": "731b3aa4b9eea197",
        "type": "ui_button",
        "z": "0e1f3206f48adf14",
        "g": "525f6434f47c15f1",
        "name": "",
        "group": "78c63c00e1f5b7aa",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Abort",
        "tooltip": "",
        "color": "Red",
        "bgcolor": "white",
        "className": "",
        "icon": "stop",
        "payload": "Stopped",
        "payloadType": "str",
        "topic": "control",
        "topicType": "str",
        "x": 1670,
        "y": 180,
        "wires": [
            [
                "ad1436e2f7b892fd"
            ]
        ]
    },
    {
        "id": "f679ca1115c46a1e",
        "type": "ui_button",
        "z": "0e1f3206f48adf14",
        "d": true,
        "g": "ad5ef647cb4ea746",
        "name": "",
        "group": "78c63c00e1f5b7aa",
        "order": 16,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "folder_open",
        "payload": "",
        "payloadType": "str",
        "topic": "file_picker",
        "topicType": "str",
        "x": 2450,
        "y": 2280,
        "wires": [
            [
                "968c5c6feb1e2ed1"
            ]
        ]
    },
    {
        "id": "e78ddeff61a1c93e",
        "type": "ui_button",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "name": "",
        "group": "78c63c00e1f5b7aa",
        "order": 13,
        "width": 10,
        "height": 1,
        "passthru": false,
        "label": "Clear alarms",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 490,
        "y": 3380,
        "wires": [
            [
                "f48aa9a9cf3d509d"
            ]
        ]
    },
    {
        "id": "7edc65431e4f629c",
        "type": "ui_button",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "",
        "group": "78c63c00e1f5b7aa",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "orange",
        "bgcolor": "white",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 620,
        "wires": [
            [
                "45113a7508b326f3",
                "23e7d95574434001"
            ]
        ]
    },
    {
        "id": "bd7d6e9091f594cc",
        "type": "ui_button",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "",
        "group": "2d8055515cc5bf53",
        "order": 26,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Set",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 430,
        "y": 5160,
        "wires": [
            [
                "40cf32dbbea3cb5b"
            ]
        ]
    },
    {
        "id": "a6d1d00bbd920ed1",
        "type": "ui_dropdown",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "",
        "label": "Select tag",
        "tooltip": "",
        "place": "Select option",
        "group": "78c63c00e1f5b7aa",
        "order": 14,
        "width": 10,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 880,
        "y": 1520,
        "wires": [
            [
                "0acf4c3f1837eb3e"
            ]
        ]
    },
    {
        "id": "8ee848ca2c5eacca",
        "type": "ui_dropdown",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select Tag",
        "group": "2d8055515cc5bf53",
        "order": 25,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 480,
        "y": 5240,
        "wires": [
            [
                "f78b0d87bd180969"
            ]
        ]
    },
    {
        "id": "19582343872ba25b",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "SV120",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": ".nr-dashboard-theme .nr-dashboard-text .label {         font-size: 25px;  }",
        "x": 570,
        "y": 4220,
        "wires": [
            [
                "0c65acb1241053b1"
            ]
        ]
    },
    {
        "id": "0fcfdb07a1eabfea",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "HMI Manual",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 170,
        "y": 4320,
        "wires": [
            [
                "ad409912680a26fc",
                "43fb78c263cff003"
            ]
        ]
    },
    {
        "id": "7c8cd82161696dbe",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "SV130",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 570,
        "y": 4280,
        "wires": [
            [
                "155ec724df87d928"
            ]
        ]
    },
    {
        "id": "fa42f446116f08bc",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "SV210",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 570,
        "y": 4340,
        "wires": [
            [
                "b626fbf36323dfa9"
            ]
        ]
    },
    {
        "id": "7a554a0d03cd9a5b",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "SV310 (NO) off",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 600,
        "y": 4400,
        "wires": [
            [
                "e3e51d5261f83d18"
            ]
        ]
    },
    {
        "id": "39244fa04a4ce7d5",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "SV320",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 570,
        "y": 4460,
        "wires": [
            [
                "656a076b5d7b8bb7"
            ]
        ]
    },
    {
        "id": "589ce0fdddac0565",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "PS_HMI_Enable",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 610,
        "y": 4520,
        "wires": [
            [
                "50a2e69e7921ace9"
            ]
        ]
    },
    {
        "id": "5079ebea03413b2a",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "PS_HMI_On",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 4640,
        "wires": [
            [
                "70cf2f311c7d7f5b"
            ]
        ]
    },
    {
        "id": "0a9712d38fbf0dcc",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "PS_HMI_Off",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 22,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 4700,
        "wires": [
            [
                "1b90b1a3bb0e23f6"
            ]
        ]
    },
    {
        "id": "49e5b3cec8bda10d",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "PS_HMI_Disable",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 17,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 610,
        "y": 4580,
        "wires": [
            [
                "9a0d4b79df7f94ae"
            ]
        ]
    },
    {
        "id": "871dd2fd31ac1461",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "PMP200 Run",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 14,
        "width": 3,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 4760,
        "wires": [
            [
                "32d6980f748e37a5",
                "8aab00cd65ccbebc"
            ]
        ]
    },
    {
        "id": "f821e642a405cd20",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "PMP210 Run",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 15,
        "width": 3,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 4820,
        "wires": [
            [
                "f5308650b7caeb57"
            ]
        ]
    },
    {
        "id": "fc3e49778ffffccf",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "HTR201 Run",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 19,
        "width": 3,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 4880,
        "wires": [
            [
                "25678c82a19b1e2d"
            ]
        ]
    },
    {
        "id": "ebedd42d3d73fc5c",
        "type": "ui_switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "",
        "label": "HTRCell Run",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 20,
        "width": 3,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 4940,
        "wires": [
            [
                "2ab23c7acd8dd360"
            ]
        ]
    },
    {
        "id": "ebc99a25bec0f07d",
        "type": "ui_text_input",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "",
        "label": "Tag SP input",
        "tooltip": "",
        "group": "2d8055515cc5bf53",
        "order": 24,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 450,
        "y": 5320,
        "wires": [
            [
                "a41148cd8fa6b452"
            ]
        ]
    },
    {
        "id": "65208708e4372bc8",
        "type": "ui_text",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "group": "78c63c00e1f5b7aa",
        "order": 9,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Status:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "12",
        "color": "#000000",
        "x": 1920,
        "y": 1240,
        "wires": []
    },
    {
        "id": "24805c900167c968",
        "type": "ui_text",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "group": "03ac2f6393c19355",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Test status:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "12",
        "color": "#000000",
        "x": 870,
        "y": 1920,
        "wires": []
    },
    {
        "id": "c64bdfa07c836a68",
        "type": "ui_text",
        "z": "0e1f3206f48adf14",
        "d": true,
        "g": "ad5ef647cb4ea746",
        "group": "78c63c00e1f5b7aa",
        "order": 17,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Selected file:",
        "format": "{{flow.get(test_sequence_path)}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 3010,
        "y": 2280,
        "wires": []
    },
    {
        "id": "c01aa3cf6b0ca42b",
        "type": "ui_chart",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "",
        "group": "78c63c00e1f5b7aa",
        "order": 15,
        "width": 10,
        "height": 6,
        "label": "Trend chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1870,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "a5039fb22db64485",
        "type": "ui_template",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "group": "78c63c00e1f5b7aa",
        "name": "Status indicator",
        "order": 7,
        "width": 1,
        "height": 1,
        "format": "<!-- LED Indicator -->\n<div id=\"led-indicator\" style=\"\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background-color: red;  /* Default: Red (Off) */\n    margin: auto;\n    box-shadow: 0 0 5px rgba(0,0,0,0.5);\n\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(value) {\n            var led = document.getElementById(\"led-indicator\");\n\n            if (value !== \"Finished\" && value !== \"Test not started\") {\n                led.style.backgroundColor = \"green\"; // Green when running\n            } else {\n                led.style.backgroundColor = \"red\";   // Red when stopped\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1940,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "18ecbf3af9f09387",
        "type": "ui_template",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "group": "adaa473fe0dfd2cc",
        "name": "Coil status",
        "order": 1,
        "width": 4,
        "height": 15,
        "format": "<div ng-repeat=\"(tag, value) in msg.payload\">\n    <div style=\"display: flex; align-items: center; margin: 5px;\">\n        <!-- LED Indicator -->\n        <div style=\"width: 8px; height: 8px; border-radius: 50%;\n                    background: {{ value ? 'green' : 'red' }};\n                    box-shadow: 0px 0px 3px {{ value ? 'limegreen' : 'darkred' }};\n                    border: 1px solid {{ value ? 'darkgreen' : 'maroon' }};\">\n        </div>\n        <!-- Tag Name Next to LED -->\n        <span style=\"margin-left: 5px; font-size: 11px; color: black;\">{{ tag }}</span>\n    </div>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1030,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "da9eab8ee8993426",
        "type": "ui_template",
        "z": "0e1f3206f48adf14",
        "g": "e963842154a5297f",
        "group": "2d8055515cc5bf53",
        "name": "Change switch font",
        "order": 29,
        "width": 6,
        "height": 1,
        "format": "<style>\n/* Apply font style to all switch labels */\n.md-container label,\n.nr-dashboard-switch p {\n    font-family: \"Tahoma\", sans-serif !important;\n    font-size: 10px !important;\n    font-weight: normal !important;\n    color: black !important;\n}\n\n/* Target a specific switch label by its text */\nmd-switch:has(span:contains(\"Your Switch Label\")) {\n    font-family: \"Gill Sans\", sans-serif !important;\n    font-size: 20px !important;\n    color: red !important;\n}\n\n/* Reduce spacing between switch label and button */\n.nr-dashboard-switch {\n    display: flex !important;\n    align-items: center !important; /* Ensures vertical alignment */\n}\n\n.nr-dashboard-switch md-switch {\n    margin-left: -7px !important; /* Moves the switch closer to the text */\n}\n\n/* Optionally, target a specific switch label */\n.nr-dashboard-switch span {\n    margin-right: 0px !important;\n    padding-right: 0px !important;\n}\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 170,
        "y": 4000,
        "wires": [
            []
        ]
    },
    {
        "id": "5a3ab29e6c62a71c",
        "type": "e-mail",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "udelcch@gmail.com",
        "dname": "Email Notifier",
        "x": 1110,
        "y": 2420,
        "wires": []
    },
    {
        "id": "81b6eb9b5e5dcf0a",
        "type": "ui_table",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "group": "03ac2f6393c19355",
        "name": "Modbus Data Table",
        "order": 2,
        "width": 6,
        "height": 14,
        "columns": [
            {
                "field": "Parameter",
                "title": "Parameter",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Value",
                "title": "Value",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1870,
        "y": 1660,
        "wires": []
    },
    {
        "id": "ui-table",
        "type": "ui_table",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "group": "78c63c00e1f5b7aa",
        "name": "Alarm Table",
        "order": 12,
        "width": 10,
        "height": 3,
        "columns": [
            {
                "field": "tag",
                "title": "Alarm Tag",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "message",
                "title": "Alarm Message",
                "width": "70%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 870,
        "y": 3320,
        "wires": []
    },
    {
        "id": "8bc7b7d40bdb88bf",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Set currentLogFile",
        "func": "// Stop any previously scheduled timeout\nlet timeoutID = flow.get(\"csvRotationTimeoutID\");\nif (timeoutID) {\n    clearTimeout(timeoutID);\n    flow.set(\"csvRotationTimeoutID\", null);\n}\n\n// Check system status\nlet isRunning = flow.get(\"System_Running_test\") === true;\n\nif (isRunning) {\n    // Generate new timestamped file name\n    let timestamp = new Date().toLocaleString(\"sv-SE\").replace(\" \", \"_\").replace(/:/g, \"-\");\n    let filename = `/app/files/Data/${timestamp}.csv`;\n\n    flow.set(\"currentLogFile\", filename);\n\n    // Output the new filename\n    msg.payload = filename;\n    node.send([msg]);\n}\n\n// Schedule the next filename rotation in 1 hour\nlet newTimeout = setTimeout(() => {\n    node.send([{ payload: \"rotateCSV\" }]);  // Loop back via switch node\n}, 30000); // 1 hour in milliseconds\n\nflow.set(\"csvRotationTimeoutID\", newTimeout);\n\nreturn null;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2780,
        "wires": [
            [
                "95d53dd5427fb178",
                "4f125d9708a25241"
            ]
        ]
    },
    {
        "id": "9a97bbc72a0e3555",
        "type": "ui_dropdown",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "",
        "label": "Log frequency",
        "tooltip": "",
        "place": "Log Frequency",
        "group": "78c63c00e1f5b7aa",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "1 s",
                "value": 1,
                "type": "num"
            },
            {
                "label": "5 s",
                "value": 5,
                "type": "num"
            },
            {
                "label": "10 s",
                "value": 10,
                "type": "num"
            },
            {
                "label": "60 s",
                "value": 60,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 200,
        "y": 2920,
        "wires": [
            [
                "fdd2080b0ef3c2a6",
                "d67cd350e95814e5"
            ]
        ]
    },
    {
        "id": "fdd2080b0ef3c2a6",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Set logIntervalSec",
        "func": "flow.set(\"logIntervalSec\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "2ff1bd7c6ae39338",
        "type": "switch",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "triggerLog",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "triggerLog",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 2640,
        "wires": [
            [
                "3ca569c54e5ebb61"
            ],
            [
                "da753e14585654ba",
                "fb1ec398897fa4c8",
                "a54626c22c4fa4ae",
                "295be76956eeb3d1"
            ]
        ]
    },
    {
        "id": "3ae3b1dd7f0614df",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Trigger",
        "func": "flow.set(\"influxMeasurement\",\"testID1\");\n\n// Output 1: triggers data logging\nlet logTrigger = { payload: \"triggerLog\" };\n\n// Output 2: triggers CSV file rotation\nlet rotateTrigger = { payload: \"rotateCSV\" };\n\nflow.set(\"System_Running_test\", true);\n\n// Send each to a different output\nreturn [logTrigger, rotateTrigger];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 2660,
        "wires": [
            [
                "2ff1bd7c6ae39338"
            ],
            [
                "3f9120833317f5fd"
            ]
        ]
    },
    {
        "id": "3f9120833317f5fd",
        "type": "switch",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "rotateCSV",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "rotateCSV",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 2700,
        "wires": [
            [
                "8bc7b7d40bdb88bf"
            ],
            []
        ]
    },
    {
        "id": "50616e509fe9c04b",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "d": true,
        "g": "32776a10d46d718d",
        "name": "Single coil read",
        "func": "// Retrieve the coil tag and setpoint from msg.payload\nlet tag = msg.payload;\n\n// Retrieve Modbus coil address mapping from flow context\nlet modCoil = flow.get(\"modCoil\") || [];\n\n// Find the Modbus address for the given tag\nlet coilData = modCoil.find(entry => entry[\"Tag Name\"] === tag);\n\nif (!coilData) {\n    //node.error(`Unknown coil tag: ${tag}`, msg);\n    return null;\n}\n\n// Convert Modbus address to 0-based integer\nlet address = parseInt(coilData[\"MODBUS Start Address\"], 10) - 1;\n\n// Construct Modbus write message\nmsg.payload = {\n    'unitId': 1,      // PLC Modbus Unit ID\n    'fc': 1,         // Function Code: Read Single Coil\n    'address': address, // Modbus coil address\n    'quantity': 1\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2980,
        "y": 680,
        "wires": [
            [
                "c71dee702c83ad9e"
            ]
        ]
    },
    {
        "id": "29a608f961f5dfce",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "name": "permStatus",
        "func": "// Assume msg.payload contains the full status object\nlet modbusCoilStatus = flow.get(\"modbusCoilStatus\");\n\nif (typeof modbusCoilStatus !== \"object\" || modbusCoilStatus === null) {\n    node.error(\"Invalid input: msg.payload must be an object\");\n    return null;\n}\n\n// Set flow variables\nflow.set(\"permStatus\", modbusCoilStatus[\"Permissive OK\"]);\n\nmsg.payload = flow.get(\"permStatus\") ? \"green\" : \"red\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 980,
        "wires": [
            [
                "ecec0dddc533efe9",
                "177d65f708dfee16",
                "ec368c283fdfaa8a"
            ]
        ]
    },
    {
        "id": "ecec0dddc533efe9",
        "type": "ui_template",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "group": "78c63c00e1f5b7aa",
        "name": "Permissive status",
        "order": 2,
        "width": 2,
        "height": 1,
        "format": "<div style=\"text-align:center;\">\n    <div style=\"width: 10px; height: 10px; background-color: {{msg.payload}}; border-radius: 50%; display: inline-block; box-shadow: 0px 0px 5px {{msg.payload}};\"></div>\n    <p style=\"color:white; font-size: 12px; margin: 2px;\">Permissive OK</p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1270,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "eb37a99b6ec86e15",
        "type": "ui_template",
        "z": "0e1f3206f48adf14",
        "d": true,
        "g": "b5c880e558e89abe",
        "group": "78c63c00e1f5b7aa",
        "name": "System status",
        "order": 8,
        "width": 2,
        "height": 1,
        "format": "<div style=\"text-align:center;\">\n    <div style=\"width: 10px; height: 10px; background-color: {{msg.payload}}; border-radius: 50%; display: inline-block; box-shadow: 0px 0px 5px {{msg.payload}};\"></div>\n    <p style=\"color:white; font-size: 12px; margin: 2px;\">System Running</p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1240,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "31fc354c9835486a",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "name": "System_Running",
        "func": "// Assume msg.payload contains the full status object\nlet modbusCoilStatus = flow.get(\"modbusCoilStatus\");\n\nif (typeof modbusCoilStatus !== \"object\" || modbusCoilStatus === null) {\n    node.error(\"Invalid input: msg.payload must be an object\");\n    return null;\n}\n\n// Set flow variables\nflow.set(\"System_Running\", modbusCoilStatus[\"System_Running\"]);\n\nmsg.payload = flow.get(\"System_Running\") ? \"green\" : \"red\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1020,
        "wires": [
            [
                "eb37a99b6ec86e15"
            ]
        ]
    },
    {
        "id": "c2e94988fc480afa",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "d": true,
        "g": "32776a10d46d718d",
        "name": "Get permStatus",
        "func": "flow.set(\"permStatus\", msg.payload[0]);\n//flow.set = msg.payload[0] ? \"green\" : \"red\";  // Convert true → \"green\", false → \"red\"\nmsg.payload = flow.get(\"permStatus\") ? \"green\" : \"red\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3380,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "6a418aa5692cfa40",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2700,
        "wires": [
            [
                "3ae3b1dd7f0614df"
            ]
        ]
    },
    {
        "id": "c9fef8c6dd725e70",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2760,
        "wires": [
            [
                "a1bf5e81cfcf58e3"
            ]
        ]
    },
    {
        "id": "a54626c22c4fa4ae",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Data buffer fos CSV",
        "func": "// Get existing buffer or start a new one\nlet buffer = flow.get(\"csvBuffer\") || [];\n\n// Add new data point\nbuffer.push(msg.payload);\n\n// Save buffer back to flow context\nflow.set(\"csvBuffer\", buffer);\n\n// Don't send anything forward yet\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2620,
        "wires": [
            []
        ]
    },
    {
        "id": "d85e0233592774cf",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "rotateCSV",
        "payloadType": "str",
        "x": 680,
        "y": 2920,
        "wires": [
            [
                "95d53dd5427fb178"
            ]
        ]
    },
    {
        "id": "95d53dd5427fb178",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Data buffer flush",
        "func": "if (msg.payload !== \"rotateCSV\") return null;\n\nmsg.filename = flow.get(\"currentLogFile\");\n\n// Retrieve buffered data\nlet buffer = flow.get(\"csvBuffer\") || [];\n\nif (buffer.length === 0) {\n    node.warn(\"No data to flush.\");\n    return null;\n}\n\n// Convert each object to CSV row (assumes all rows have same keys)\nlet keys = Object.keys(buffer[0]);\nlet header = keys.join(\",\");  // Column names\n\nlet csvRows = buffer.map(row => keys.map(k => row[k]).join(\",\"));\n\n// Add header + rows\nlet csvContent = header + \"\\n\" + csvRows.join(\"\\n\") + \"\\n\";\n\n\n// Set up msg for File node\nmsg.payload = csvContent;\n\n// Clear buffer\nflow.set(\"csvBuffer\", []);\n\n// Send to file node\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 2860,
        "wires": [
            [
                "b75393e78ee555ee"
            ]
        ]
    },
    {
        "id": "b75393e78ee555ee",
        "type": "file",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Data logging to CSV",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 980,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "1e299bd8d38544be",
        "type": "file",
        "z": "0e1f3206f48adf14",
        "name": "Data logging to CSV",
        "filename": "/app/files/data file.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2540,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "6d065f0ebbf0e7aa",
        "type": "csv",
        "z": "0e1f3206f48adf14",
        "name": "Process PV data",
        "spec": "rfc",
        "sep": ",",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2310,
        "y": 1740,
        "wires": [
            [
                "1e299bd8d38544be"
            ]
        ]
    },
    {
        "id": "f2ddbc0d5f8a9880",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "name": "Obsolete csv logging",
        "info": "",
        "x": 2310,
        "y": 1700,
        "wires": []
    },
    {
        "id": "f3fbb69e2e543607",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Save last buffer",
        "func": "let timestamp = new Date().toLocaleString(\"sv-SE\").replace(\" \", \"_\").replace(/:/g, \"-\");\nlet filename = `/app/files/Data/${timestamp}.csv`;\n\nflow.set(\"currentLogFile\", filename);\n\n// Output the new filename\nmsg.payload = \"rotateCSV\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2840,
        "wires": [
            [
                "95d53dd5427fb178"
            ]
        ]
    },
    {
        "id": "4f125d9708a25241",
        "type": "delay",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 2780,
        "wires": [
            [
                "3f9120833317f5fd"
            ]
        ]
    },
    {
        "id": "d67cd350e95814e5",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 2980,
        "wires": []
    },
    {
        "id": "295be76956eeb3d1",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 2740,
        "wires": []
    },
    {
        "id": "babd223a9d940a0a",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "3c0806d8c07e2d4a",
        "name": "Modbus Communication Check",
        "info": "",
        "x": 210,
        "y": 5520,
        "wires": []
    },
    {
        "id": "38e0892783d5c8ca",
        "type": "comment",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "Tag SP change",
        "info": "",
        "x": 160,
        "y": 5100,
        "wires": []
    },
    {
        "id": "5b9437060b5fa2a4",
        "type": "ui-button",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "group": "4afe546e24b27211",
        "name": "Start",
        "label": "START",
        "order": 2,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "play",
        "iconPosition": "left",
        "payload": "start_requested",
        "payloadType": "str",
        "topic": "control",
        "topicType": "str",
        "buttonColor": "green",
        "textColor": "white",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 630,
        "y": 160,
        "wires": [
            [
                "8c73132f328aea58"
            ]
        ]
    },
    {
        "id": "6677c69320aea00c",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2570,
        "y": 3000,
        "wires": [
            [
                "eed4b94620ddd3f0"
            ]
        ]
    },
    {
        "id": "eed4b94620ddd3f0",
        "type": "ui-template",
        "z": "0e1f3206f48adf14",
        "d": true,
        "group": "27b4d8d85025283e",
        "page": "",
        "ui": "",
        "name": "test PID",
        "order": 3,
        "width": "3",
        "height": "3",
        "head": "",
        "format": "<template>\n  <svg width=\"200\" height=\"100\">\n    <rect id=\"statusRect\" x=\"50\" y=\"20\" width=\"100\" height=\"60\" fill=\"blue\" />\n  </svg>\n</template>\n\n<script>\nthis.$socket.on('msg-input:' + this.id, (msg) => {\n    // do stuff with msg\n    // runs only when messages are received\n    const el = document.getElementById(\"statusRect\");\n    if (this.msg.payload === true) {\n        el.style.fill = \"green\";\n    } else {\n      el.style.fill = \"red\";\n    }\n})\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2700,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "123bdf8542f19f46",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 2570,
        "y": 3040,
        "wires": [
            [
                "eed4b94620ddd3f0"
            ]
        ]
    },
    {
        "id": "4732c5c0882d98df",
        "type": "ui-template",
        "z": "0e1f3206f48adf14",
        "d": true,
        "group": "27b4d8d85025283e",
        "page": "",
        "ui": "",
        "name": "change color_worked code",
        "order": 5,
        "width": "3",
        "height": "3",
        "head": "",
        "format": "<template>\n  <svg width=\"100\" height=\"100\">\n    <rect id=\"statusRect\" x=\"50\" y=\"20\" width=\"100\" height=\"60\" fill=\"blue\" />\n  </svg>\n</template>\n\n<script setup>\n    const el = document.getElementById(\"statusRect\");\n    if (el) {\n        el.style.fill = \"green\";\n    }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2720,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "651989b179c54ccd",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 2220,
        "wires": [
            [
                "b2ffb736253c42ce",
                "c194274b99b7d817"
            ]
        ]
    },
    {
        "id": "c194274b99b7d817",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 2240,
        "wires": []
    },
    {
        "id": "b3d28003c8a9b96e",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 2240,
        "wires": []
    },
    {
        "id": "f6e55c6746f2e0d0",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "5258e746159f915c",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 2160,
        "wires": []
    },
    {
        "id": "82c8359fa16c35cf",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "name": "Manual PS test with Sequence",
        "func": "msg.payload =     \n    [{ \"Test_step\": 1, \"Duration\": 10, \"Current_Setpoint\": 5, \"Voltage_Setpoint\": 1.9 }, \n    { \"Test_step\": 2, \"Duration\": 120, \"Current_Setpoint\": 10, \"Voltage_Setpoint\": 1.9 }, \n    { \"Test_step\": 3, \"Duration\": 300, \"Current_Setpoint\": 100, \"Voltage_Setpoint\": 6 }, \n    { \"Test_step\": 4, \"Duration\": 6, \"Current_Setpoint\": 0, \"Voltage_Setpoint\": 0 }];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2810,
        "y": 1420,
        "wires": [
            [
                "94cd1eb55c29ee32",
                "b794e4d3b8c4f44d"
            ]
        ]
    },
    {
        "id": "327aac38fe334c10",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2580,
        "y": 1420,
        "wires": [
            [
                "82c8359fa16c35cf"
            ]
        ]
    },
    {
        "id": "94cd1eb55c29ee32",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "name": "debug 35",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2840,
        "y": 1340,
        "wires": []
    },
    {
        "id": "b794e4d3b8c4f44d",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "name": "TKD PS test",
        "func": "// Initialize index to track the current row being processed\nvar index = 0;\nlet modHoldReg = flow.get(\"modHoldReg\") || [];\n// Store CSV data from the incoming message payload\nvar data = msg.payload;\n\nlet timeoutID_psCheckout = flow.get(\"timeoutID_psCheckout\");\n\n// Ensure the data is an array before processing\nif (!Array.isArray(data) || data.length === 0) {\n    node.error(\"CSV data is empty or not an array\", msg);\n    return null;\n}\n\nfunction processNextRow() {\n    // Check if all rows have been processed\n    if (index >= data.length) {\n        node.status({ text: \"Test Completed\" });\n        flow.set(\"PS_checkout_on\", false);\n\n        if (timeoutID_psCheckout) {\n            clearTimeout(timeoutID_psCheckout);\n            flow.set(\"timeoutID_psCheckout\", null); // Clear the timeout ID from flow\n        }\n\n        let currentSetpoint = modHoldReg.find(entry => entry[\"Tag Name\"] === \"Current_Setpoint\");\n        let voltageSetpoint = modHoldReg.find(entry => entry[\"Tag Name\"] === \"Voltage_Setpoint\");\n\n        let resetMsg = {\n            payload: {\n                'unitId': 1,\n                'fc': 16,\n                'address': Math.min(currentSetpoint[\"MODBUS Start Address\"], voltageSetpoint[\"MODBUS Start Address\"]) - 400001,\n                'quantity': 4,\n                'value': [0, 0, 0, 0]  // Set both to zero\n            }\n        };\n\n        var triggerMsg = { payload: \"Test Completed\" };\n        node.send([resetMsg, triggerMsg]);\n        return;\n    }\n\n    var row = data[index];\n\n    // Validate row data before processing\n    if (!row || row.Duration === undefined) {\n        node.error(`Invalid row data at index ${index}: ${JSON.stringify(row)}`, msg);\n        return;\n    }\n\n    node.status({ text: `Row ${index + 1}: Processing setpoints` });\n\n    let modbusValues = [];\n    let address = 100; // Starting Modbus address, adjust as needed\n\n    // Process all elements in the row except 'Test Step' and 'Duration'\n    Object.keys(row).forEach(tag => {\n        if (tag !== \"Test_step\" && tag !== \"Duration\") {\n            let buffer = Buffer.alloc(4);\n            buffer.writeFloatBE(parseFloat(row[tag]), 0);\n            modbusValues.push(buffer.readUInt16BE(2)); // High 16 bits\n            modbusValues.push(buffer.readUInt16BE(0)); // Low 16 bits\n        }\n    });\n\n    // Ensure modbusValues length is even (required for Modbus FC16)\n    if (modbusValues.length % 2 !== 0) {\n        node.error(\"Invalid register quantity: Must be an even number\", msg);\n        return;\n    }\n\n    // Create Modbus write message with all setpoints\n    var combinedMsg = {\n        payload: {\n            'unitId': 1,\n            'fc': 16,  // Function Code: Write Multiple Registers\n            'address': address,  // Starting address for the first tag.  Modbus Address (400001 - 400001 = 10 for 0-based addressing)\n            'quantity': modbusValues.length,\n            'value': modbusValues\n        }\n    };\n\n    // Retrieve test duration and initialize counter\n    var duration = parseInt(row.Duration);\n    var counter = 0;\n\n    function loop() {\n        let runTest = flow.get(\"PS_checkout_on\");\n        let modHoldReg = flow.get(\"modHoldReg\") || [];\n\n        if (runTest === false ) {\n            let statusMessage = \"Stopped\";\n            node.status({ text: statusMessage });\n\n            if (timeoutID_psCheckout) {\n                clearTimeout(timeoutID_psCheckout);\n                flow.set(\"timeoutID_psCheckout\", null); // Clear the timeout ID from flow\n            }\n\n            let currentSetpoint = modHoldReg.find(entry => entry[\"Tag Name\"] === \"Current_Setpoint\");\n            let voltageSetpoint = modHoldReg.find(entry => entry[\"Tag Name\"] === \"Voltage_Setpoint\");\n\n            let resetMsg = {\n                payload: {\n                    'unitId': 1,\n                    'fc': 16,\n                    'address': Math.min(currentSetpoint[\"MODBUS Start Address\"], voltageSetpoint[\"MODBUS Start Address\"]) - 400001,\n                    'quantity': 4,\n                    'value': [0, 0, 0, 0]  // Set both to zero\n                }\n            };\n\n            var triggerMsg = { payload: \"Test Stopped\" };\n            node.send([resetMsg, triggerMsg]);\n            return;\n        }\n\n        if (counter < duration) {\n            node.send([combinedMsg, null]);\n            counter++;\n            timeoutID_psCheckout = setTimeout(loop, 1000); // Check conditions every second\n            flow.set(\"timeoutID_psCheckout\", timeoutID_psCheckout); // Store the timeout ID in flow\n        } else {\n            index++;\n            processNextRow();\n        }\n    }\n\n\n    loop(); // Start the counter loop\n}\n\n// Start processing the first row\n// Clear timeout if test is stopped\n\nprocessNextRow();\nreturn null;\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3090,
        "y": 1400,
        "wires": [
            [
                "381165a5f2cb9703",
                "7a03c633b16f5dc4"
            ],
            [
                "3c0607a0283f4c3d"
            ],
            []
        ]
    },
    {
        "id": "7a03c633b16f5dc4",
        "type": "modbus-flex-write",
        "z": "0e1f3206f48adf14",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f905b5f3395bcec1",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 3310,
        "y": 1400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3c0607a0283f4c3d",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3300,
        "y": 1460,
        "wires": []
    },
    {
        "id": "381165a5f2cb9703",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3280,
        "y": 1360,
        "wires": []
    },
    {
        "id": "cc44b6efd5987e0d",
        "type": "ui-form",
        "z": "0e1f3206f48adf14",
        "name": "",
        "group": "2004d5a11cd15969",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Current_Setpoint",
                "key": "Current_Setpoint",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Voltage_Setpoint",
                "key": "Voltage_Setpoint",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Duration",
                "key": "Duration",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Current_Setpoint": "",
            "Voltage_Setpoint": "",
            "Duration": ""
        },
        "payload": "",
        "submit": "Set",
        "cancel": "Clear",
        "resetOnSubmit": false,
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "passthru": false,
        "dropdownOptions": [],
        "x": 2650,
        "y": 1320,
        "wires": [
            [
                "c6149cae441d7eb4",
                "dbded62310bf2989"
            ]
        ]
    },
    {
        "id": "c6149cae441d7eb4",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2800,
        "y": 1280,
        "wires": []
    },
    {
        "id": "573e8369778f1b6f",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "name": "PS_checkout_on",
        "func": "flow.set(\"PS_checkout_on\", msg.payload);\nvar msg = { payload: { \"tag\": \"PS_checkout_on\", \"setpoint\": msg.payload } };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2990,
        "y": 1120,
        "wires": [
            [
                "7a89c662328d8085"
            ]
        ]
    },
    {
        "id": "7a89c662328d8085",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "name": "Single coil write",
        "func": "// Retrieve the coil tag and setpoint from msg.payload\nlet { tag, setpoint } = msg.payload;\n\n// Retrieve Modbus coil address mapping from flow context\nlet modCoil = flow.get(\"modCoil\") || [];\n\n// Find the Modbus address for the given tag\nlet coilData = modCoil.find(entry => entry[\"Tag Name\"] === tag);\n\nif (!coilData) {\n    node.error(`Unknown coil tag: ${tag}`, msg);\n    return null;\n}\n\n// Convert Modbus address to 0-based integer\nlet address = parseInt(coilData[\"MODBUS Start Address\"], 10) - 1;\n\n// Construct Modbus write message\nmsg.payload = {\n    'unitId': 1,      // PLC Modbus Unit ID\n    'fc': 5,         // Function Code: Write Single Coil\n    'address': address, // Modbus coil address\n    'value': setpoint ? 1 : 0, // Convert boolean to 1 or 0\n    'quantity': 1\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3180,
        "y": 1120,
        "wires": [
            [
                "ff7de27601c9fcb2"
            ]
        ]
    },
    {
        "id": "ff7de27601c9fcb2",
        "type": "modbus-flex-write",
        "z": "0e1f3206f48adf14",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f905b5f3395bcec1",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 3370,
        "y": 1120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "dbded62310bf2989",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "name": "Form input process",
        "func": "// Clone the original payload\nlet payload = Object.assign({}, msg.payload);\n\n// Add the Test_step field\npayload.Test_step = 1;\n\n// Set the modified payload back to msg\nmsg.payload = [payload];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3090,
        "y": 1280,
        "wires": [
            [
                "f7f9a8e0751ff2a1",
                "b794e4d3b8c4f44d"
            ]
        ]
    },
    {
        "id": "e355019336ef3e38",
        "type": "ui-button",
        "z": "0e1f3206f48adf14",
        "group": "2004d5a11cd15969",
        "name": "PS Run",
        "label": "PS Run",
        "order": 2,
        "width": "",
        "height": "",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "play-box-outline",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "green",
        "textColor": "white",
        "iconColor": "white",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 2660,
        "y": 1120,
        "wires": [
            [
                "573e8369778f1b6f"
            ]
        ]
    },
    {
        "id": "c58c447ae5e94ec8",
        "type": "ui-button",
        "z": "0e1f3206f48adf14",
        "group": "2004d5a11cd15969",
        "name": "PS Stop",
        "label": "PS Stop",
        "order": 3,
        "width": "",
        "height": "",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "stop-circle-outline",
        "iconPosition": "left",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "red",
        "textColor": "white",
        "iconColor": "white",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 2640,
        "y": 1240,
        "wires": [
            [
                "87a16797a8edb3a8"
            ]
        ]
    },
    {
        "id": "f7f9a8e0751ff2a1",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3360,
        "y": 1240,
        "wires": []
    },
    {
        "id": "87a16797a8edb3a8",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "name": "Set VI to 0",
        "func": "msg.payload =     \n    [{ \"Test_step\": 1, \"Duration\": 1, \"Current_Setpoint\": 0, \"Voltage_Setpoint\": 0 }];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2830,
        "y": 1220,
        "wires": [
            [
                "573e8369778f1b6f",
                "b794e4d3b8c4f44d"
            ]
        ]
    },
    {
        "id": "f3a857460f490566",
        "type": "ui-template",
        "z": "0e1f3206f48adf14",
        "d": true,
        "group": "27b4d8d85025283e",
        "page": "",
        "ui": "",
        "name": "test PID_change color_worked",
        "order": 4,
        "width": "3",
        "height": "3",
        "head": "",
        "format": "<template>\n  <svg width=\"200\" height=\"200\">\n    <rect id=\"SV210_1\" x=\"25\" y=\"25\" width=\"20\" height=\"20\" style=\"fill:#e6e6e6;stroke:black;\" />\n    <rect id=\"SV210_2\" x=\"25\" y=\"45\" width=\"20\" height=\"20\" style=\"fill:#e6e6e6;stroke:black;\" />\n    <rect id=\"SV210_3\" x=\"25\" y=\"65\" width=\"20\" height=\"20\" style=\"fill:#e6e6e6;stroke:black;\" />\n    <rect id=\"SV310_1\" x=\"25\" y=\"85\" width=\"20\" height=\"20\" style=\"fill:#e6e6e6;stroke:black;\" />\n    <rect id=\"SV310_2\" x=\"25\" y=\"105\" width=\"20\" height=\"20\" style=\"fill:#e6e6e6;stroke:black;\" />\n    <rect id=\"SV310_3\" x=\"25\" y=\"125\" width=\"20\" height=\"20\" style=\"fill:#e6e6e6;stroke:black;\" />\n  </svg>\n</template>\n\n<script>\nexport default {\n  mounted() {\n    this.$socket.on('msg-input:' + this.id, (msg) => {\n      const payload = msg?.payload;\n      if (!Array.isArray(payload)) return;\n      payload.forEach(update => {\n        const elements = document.querySelectorAll(update.selector);\n        elements.forEach(el => {\n          if (update.attributeName === \"fill\") {\n            el.style.fill = update.attributeValue;\n          } else {\n            el.setAttribute(update.attributeName, update.attributeValue);\n          }\n        });\n      });\n    });\n  },\n  unmounted() {\n    // Optionally remove listener if needed\n    this.$socket.off('msg-input:' + this.id);\n  }\n}\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2730,
        "y": 3100,
        "wires": [
            []
        ]
    },
    {
        "id": "e7832801775cf2e5",
        "type": "ui-template",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "group": "43d8a259e21e9d16",
        "page": "",
        "ui": "",
        "name": "Dashboard 2.0 P&ID",
        "order": 1,
        "width": "5",
        "height": "4",
        "head": "",
        "format": "<template>\n<svg xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns=\"http://www.w3.org/2000/svg\" width=\"698px\" height=\"432px\" viewBox=\"52.12651062011719 21.85950469970703 320.168212890625 198.15432739257812\" version=\"1.1\" id=\"svg1\" inkscape:version=\"1.4 (86a8ad7, 2024-10-11)\" sodipodi:docname=\"drawing_AEM1.svg\" preserveAspectRatio=\"xMinYMin meet\"><rect id=\"svgEditorBackground\" x=\"0\" y=\"0\" width=\"507.9999694824219\" height=\"285.75\" style=\"fill:none;stroke:none\"/>\n  <sodipodi:namedview id=\"namedview1\" pagecolor=\"#ffffff\" bordercolor=\"#999999\" borderopacity=\"1\" inkscape:showpageshadow=\"2\" inkscape:pageopacity=\"0\" inkscape:pagecheckerboard=\"0\" inkscape:deskcolor=\"#d1d1d1\" inkscape:document-units=\"mm\" inkscape:zoom=\"0.90127385\" inkscape:cx=\"720.0919\" inkscape:cy=\"509.83394\" inkscape:window-width=\"1920\" inkscape:window-height=\"1001\" inkscape:window-x=\"-7\" inkscape:window-y=\"-7\" inkscape:window-maximized=\"1\" inkscape:current-layer=\"layer2\" showgrid=\"false\"/>\n  <defs id=\"defs1\">\n    <marker style=\"overflow:visible\" id=\"marker45\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path45\"/>\n    </marker>\n    <marker style=\"overflow:visible\" id=\"marker44\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path44\"/>\n    </marker>\n    <marker style=\"overflow:visible\" id=\"marker43\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path43\"/>\n    </marker>\n    <marker style=\"overflow:visible\" id=\"marker42\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path42\"/>\n    </marker>\n    <marker style=\"overflow:visible\" id=\"ConcaveTriangle\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path41\"/>\n    </marker>\n    <marker style=\"overflow:visible\" id=\"DartArrow\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Dart arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" d=\"M 0,0 5,-5 -12.5,0 5,5 Z\" transform=\"scale(-0.5)\" id=\"path40\"/>\n    </marker>\n    <pattern inkscape:collect=\"always\" xlink:href=\"#Strips1_1\" preserveAspectRatio=\"xMidYMid\" id=\"pattern17\" patternTransform=\"matrix(0.25490928,0.17103592,-0.14717195,0.29624288,-76.115336,-82.492364)\" x=\"0\" y=\"0\"/>\n    <pattern inkscape:collect=\"always\" patternUnits=\"userSpaceOnUse\" width=\"2\" height=\"10\" patternTransform=\"translate(0,0) scale(2,2)\" preserveAspectRatio=\"xMidYMid\" id=\"Strips1_1\" style=\"fill:#000000\" inkscape:stockid=\"Stripes 01 (1:1)\" inkscape:isstock=\"true\" inkscape:label=\"Stripes 01 (1:1)\">\n      <rect style=\"stroke:none\" x=\"0\" y=\"-0.5\" width=\"1\" height=\"11\" id=\"rect134\"/>\n    </pattern>\n    <marker style=\"overflow:visible\" id=\"marker44-9\" refX=\"0\" refY=\"0\" orient=\"auto-start-reverse\" inkscape:stockid=\"Concave triangle arrow\" markerWidth=\"0.5\" markerHeight=\"0.5\" viewBox=\"0 0 1 1\" inkscape:isstock=\"true\" inkscape:collect=\"always\" preserveAspectRatio=\"xMidYMid\">\n      <path transform=\"scale(0.7)\" d=\"M -2,-4 9,0 -2,4 c 2,-2.33 2,-5.66 0,-8 z\" style=\"fill:context-stroke;fill-rule:evenodd;stroke:none\" id=\"path44-4\"/>\n    </marker>\n  </defs>\n  <g inkscape:label=\"Layer 1\" inkscape:groupmode=\"layer\" id=\"layer1\">\n    <path style=\"fill:#000000;stroke-width:0.264583\" d=\"M 297.08194,163.60179 V 99.814807\" id=\"path2\"/>\n    <rect style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.775595;stroke-dasharray:none;stroke-opacity:1\" id=\"rect4\" width=\"33.735306\" height=\"52.410202\" x=\"112.88165\" y=\"81.572609\" ry=\"6.6265779\"/>\n    <path id=\"LT201\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 146.29544,118.93521 h -33.09226 v 8.2869 c 0,3.62612 2.89889,6.54587 6.5001,6.54587 h 20.09207 c 3.6012,0 6.50009,-2.91975 6.50009,-6.54587 z\"/>\n    <path id=\"LT202\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"M 146.29502,97.910872 H 113.2036 v 21.238518 h 33.09142 z\"/>\n    <path id=\"LT203\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 119.70328,81.785892 c -3.60121,0 -6.5001,2.91895 -6.5001,6.54508 v 9.68699 h 33.09226 v -9.68699 c 0,-3.62613 -2.89889,-6.54508 -6.50009,-6.54508 z\" inkscape:label=\"#LT203\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.28933;stroke-dasharray:none;stroke-opacity:1\" id=\"PMP200_2\" width=\"12.371079\" height=\"7.0946174\" x=\"155.78075\" y=\"147.8779\"/>\n    <circle style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.309003;stroke-dasharray:none;stroke-opacity:1\" id=\"PMP200_1\" cx=\"155.55208\" cy=\"154.46744\" r=\"6.5797076\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 154.24709,124.86408 h 27.35044\" id=\"path30\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 153.60029,110.17245 h 28.27444\" id=\"path31\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 153.78509,125.78807 h 28.08964\" id=\"path32\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"88.451965\" y=\"101.49514\" id=\"text41\"><tspan sodipodi:role=\"line\" id=\"tspan41\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"88.451965\" y=\"101.49514\">SV120</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"157.11792\" y=\"92.034447\" id=\"text41-7\"><tspan sodipodi:role=\"line\" id=\"tspan41-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"157.11792\" y=\"92.034447\">LT203</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"148.86781\" y=\"166.41386\" id=\"text41-13\"><tspan sodipodi:role=\"line\" id=\"tspan41-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"148.86781\" y=\"166.41386\">PMP200</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 96.143,153.79356 v -5.14574\" id=\"path5-1\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.354308;stroke-dasharray:none;stroke-opacity:1\" id=\"SV210_3\" width=\"6.3941364\" height=\"5.433466\" x=\"92.94593\" y=\"143.0372\" ry=\"0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"94.630341\" y=\"147.39536\" id=\"text41-1-9\"><tspan sodipodi:role=\"line\" id=\"tspan41-9-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"94.630341\" y=\"147.39536\">S</tspan></text>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV210_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,91.67328,158.74407)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV210_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,100.62865,148.81453)\"/>\n    <rect style=\"fill:#b3b3b3;stroke:#000000;stroke-width:0.155496;stroke-dasharray:none\" id=\"Cell_1\" width=\"6.6500001\" height=\"30.082857\" x=\"239.53181\" y=\"89.901398\"/>\n    <rect style=\"fill:#e6e6e6;stroke:#000000;stroke-width:0.136308;stroke-dasharray:none\" id=\"rect2\" width=\"3.9426398\" height=\"23.728094\" x=\"246.32745\" y=\"93.078781\"/>\n    <rect style=\"fill:#b3b3b3;stroke:#000000;stroke-width:0.155496;stroke-dasharray:none\" id=\"Cell_2\" width=\"6.6497378\" height=\"30.082857\" x=\"250.416\" y=\"89.901398\"/>\n    <text xml:space=\"preserve\" style=\"font-size:3.175px;text-align:start;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#b3b3b3;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" x=\"241.92961\" y=\"106.06137\" id=\"text2\"><tspan sodipodi:role=\"line\" id=\"tspan2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.175px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#1a1a1a;stroke-width:0.2\" x=\"241.92961\" y=\"106.06137\">+</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-size:3.175px;text-align:start;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#b3b3b3;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" x=\"253.21144\" y=\"105.76526\" id=\"text2-1\"><tspan sodipodi:role=\"line\" id=\"tspan2-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.175px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#1a1a1a;stroke-width:0.2\" x=\"253.21144\" y=\"105.76526\">-</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"270.85858\" y=\"62.502247\" id=\"text41-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"270.85858\" y=\"62.502247\">SV310</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 277.82003,52.982803 v -5.14574\" id=\"path5-1-4\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.354308;stroke-dasharray:none;stroke-opacity:1\" id=\"SV310_3\" width=\"6.3941364\" height=\"5.433466\" x=\"274.62296\" y=\"42.22644\" ry=\"0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"276.30737\" y=\"46.584595\" id=\"text41-1-9-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-9-2-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"276.30737\" y=\"46.584595\">S</tspan></text>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV310_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,273.35031,57.933313)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV310_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,282.30568,48.003773)\"/>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 146.36992,90.443502 h 9.83446\" id=\"path3\"/>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 146.22313,105.70894 h 9.98125\" id=\"path4\"/>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 146.22313,122.88255 h 9.83446\" id=\"path5\"/>\n    <g id=\"g1\" transform=\"translate(122.64954,0.18601478)\">\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"34.480518\" y=\"106.89229\" id=\"text41-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"34.480518\" y=\"106.89229\">LT202</tspan></text>\n    </g>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"156.98701\" y=\"124.265\" id=\"text41-1\"><tspan sodipodi:role=\"line\" id=\"tspan41-23\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"156.98701\" y=\"124.265\">LT201</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"88.823891\" y=\"164.72838\" id=\"text41-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"88.823891\" y=\"164.72838\">SV210</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 95.840281,91.128017 v -5.14574\" id=\"path5-1-7\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.354308;stroke-dasharray:none;stroke-opacity:1\" id=\"SV120_3\" width=\"6.3941364\" height=\"5.433466\" x=\"92.643219\" y=\"80.371658\" ry=\"0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"94.327637\" y=\"84.729805\" id=\"text41-1-9-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-9-2-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"94.327637\" y=\"84.729805\">S</tspan></text>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV120_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,91.370561,96.078537)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV120_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,100.32593,86.148987)\"/>\n    <rect style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.775595;stroke-dasharray:none;stroke-opacity:1\" id=\"rect4-6\" width=\"33.735306\" height=\"52.410202\" x=\"291.26431\" y=\"79.172539\" ry=\"6.6265779\"/>\n    <path id=\"LT301\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 324.6781,116.53515 h -33.09226 v 8.2869 c 0,3.62612 2.89889,6.54587 6.5001,6.54587 h 20.09207 c 3.6012,0 6.50009,-2.91975 6.50009,-6.54587 z\"/>\n    <path id=\"LT302\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 324.67768,95.510814 h -33.09142 v 21.238516 h 33.09142 z\"/>\n    <path id=\"LT303\" style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 298.08594,79.385834 c -3.60121,0 -6.5001,2.91895 -6.5001,6.54508 v 9.68699 h 33.09226 v -9.68699 c 0,-3.62613 -2.89889,-6.54508 -6.50009,-6.54508 z\" inkscape:label=\"#LT203\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 332.62975,122.46402 h 27.35044\" id=\"path30-8\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 331.98295,107.77239 h 28.27444\" id=\"path31-6\"/>\n    <path style=\"fill:#008037;fill-opacity:1;stroke:#000000;stroke-width:0;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 332.16775,123.38801 h 28.08964\" id=\"path32-0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"335.50058\" y=\"89.634377\" id=\"text41-7-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-6-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"335.50058\" y=\"89.634377\">LT303</tspan></text>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 324.75258,88.043444 h 9.83446\" id=\"path3-8\"/>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 324.60579,103.30888 h 9.98125\" id=\"path4-6\"/>\n    <path style=\"fill:#1a1a1a;stroke:#000000;stroke-width:0.2;stroke-dasharray:none\" d=\"m 324.60579,120.48249 h 9.83446\" id=\"path5-5\"/>\n    <g id=\"g2\" transform=\"translate(301.0322,-2.2140469)\">\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"34.480518\" y=\"106.89229\" id=\"text41-2-0\"><tspan sodipodi:role=\"line\" id=\"tspan41-7-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"34.480518\" y=\"106.89229\">LT302</tspan></text>\n    </g>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"335.36969\" y=\"121.86494\" id=\"text41-1-0\"><tspan sodipodi:role=\"line\" id=\"tspan41-23-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"335.36969\" y=\"121.86494\">LT301</tspan></text>\n    <circle style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.309003;stroke-dasharray:none;stroke-opacity:1\" id=\"HTR200\" cx=\"221.98189\" cy=\"150.87193\" r=\"6.5797076\"/>\n    <path style=\"fill:none;stroke:#000000;stroke-width:1.2;stroke-dasharray:none\" d=\"m 212.80889,151.13678 h 5.29335 l 2.3872,-4.7744 3.5289,7.99193 2.3872,-3.6327 h 5.50094\" id=\"path6\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"212.71053\" y=\"162.2764\" id=\"text41-13-0\"><tspan sodipodi:role=\"line\" id=\"tspan41-2-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"212.71053\" y=\"162.2764\">HTR201</tspan></text>\n    <path style=\"fill:none;stroke:#406bbf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 136.58927,133.68312 v 20.55067 l 12.20022,0\" id=\"path7\" sodipodi:nodetypes=\"ccc\"/>\n    <path style=\"fill:none;stroke:#406bbf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 168.03387,151.12005 44.92095,0\" id=\"path8\" sodipodi:nodetypes=\"cc\"/>\n    <path style=\"fill:none;stroke:#406bbf;stroke-width:1.20599;stroke-dasharray:none;marker-end:url(#marker42);stroke-opacity:1\" d=\"m 228.56,150.70663 14.10247,-0.11009 v -26.79906\" id=\"path9\" sodipodi:nodetypes=\"ccc\"/>\n    <path style=\"fill:none;stroke:#406bbf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"M 242.7607,89.794489 V 70.749397 H 137.976 l 0,10.641766\" id=\"path10\" sodipodi:nodetypes=\"cccc\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"256.77304\" y=\"190.58794\" id=\"text41-61\"><tspan sodipodi:role=\"line\" id=\"tspan41-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"256.77304\" y=\"190.58794\">SV320</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 264.04891,179.88506 v -5.14574\" id=\"path5-1-2\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.354308;stroke-dasharray:none;stroke-opacity:1\" id=\"SV320_3\" width=\"6.3941364\" height=\"5.433466\" x=\"260.85184\" y=\"169.12871\" ry=\"0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"262.53625\" y=\"173.48685\" id=\"text41-1-9-22\"><tspan sodipodi:role=\"line\" id=\"tspan41-9-2-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"262.53625\" y=\"173.48685\">S</tspan></text>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV320_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,259.57919,184.83557)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV320_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,268.53457,174.90603)\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"M 253.90926,89.827492 V 74.385844 h 9.56854\" id=\"path22\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"260.23669\" y=\"83.151291\" id=\"text41-61-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-4-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"260.23669\" y=\"83.151291\">BPR302</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 269.30807,74.497529 v -5.14574\" id=\"path5-1-2-7\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"BPR302_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,264.83835,79.448039)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"BPR302_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,273.79373,69.518499)\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.3;stroke-dasharray:none;stroke-opacity:1\" id=\"path23\" sodipodi:type=\"arc\" sodipodi:cx=\"269.32678\" sodipodi:cy=\"-69.288177\" sodipodi:rx=\"2.0758247\" sodipodi:ry=\"2.0758247\" sodipodi:start=\"0\" sodipodi:end=\"3.1415927\" sodipodi:arc-type=\"slice\" d=\"m 271.40261,-69.288177 a 2.0758247,2.0758247 0 0 1 -1.03792,1.797716 2.0758247,2.0758247 0 0 1 -2.07582,0 2.0758247,2.0758247 0 0 1 -1.03791,-1.797716 h 2.07582 z\" transform=\"scale(1,-1)\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.3;stroke-dasharray:none;stroke-opacity:1\" d=\"m 269.09054,74.256989 -4.77044,-5.10071 v -4.95393 h 5.06399 v 2.93567\" id=\"path24\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 253.88597,79.711673 v -26.77814 h 17.8521\" id=\"path26\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker45)\" d=\"M 316.4641,78.382113 V 35.227916\" id=\"path27\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 284.12853,52.622161 h 31.91581\" id=\"path28\" sodipodi:nodetypes=\"cc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#ConcaveTriangle)\" d=\"m 309.12495,131.77443 v 47.70708 l -35.03619,0.0734\" id=\"path29\" sodipodi:nodetypes=\"ccc\"/>\n    <g id=\"g4\" inkscape:label=\"HEX210 group\" transform=\"translate(-100.98669,-63.703816)\">\n      <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.420264;stroke-dasharray:none;stroke-opacity:1\" id=\"HEX210\" width=\"14.614301\" height=\"4.650341\" x=\"212.46649\" y=\"123.96944\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 214.84355,122.50622 v 7.57676 l -2.49099,2.49099\" id=\"path17\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 224.81672,122.50622 v 7.57676 l 2.49099,2.49099\" id=\"path17-2\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 218.02777,130.63686 c -1.11921,-0.53209 0,-0.84401 0,-0.84401 l 1.35775,0.27523 z\" id=\"path18\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 221.35399,130.66163 c 1.11921,-0.53209 0,-0.84401 0,-0.84401 l -1.35775,0.27523 z\" id=\"path18-1\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 204.22779,126.09549 h 8.36663\" id=\"path19\"/>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"210.5563\" y=\"137.36679\" id=\"text41-13-7-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-2-9-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"210.5563\" y=\"137.36679\">HEX210</tspan></text>\n    </g>\n    <path style=\"fill:none;fill-opacity:1;stroke:#406abf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"M 257.60414,179.51559 H 130.93042 l 0,-45.64951\" id=\"path33\" sodipodi:nodetypes=\"ccc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#406abf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker43)\" d=\"M 102.33817,153.66293 H 125.6393 V 138.14614\" id=\"path34\" sodipodi:nodetypes=\"ccc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker44)\" d=\"m 102.10464,90.505964 h 6.80259\" id=\"path35\" sodipodi:nodetypes=\"cc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#35a75a;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#DartArrow)\" d=\"M 130.56938,81.268543 V 54.603268 h 30.8919\" id=\"path36\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"120.8921\" y=\"94.683907\" id=\"text41-3-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-8-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"120.8921\" y=\"94.683907\">SEP200</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"299.01617\" y=\"93.524315\" id=\"text41-3-6-4\"><tspan sodipodi:role=\"line\" id=\"tspan41-8-1-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"299.01617\" y=\"93.524315\">SEP300</tspan></text>\n    <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"HCD220\" cx=\"140.21278\" cy=\"46.687172\" r=\"3.1137373\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 140.21278,49.923588 v 4.255439\" id=\"path38\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"132.28711\" y=\"42.429344\" id=\"text41-18\"><tspan sodipodi:role=\"line\" id=\"tspan41-49\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"132.28711\" y=\"42.429344\">HCD220</tspan></text>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 136.95254,46.654164 h 6.17558\" id=\"path46\"/>\n    <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"PT302_1\" cx=\"253.87256\" cy=\"45.099213\" r=\"3.1137373\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 253.87255,48.335628 v 4.255439\" id=\"path38-0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"246.98479\" y=\"41.048969\" id=\"text41-18-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"246.98479\" y=\"41.048969\">PT302</tspan></text>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 250.61231,45.066204 h 6.17558\" id=\"path46-7\"/>\n    <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"TE201\" cx=\"250.65663\" cy=\"131.1696\" r=\"3.1137373\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 247.39638,131.1696 h 6.17558\" id=\"path46-2\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"M 247.38643,131.1696 H 242.9234\" id=\"path47\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"255.10944\" y=\"132.95612\" id=\"text41-18-9\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"255.10944\" y=\"132.95612\">TE201</tspan></text>\n    <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"PT201\" cx=\"250.90489\" cy=\"150.17039\" r=\"3.1137373\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 247.64464,150.17039 h 6.17558\" id=\"path46-2-6\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 247.63469,150.17039 h -4.46303\" id=\"path47-1\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"255.35771\" y=\"151.95691\" id=\"text41-18-9-5\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"255.35771\" y=\"151.95691\">PT201</tspan></text>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 82.691174,90.756703 h 6.80259\" id=\"path35-2\" sodipodi:nodetypes=\"cc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#406abf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 82.961834,153.78627 h 6.80259\" id=\"path35-2-5\" sodipodi:nodetypes=\"cc\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"65.56723\" y=\"155.5878\" id=\"text41-20\"><tspan sodipodi:role=\"line\" id=\"tspan41-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"65.56723\" y=\"155.5878\">DI H<tspan style=\"font-size:65%;baseline-shift:sub\" id=\"tspan48\">2</tspan>O</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"76.515106\" y=\"92.236549\" id=\"text41-20-7\"><tspan sodipodi:role=\"line\" id=\"tspan41-0-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"76.515106\" y=\"92.236549\">N<tspan style=\"font-size:65%;baseline-shift:sub\" id=\"tspan47\">2</tspan></tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"166.74419\" y=\"56.188801\" id=\"text41-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-26\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"166.74419\" y=\"56.188801\">O<tspan style=\"font-size:65%;baseline-shift:sub\" id=\"tspan49\">2</tspan> Discharge</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"318.12579\" y=\"41.224129\" id=\"text41-8-0\"><tspan sodipodi:role=\"line\" id=\"tspan41-26-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"318.12579\" y=\"41.224129\">H<tspan style=\"font-size:65%;baseline-shift:sub\" id=\"tspan49-2\">2</tspan> Discharge</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"335.05841\" y=\"77.509506\" id=\"text41-35\"><tspan sodipodi:role=\"line\" id=\"tspan41-12\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"335.05841\" y=\"77.509506\">SV130</tspan></text>\n    <path style=\"fill:#808080;fill-opacity:1;stroke:#000000;stroke-width:0.391066;stroke-dasharray:none;stroke-opacity:1\" d=\"m 342.33429,66.806643 v -5.14574\" id=\"path5-1-0\"/>\n    <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.354308;stroke-dasharray:none;stroke-opacity:1\" id=\"SV130_3\" width=\"6.3941364\" height=\"5.433466\" x=\"339.13721\" y=\"56.050282\" ry=\"0\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"340.82162\" y=\"60.408428\" id=\"text41-1-9-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-9-2-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"340.82162\" y=\"60.408428\">S</tspan></text>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV130_1\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"1.0279247\" inkscape:transform-center-y=\"0.0016678831\" transform=\"matrix(0,-0.11902885,0.11902885,0,337.86456,71.757156)\"/>\n    <path sodipodi:type=\"star\" style=\"fill:#e6e6e6;stroke:#000000;stroke-width:1.68026;stroke-dasharray:none\" id=\"SV130_2\" inkscape:flatsided=\"true\" sodipodi:sides=\"3\" sodipodi:cx=\"41.686367\" sodipodi:cy=\"73.097923\" sodipodi:r1=\"34.592236\" sodipodi:r2=\"17.29612\" sodipodi:arg1=\"0.52440922\" sodipodi:arg2=\"1.5716068\" inkscape:rounded=\"0\" inkscape:randomized=\"0\" d=\"M 71.630094,90.418314 11.714605,90.369756 41.714402,38.505699 Z\" inkscape:transform-center-x=\"-1.0279282\" inkscape:transform-center-y=\"-0.0016684426\" transform=\"matrix(0,0.11902885,-0.11902885,0,346.81994,61.827613)\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1;marker-start:url(#marker44-9)\" d=\"m 320.36358,66.488982 15.75635,0\" id=\"path35-1\" sodipodi:nodetypes=\"cc\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 348.52619,66.624291 h 6.80259\" id=\"path35-2-8\" sodipodi:nodetypes=\"cc\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"356.14774\" y=\"68.177528\" id=\"text41-20-7-9\"><tspan sodipodi:role=\"line\" id=\"tspan41-0-1-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"356.14774\" y=\"68.177528\">N<tspan style=\"font-size:65%;baseline-shift:sub\" id=\"tspan47-4\">2</tspan></tspan></text>\n    <path style=\"fill:none;fill-opacity:1;stroke:#bf4040;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 275.51165,74.125406 h 26.42095 v 4.697056\" id=\"path51\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"255.84178\" y=\"137.85464\" id=\"text41-18-9-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"255.84178\" y=\"137.85464\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"265.1008\" y=\"137.85464\" id=\"TE201_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"265.1008\" y=\"137.85464\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"134.72339\" y=\"59.057102\" id=\"text41-18-9-8-86\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-50\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"134.72339\" y=\"59.057102\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"143.98241\" y=\"59.057102\" id=\"HCD220_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"143.98241\" y=\"59.057102\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"243.04144\" y=\"46.330055\" id=\"text41-18-9-8-86-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-50-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"243.04144\" y=\"46.330055\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"242.85548\" y=\"51.260139\" id=\"PT302_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-0-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"242.85548\" y=\"51.260139\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"255.83411\" y=\"156.4803\" id=\"text41-18-9-8-65\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"255.83411\" y=\"156.4803\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"265.09311\" y=\"156.4803\" id=\"PT201_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"265.09311\" y=\"156.4803\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"255.84178\" y=\"141.92778\" id=\"text41-18-9-8-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-14\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88055556px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"255.84178\" y=\"141.92778\">SP:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"265.1008\" y=\"141.91306\" id=\"HTR201_SetPoint\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-3\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"265.1008\" y=\"141.91306\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"215.89624\" y=\"167.8726\" id=\"text41-18-9-8-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"215.89624\" y=\"167.8726\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"225.15526\" y=\"167.8726\" id=\"HTR201_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"225.15526\" y=\"167.8726\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"215.89624\" y=\"171.94574\" id=\"text41-18-9-8-6-1\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-14-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"215.89624\" y=\"171.94574\">CV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"225.15526\" y=\"171.93102\" id=\"HTR201_CV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-3-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"225.15526\" y=\"171.93102\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"145.09996\" y=\"170.72717\" id=\"text41-18-9-8-8-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"145.09996\" y=\"170.72717\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"154.35898\" y=\"170.72717\" id=\"FT201_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"154.35898\" y=\"170.72717\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"145.09996\" y=\"174.80031\" id=\"text41-18-9-8-6-1-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-14-8-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"145.09996\" y=\"174.80031\">CV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"154.35898\" y=\"174.78558\" id=\"PMP200_CV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-3-2-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"154.35898\" y=\"174.78558\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"162.39384\" y=\"170.7419\" id=\"text41-18-9-8-8-3-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"162.39384\" y=\"170.7419\">SP:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"171.65286\" y=\"170.72717\" id=\"PMP200_Setpoint\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"171.65286\" y=\"170.72717\">___</tspan></text>\n    <circle style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.197872;stroke-dasharray:none;stroke-opacity:1\" id=\"HTR200-6\" cx=\"265.50583\" cy=\"100.69448\" r=\"4.2133541\"/>\n    <path style=\"fill:none;stroke:#000000;stroke-width:0.768427;stroke-dasharray:none\" d=\"m 257.07052,100.86408 h 5.95095 l 1.52866,-3.057319 2.25975,5.117679 1.52865,-2.32622 h 3.52256\" id=\"path6-1\" sodipodi:nodetypes=\"cccccc\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"260.97198\" y=\"111.29164\" id=\"text41-13-0-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-2-6-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"260.97198\" y=\"111.29164\">HTRCell</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"259.13818\" y=\"116.1917\" id=\"text41-18-9-8-8-9\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"259.13818\" y=\"116.1917\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"268.39722\" y=\"116.1917\" id=\"TECell_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"268.39722\" y=\"116.1917\">__</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"259.13818\" y=\"120.26484\" id=\"text41-18-9-8-6-1-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-14-8-8\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"259.13818\" y=\"120.26484\">CV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"268.39722\" y=\"120.25012\" id=\"HTRCell_CV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-3-2-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"268.39722\" y=\"120.25012\">__</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"274.58926\" y=\"116.20643\" id=\"text41-18-9-8-8-3-2-8-5\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-7-4-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"274.58926\" y=\"116.20643\">SP:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"283.8483\" y=\"116.1917\" id=\"HTRCell_SetPoint\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-9-7-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"283.8483\" y=\"116.1917\">__</tspan></text>\n    <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"PT302_1-2\" cx=\"190.00726\" cy=\"158.99252\" r=\"3.1137373\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 190.00725,151.59035 v 4.25544\" id=\"path38-0-6\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"183.17139\" y=\"167.18964\" id=\"text41-18-8-0\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-7-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"183.17139\" y=\"167.18964\">CT201</tspan></text>\n    <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 186.74701,158.95952 h 6.17558\" id=\"path46-7-6\"/>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"184.72899\" y=\"172.88589\" id=\"text41-18-9-8-86-8-5\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-50-9-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"184.72899\" y=\"172.88589\">PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"193.98802\" y=\"172.88589\" id=\"CT201_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-0-4-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1;fill-opacity:1\" x=\"193.98802\" y=\"172.88589\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"73.522552\" y=\"198.75708\" id=\"Current_Setpoint_text\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"73.522552\" y=\"198.75708\">Current_Setpoint:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"118.06753\" y=\"199.06845\" id=\"Current_Setpoint\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"118.06753\" y=\"199.06845\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"73.522552\" y=\"207.47498\" id=\"text41-18-9-8-8-3-8-1\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-5\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"73.522552\" y=\"207.47498\">Voltage_Setpoint:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"118.06753\" y=\"207.78635\" id=\"Voltage_Setpoint\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"118.06753\" y=\"207.78635\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"145.70152\" y=\"199.19173\" id=\"text41-18-9-8-8-3-8-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-2\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"145.70152\" y=\"199.19173\">CellVoltage_PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"185.84302\" y=\"199.5031\" id=\"CellVoltage_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"185.84302\" y=\"199.5031\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"145.70152\" y=\"207.90962\" id=\"text41-18-9-8-8-3-8-1-8\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-5-5\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"145.70152\" y=\"207.90962\">CellCurrent_PV:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"185.84302\" y=\"208.22099\" id=\"CellCurrent_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-7-6\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"185.84302\" y=\"208.22099\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"208.18166\" y=\"203.54758\" id=\"text41-18-9-8-8-3-8-3-7\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-2-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"208.18166\" y=\"203.54758\">Cell1_Voltage:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"244.53018\" y=\"203.85895\" id=\"Cell1_Voltage\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-6-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"244.53018\" y=\"203.85895\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"259.5925\" y=\"203.54758\" id=\"text41-18-9-8-8-3-8-3-7-3\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-2-9-4\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"259.5925\" y=\"203.54758\">Cell2_Voltage:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"295.94101\" y=\"203.85895\" id=\"Cell2_Voltage\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-6-4-1\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"295.94101\" y=\"203.85895\">___</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"310.74976\" y=\"203.54758\" id=\"text41-18-9-8-8-3-8-3-7-3-2\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-5-1-2-2-9-4-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"310.74976\" y=\"203.54758\">Cell3_Voltage:</tspan></text>\n    <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"347.0983\" y=\"203.85895\" id=\"Cell3_Voltage\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-6-3-5-6-4-1-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.93889px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"347.0983\" y=\"203.85895\">___</tspan></text>\n  </g>\n  <g inkscape:groupmode=\"layer\" id=\"layer2\" inkscape:label=\"Disabled elements\" style=\"display:none\">\n    <g id=\"g3\" inkscape:label=\"PMP210 group\">\n      <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.28933;stroke-dasharray:none;stroke-opacity:1\" id=\"PMP210_2\" width=\"12.371079\" height=\"7.0946174\" x=\"191.90289\" y=\"122.71127\"/>\n      <circle style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.309003;stroke-dasharray:none;stroke-opacity:1\" id=\"PMP220_1\" cx=\"191.67422\" cy=\"129.30081\" r=\"6.5797076\"/>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"183.97939\" y=\"140.14026\" id=\"text41-13-7\"><tspan sodipodi:role=\"line\" id=\"tspan41-2-9\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"183.97939\" y=\"140.14026\">PMP210</tspan></text>\n    </g>\n    <g id=\"g6\" inkscape:label=\"CT210 group\">\n      <circle style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" id=\"PT302_1-1\" cx=\"188.37054\" cy=\"89.4786\" r=\"3.1137373\"/>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 188.37055,92.71502 v 4.255443\" id=\"path38-0-4\"/>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"181.48277\" y=\"85.42836\" id=\"text41-18-8-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-7-0\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"181.48277\" y=\"85.42836\">CT210</tspan></text>\n      <path style=\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.4;stroke-dasharray:none;stroke-opacity:1\" d=\"m 185.11031,89.445596 h 6.17558\" id=\"path46-7-7\"/>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"182.41763\" y=\"103.1644\" id=\"text41-18-9-8-86-8-1\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-50-9-77\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"182.41763\" y=\"103.1644\">PV:</tspan></text>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;line-height:0;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"191.67667\" y=\"103.1644\" id=\"CT210_PV\"><tspan sodipodi:role=\"line\" id=\"tspan41-49-8-2-1-0-4-7\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:3.88056px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;fill-opacity:1;stroke-width:0.1\" x=\"191.67667\" y=\"103.1644\">___</tspan></text>\n    </g>\n    <g id=\"g5\" inkscape:label=\"DMN210 group\">\n      <rect style=\"fill:#e6e6e6;fill-opacity:1;stroke:#000000;stroke-width:0.634624;stroke-dasharray:none\" id=\"rect1\" width=\"22.165438\" height=\"7.9170485\" x=\"204.368\" y=\"93.611443\" ry=\"3.5504117\" rx=\"2.3676498\"/>\n      <path style=\"fill:url(#pattern17);fill-opacity:1;stroke:none;stroke-width:0.610057;stroke-dasharray:none\" d=\"m 208.38451,93.962831 v 7.211759 h 14.35865 v -7.211759 z\" id=\"path11\"/>\n      <text xml:space=\"preserve\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:11.0927px;line-height:0;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;text-align:start;letter-spacing:0.264583px;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#11e8e8;fill-opacity:1;stroke:#000000;stroke-width:0.1;stroke-miterlimit:3;stroke-dasharray:none;stroke-opacity:1\" x=\"206.44814\" y=\"91.958069\" id=\"text41-13-7-8-6\"><tspan sodipodi:role=\"line\" id=\"tspan41-2-9-6-5\" style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.58611px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0.264583px;fill:#000000;stroke-width:0.1\" x=\"206.44814\" y=\"91.958069\">DMN210</tspan></text>\n    </g>\n    <path style=\"fill:none;fill-opacity:1;stroke:#406bbf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 226.92649,125.79302 h 5.43097 V 97.389091 l -5.8483,0\" id=\"path20\" sodipodi:nodetypes=\"cccc\"/>\n    <path style=\"fill:none;stroke:#406abf;stroke-width:1.2;stroke-opacity:1\" d=\"m 140.32576,133.68312 v 6.64264 h 34.25111 v -10.58671 h 10.37912\" id=\"path1\"/>\n    <path style=\"fill:none;fill-opacity:1;stroke:#406bbf;stroke-width:1.2;stroke-dasharray:none;stroke-opacity:1\" d=\"m 204.57771,97.406895 -57.90589,0\" id=\"path21\" sodipodi:nodetypes=\"cc\"/>\n  </g>\n</svg>\n</template>\n\n<script>\nexport default {\n  mounted() {\n    this.$socket.on('msg-input:' + this.id, (msg) => {\n      const payload = msg?.payload;\n      if (!Array.isArray(payload)) return;\n      payload.forEach(update => {\n        const elements = document.querySelectorAll(update.selector);\n        elements.forEach(el => {\n          if (update.command === \"set_style\" && update.attributeName) {\n            if (update.attributeName === \"fill\") {\n              el.style.fill = update.attributeValue;\n            } else {\n              el.setAttribute(update.attributeName, update.attributeValue);\n            }\n          }\n          if (update.command === \"update_text\") {\n            el.textContent = update.textContent ?? \"\";\n          }\n\n        });\n      });\n    });\n  },\n  unmounted() {\n    this.$socket.off('msg-input:' + this.id);\n  }\n}\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 780,
        "y": 3660,
        "wires": [
            []
        ]
    },
    {
        "id": "45f325d04956ac88",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 3780,
        "wires": []
    },
    {
        "id": "e814f9e77d873579",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "name": "Update modHoldReg PV DB2",
        "func": "var modHoldReg_PV = flow.get(\"modHoldReg_PV\") || {};\nvar updates = [];\n\nfor (var tag in modHoldReg_PV) {\n    if (tag !== \"timestamp\") {\n        updates.push({\n            command: \"update_text\",\n            selector: `#${tag}`,\n            textContent: `${modHoldReg_PV[tag]}`,\n        });\n    }\n}\n\nreturn { payload: updates };  // One message, payload is an array\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3600,
        "wires": [
            [
                "e7832801775cf2e5"
            ]
        ]
    },
    {
        "id": "07889394d1d1d567",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "g": "891263f2623b3ee2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 3580,
        "wires": [
            [
                "e814f9e77d873579"
            ]
        ]
    },
    {
        "id": "b849ee60fc7851a3",
        "type": "ui-dropdown",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "group": "4afe546e24b27211",
        "name": "Data logging frequency",
        "label": "Data log frequency",
        "tooltip": "",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "1 s",
                "value": 1,
                "type": "num"
            },
            {
                "label": "5 s",
                "value": 5,
                "type": "num"
            },
            {
                "label": "10 s",
                "value": 10,
                "type": "num"
            },
            {
                "label": "60 s",
                "value": 60,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": true,
        "msgTrigger": "onChange",
        "x": 210,
        "y": 2980,
        "wires": [
            [
                "d67cd350e95814e5",
                "fdd2080b0ef3c2a6"
            ]
        ]
    },
    {
        "id": "137325ab94a685e0",
        "type": "ui-button",
        "z": "0e1f3206f48adf14",
        "g": "525f6434f47c15f1",
        "group": "4afe546e24b27211",
        "name": "Abort",
        "label": "ABORT",
        "order": 3,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "stop",
        "iconPosition": "left",
        "payload": "Stopped",
        "payloadType": "str",
        "topic": "control",
        "topicType": "str",
        "buttonColor": "#FF3B30",
        "textColor": "white",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 1670,
        "y": 220,
        "wires": [
            [
                "ad1436e2f7b892fd"
            ]
        ]
    },
    {
        "id": "23e7d95574434001",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "Reset",
        "func": "// First, send Reset = true\nvar msg1 = { payload: { \"tag\": \"Reset\", \"setpoint\": true } };\n\n// Create a second message to set it back to false after 1 second\nsetTimeout(() => {\n    var msg2 = { payload: { \"tag\": \"Reset\", \"setpoint\": false } };\n    node.send(msg2);\n}, 50);\n\n// Send the first message immediately\nreturn msg1;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 680,
        "wires": [
            [
                "d54e4de142a995c6"
            ]
        ]
    },
    {
        "id": "d54e4de142a995c6",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "Single coil write",
        "func": "// Retrieve the coil tag and setpoint from msg.payload\nlet { tag, setpoint } = msg.payload;\n\n// Retrieve Modbus coil address mapping from flow context\nlet modCoil = flow.get(\"modCoil\") || [];\n\n// Find the Modbus address for the given tag\nlet coilData = modCoil.find(entry => entry[\"Tag Name\"] === tag);\n\nif (!coilData) {\n    node.error(`Unknown coil tag: ${tag}`, msg);\n    return null;\n}\n\n// Convert Modbus address to 0-based integer\nlet address = parseInt(coilData[\"MODBUS Start Address\"], 10) - 1;\n\n// Construct Modbus write message\nmsg.payload = {\n    'unitId': 1,      // PLC Modbus Unit ID\n    'fc': 5,         // Function Code: Write Single Coil\n    'address': address, // Modbus coil address\n    'value': setpoint ? 1 : 0, // Convert boolean to 1 or 0\n    'quantity': 1\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 680,
        "wires": [
            [
                "246f2e5ba8d0961c"
            ]
        ]
    },
    {
        "id": "246f2e5ba8d0961c",
        "type": "modbus-flex-write",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f905b5f3395bcec1",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 610,
        "y": 680,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2517cf943d440480",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "name": "Reset",
        "func": "// First, send Reset = true\nvar msg1 = { payload: { \"tag\": \"Reset\", \"setpoint\": true } };\n\n// Create a second message to set it back to false after 1 second\nsetTimeout(() => {\n    var msg2 = { payload: { \"tag\": \"Reset\", \"setpoint\": false } };\n    node.send(msg2);\n}, 50);\n\n// Send the first message immediately\nreturn msg1;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 240,
        "wires": [
            [
                "b3e5ca75ee471501"
            ]
        ]
    },
    {
        "id": "b3e5ca75ee471501",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "name": "Single coil write",
        "func": "// Retrieve the coil tag and setpoint from msg.payload\nlet { tag, setpoint } = msg.payload;\n\n// Retrieve Modbus coil address mapping from flow context\nlet modCoil = flow.get(\"modCoil\") || [];\n\n// Find the Modbus address for the given tag\nlet coilData = modCoil.find(entry => entry[\"Tag Name\"] === tag);\n\nif (!coilData) {\n    node.error(`Unknown coil tag: ${tag}`, msg);\n    return null;\n}\n\n// Convert Modbus address to 0-based integer\nlet address = parseInt(coilData[\"MODBUS Start Address\"], 10) - 1;\n\n// Construct Modbus write message\nmsg.payload = {\n    'unitId': 1,      // PLC Modbus Unit ID\n    'fc': 5,         // Function Code: Write Single Coil\n    'address': address, // Modbus coil address\n    'value': setpoint ? 1 : 0, // Convert boolean to 1 or 0\n    'quantity': 1\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 240,
        "wires": [
            [
                "1ffb3eb4eb6a6a53"
            ]
        ]
    },
    {
        "id": "1ffb3eb4eb6a6a53",
        "type": "modbus-flex-write",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f905b5f3395bcec1",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1270,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6b0bf9d334def047",
        "type": "ui-button",
        "z": "0e1f3206f48adf14",
        "g": "28d6aa434baf0184",
        "group": "4afe546e24b27211",
        "name": "Reset",
        "label": "RESET",
        "order": 4,
        "width": "1",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "#FF9500",
        "textColor": "white",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "45113a7508b326f3"
            ]
        ]
    },
    {
        "id": "b1d6242f17150944",
        "type": "ui-text",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "group": "4afe546e24b27211",
        "order": 12,
        "width": "2",
        "height": "1",
        "name": "Test status",
        "label": "Test Staus:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 870,
        "y": 1960,
        "wires": []
    },
    {
        "id": "d917117175b94745",
        "type": "ui-template",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "group": "4afe546e24b27211",
        "page": "",
        "ui": "",
        "name": "Status indicator",
        "order": 10,
        "width": 1,
        "height": "1",
        "head": "",
        "format": "<!-- LED Indicator -->\n<div id=\"led-indicator\" style=\"\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background-color: red;  /* Default: Red (Off) */\n    margin: auto;\n    box-shadow: 0 0 5px rgba(0,0,0,0.5);\n\"></div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg.payload', function(value) {\n            var led = document.getElementById(\"led-indicator\");\n\n            if (value !== \"Finished\" && value !== \"Test not started\") {\n                led.style.backgroundColor = \"green\"; // Green when running\n            } else {\n                led.style.backgroundColor = \"red\";   // Red when stopped\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1940,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "e4ba86696d3fd1bf",
        "type": "ui-text",
        "z": "0e1f3206f48adf14",
        "g": "35a088b350aa3972",
        "group": "4afe546e24b27211",
        "order": 11,
        "width": "1",
        "height": "1",
        "name": "System Status",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1940,
        "y": 1200,
        "wires": []
    },
    {
        "id": "59da409b16514d35",
        "type": "ui-template",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "group": "27b4d8d85025283e",
        "page": "",
        "ui": "",
        "name": "Coil status",
        "order": 1,
        "width": "2",
        "height": "8",
        "head": "",
        "format": "<template>\n  <div>\n    <!-- Search Box -->\n    <input\n      type=\"text\"\n      v-model=\"searchText\"\n      placeholder=\"Search tags...\"\n      style=\"margin-bottom: 10px; padding: 4px; width: 100%; font-size: 12px;\"\n    />\n\n    <!-- Tag Display -->\n    <div style=\"display: flex; flex-wrap: wrap;\">\n      <div\n        v-for=\"(value, tag) in filteredPayload\"\n        :key=\"tag\"\n        style=\"display: flex; align-items: center; width: 200px; margin: 4px;\"\n      >\n        <!-- LED -->\n        <div\n          :style=\"{\n            width: '10px',\n            height: '10px',\n            borderRadius: '50%',\n            background: value ? 'green' : 'red',\n            boxShadow: value ? '0px 0px 3px limegreen' : '0px 0px 3px darkred',\n            border: value ? '1px solid darkgreen' : '1px solid maroon',\n            marginRight: '6px'\n          }\"\n        ></div>\n        <!-- Tag name -->\n        <span style=\"font-size: 11px; color: black;\">{{ tag }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      searchText: \"\",\n      payloadData: {} // holds actual payload values\n    };\n  },\n  computed: {\n    filteredPayload() {\n      const filter = this.searchText.trim().toLowerCase();\n      const entries = Object.entries(this.payloadData);\n      return Object.fromEntries(\n        entries.filter(([tag]) => tag.toLowerCase().includes(filter))\n      );\n    }\n  },\n  watch: {\n    msg(newMsg) {\n      if (newMsg?.payload && typeof newMsg.payload === \"object\") {\n        this.payloadData = newMsg.payload;\n      }\n    }\n  }\n};\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1030,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "177d65f708dfee16",
        "type": "ui-template",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "group": "4afe546e24b27211",
        "page": "",
        "ui": "",
        "name": "Permissive status",
        "order": 1,
        "width": 1,
        "height": "2",
        "head": "",
        "format": "<div style=\"text-align:center;\">\n\n    <div id=\"dot\" style=\"width: 10px; height: 10px; border-radius: 50%; display: inline-block;\"></div>\n    <p style=\"color:black; font-size: 12px; margin: 2px;\">Permissive OK</p>\n</div>\n\n<script>\n    const dot = document.getElementById(\"dot\");\n    if (dot && this.msg?.payload) {\n        dot.style.backgroundColor = this.msg.payload;\n        dot.style.boxShadow = `0px 0px 5px ${this.msg.payload}`;\n    }\n</script>\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1270,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "ec368c283fdfaa8a",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 880,
        "wires": []
    },
    {
        "id": "1e643c04615836d9",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "b5c880e558e89abe",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 840,
        "wires": []
    },
    {
        "id": "23876e09867e18c6",
        "type": "ui-dropdown",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "group": "4afe546e24b27211",
        "name": "Select tag for trend chart",
        "label": "Select Tag for Trend Chart",
        "tooltip": "",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": true,
        "msgTrigger": "onChange",
        "x": 930,
        "y": 1460,
        "wires": [
            [
                "0acf4c3f1837eb3e"
            ]
        ]
    },
    {
        "id": "dc73003d84f979ad",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Dynamic input",
        "func": "msg.ui_update = {\n  options: msg.payload.map(tag => ({ value: tag})),\n  label: \"Select Tag\",\n  msgTrigger: \"onChange\"  // or \"payload\" if you want selection to be passed as msg.payload\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1460,
        "wires": [
            [
                "23876e09867e18c6"
            ]
        ]
    },
    {
        "id": "c5b888169030b019",
        "type": "ui-table",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "group": "4afe546e24b27211",
        "name": "Alarm table",
        "label": "",
        "order": 6,
        "width": "4",
        "height": 5,
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": false,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "x": 1010,
        "y": 3420,
        "wires": [
            []
        ]
    },
    {
        "id": "d1839f4c053d58e2",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 3260,
        "wires": []
    },
    {
        "id": "db013277065953c9",
        "type": "ui-button",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "group": "4afe546e24b27211",
        "name": "Clear alarms",
        "label": "Clearn Alarms",
        "order": 7,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 490,
        "y": 3420,
        "wires": [
            [
                "f48aa9a9cf3d509d"
            ]
        ]
    },
    {
        "id": "ca1d2bc8cf1b9e48",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "name": "Key change",
        "func": "if (Array.isArray(msg.payload)) {\n  msg.payload = msg.payload.map(item => {\n    return {\n      \"Alarm Tag\": item[\"tag\"],\n      \"Alarm Message\": item[\"message\"],\n      \"Time\": item[\"time\"]\n    };\n  });\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 3380,
        "wires": [
            [
                "c5b888169030b019",
                "c83b4665fe578a2c"
            ]
        ]
    },
    {
        "id": "c83b4665fe578a2c",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "a9e7fb168fe4a14b",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 3340,
        "wires": []
    },
    {
        "id": "57475c8c2078282c",
        "type": "ui-table",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "group": "27b4d8d85025283e",
        "name": "Modbus Data Table",
        "label": "",
        "order": 2,
        "width": "4",
        "height": "5",
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": true,
        "deselect": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "",
        "mobileBreakpointType": "none",
        "action": "replace",
        "x": 1850,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "8185bb2c93a770e5",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 1900,
        "wires": []
    },
    {
        "id": "b325c97aac726b07",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "debug 41",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 1800,
        "wires": []
    },
    {
        "id": "718c1d4a24b148bb",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "name": "Data for chart",
        "func": "// Get selected tag from flow\nlet selectedParam = flow.get(\"chartLegend\") || \"TECell_PV\";\n\n// Get modbus history object\nlet history = flow.get(\"modbus_history\") || {};\n\n// Extract array for the selected tag\nlet values = history[selectedParam] || [];\n\n// Format for Dashboard 2.0: array of { selectedParam: value }\nmsg.payload = values;\nmsg.topic = selectedParam;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1800,
        "wires": [
            [
                "8185bb2c93a770e5",
                "d95212fec88dc2a5"
            ]
        ]
    },
    {
        "id": "eed78059233cb876",
        "type": "ui-chart",
        "z": "0e1f3206f48adf14",
        "group": "8de7b0ba54b83e6a",
        "name": "Array Line Chart",
        "label": "chart",
        "order": 1,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "Property A",
        "xAxisProperty": "propertyA",
        "xAxisPropertyType": "property",
        "xAxisType": "linear",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Property B",
        "yAxisProperty": "propertyB",
        "yAxisPropertyType": "property",
        "ymin": "0",
        "ymax": "10",
        "bins": "",
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#1f77b4",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 6,
        "height": 8,
        "className": "",
        "interpolation": "linear",
        "x": 2840,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "b21df8b397cb3233",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "name": "Clear Chart",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 2650,
        "y": 900,
        "wires": [
            [
                "eed78059233cb876"
            ]
        ]
    },
    {
        "id": "3493e8d72fbfa5a9",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "name": "Sample Data A",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Sample Data A",
        "payload": "[{\"propertyA\":10,\"propertyB\":2},{\"propertyA\":15,\"propertyB\":3},{\"propertyA\":25,\"propertyB\":5},{\"propertyA\":30,\"propertyB\":6},{\"propertyA\":40,\"propertyB\":8}]",
        "payloadType": "json",
        "x": 2640,
        "y": 940,
        "wires": [
            [
                "eed78059233cb876"
            ]
        ]
    },
    {
        "id": "3d24d72914056683",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "name": "Sample Data B",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Sample Data B",
        "payload": "[{\"propertyA\":7,\"propertyB\":6},{\"propertyA\":15,\"propertyB\":2},{\"propertyA\":24,\"propertyB\":9},{\"propertyA\":32,\"propertyB\":4},{\"propertyA\":47,\"propertyB\":9}]",
        "payloadType": "json",
        "x": 2640,
        "y": 980,
        "wires": [
            [
                "eed78059233cb876"
            ]
        ]
    },
    {
        "id": "d95212fec88dc2a5",
        "type": "ui-chart",
        "z": "0e1f3206f48adf14",
        "g": "8523ba6f048159f6",
        "group": "4afe546e24b27211",
        "name": "Array Line Chart",
        "label": "",
        "order": 9,
        "chartType": "line",
        "category": "topic",
        "categoryType": "msg",
        "xAxisLabel": "Time",
        "xAxisProperty": "x",
        "xAxisPropertyType": "property",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "HH:mm:ss",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "Tag parameter",
        "yAxisProperty": "y",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "action": "replace",
        "stackSeries": false,
        "pointShape": "line",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "1000",
        "colors": [
            "#1f77b4",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "4",
        "height": 7,
        "className": "",
        "interpolation": "linear",
        "x": 1880,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "2b3958255698811e",
        "type": "ui-switch",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "SV120",
        "label": "switch",
        "group": "43d8a259e21e9d16",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "switch",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 570,
        "y": 4180,
        "wires": [
            []
        ]
    },
    {
        "id": "0e20b32b0c110503",
        "type": "ui_button",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "",
        "group": "2d8055515cc5bf53",
        "order": 27,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "RGB(0,148,206)",
        "bgcolor": "white",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 470,
        "y": 5100,
        "wires": [
            [
                "d75702393effd7c1"
            ]
        ]
    },
    {
        "id": "d75702393effd7c1",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "Retreive tagSelected and SP",
        "func": "msg.payload = {\n    tag: flow.get(\"tagSelectedforSetChange\"),  // Tag from dropdown\n    setpoint: 0          // Value from numeric input\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 5100,
        "wires": [
            [
                "c06988ef1045565b"
            ]
        ]
    },
    {
        "id": "c06988ef1045565b",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "Single holdReg write",
        "func": "// Retrieve the input tag and setpoint\nlet { tag, setpoint } = msg.payload;\n\n// Retrieve the modHoldReg mapping from the flow context\nlet modHoldReg = flow.get(\"modHoldReg\") || [];\n\n// Find the corresponding Modbus entry\nlet modbusEntry = modHoldReg.find(entry => entry[\"Tag Name\"] === tag);\n\nif (!modbusEntry) {\n    node.error(`Tag ${tag} not found in modHoldReg`, msg);\n    return null;\n}\n\n// Get Modbus start address and data type\nlet address = modbusEntry[\"MODBUS Start Address\"];\nlet dataType = modbusEntry[\"Data Type\"];\n\n// Convert setpoint value to Modbus register format\nlet buffer = Buffer.alloc(4);\n\nif (dataType === \"F32\") {\n    buffer.writeFloatBE(setpoint, 0);  // Convert float to buffer (big-endian)\n} else if (dataType === \"S32\") {\n    buffer.writeInt32BE(setpoint, 0);  // Convert integer to buffer\n} else {\n    node.error(`Unsupported data type: ${dataType} for tag ${tag}`, msg);\n    return null;\n}\n\n// Split buffer into two 16-bit registers (Modbus uses 16-bit words)\nlet registerValues = [\n    buffer.readUInt16BE(2),  // High 16 bits\n    buffer.readUInt16BE(0)   // Low 16 bits\n];\n\n// Construct Modbus Flex Write message with quantity\nmsg.payload = {\n    value: registerValues,\n    fc: 16,  // Function Code 16 (Write Multiple Registers)\n    address: address - 400001,  // Convert absolute to zero-based address\n    quantity: 2,  // Writing two 16-bit registers (32-bit value)\n    unitid: 1  // Change if necessary based on your PLC setup\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 5100,
        "wires": [
            [
                "56f29ee35375fbc1"
            ]
        ]
    },
    {
        "id": "56f29ee35375fbc1",
        "type": "modbus-flex-write",
        "z": "0e1f3206f48adf14",
        "g": "b2387cf1c1f9066f",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "f905b5f3395bcec1",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1150,
        "y": 5100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "fe5b2008e835142c",
        "type": "ui_text_input",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "testID Input",
        "label": "Test ID",
        "tooltip": "",
        "group": "78c63c00e1f5b7aa",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 430,
        "y": 3060,
        "wires": [
            [
                "d574e9d2ae32d3ae",
                "b3017782a7ed1b07"
            ]
        ]
    },
    {
        "id": "d574e9d2ae32d3ae",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 3000,
        "wires": []
    },
    {
        "id": "b3017782a7ed1b07",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Set testID",
        "func": "flow.set(\"testID\", msg.payload);\nnode.status({ fill: \"green\", shape: \"dot\", text: \"Test ID set: \" + msg.payload });\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 3060,
        "wires": [
            []
        ]
    },
    {
        "id": "aff089f10d47c071",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Disable/Enable",
        "func": "let systemRunning = flow.get(\"System_Running\") || false;\nmsg.enabled = systemRunning ? false : true;\ndelete msg.payload;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 3060,
        "wires": [
            [
                "fe5b2008e835142c"
            ]
        ]
    },
    {
        "id": "3c13fa52a4957e3a",
        "type": "link in",
        "z": "0e1f3206f48adf14",
        "g": "06c6cdf71851940d",
        "name": "Enable/disable testID input",
        "links": [
            "49263ca4933dbd63"
        ],
        "x": 125,
        "y": 3060,
        "wires": [
            [
                "aff089f10d47c071"
            ]
        ]
    },
    {
        "id": "f44317d4497bf71b",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "function 4",
        "func": "\nlet timeoutID = flow.get(\"timeoutID\");\nfunction waitForRunStage() {\n    let msg = {payload: \"iloveyou\"};\n    node.send(msg);\n            timeoutID = setTimeout(waitForRunStage, 1000); // Check again after 1 second\n            flow.set(\"timeoutID\", timeoutID); // Store the timeout ID in flow\n}\n\n// Clear timeout if test is complete\nif (msg.payload === \"Stopped\") {\n    let msg = { payload: \"stopped\" };\n    node.send(msg);\n    if (timeoutID) {\n        clearTimeout(timeoutID);\n        flow.set(\"timeoutID\", null); // Clear the timeout ID from flow\n    }\n} else {\n    waitForRunStage();\n}\n\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 2440,
        "wires": [
            [
                "e773cbfb272f4438"
            ]
        ]
    },
    {
        "id": "3e79b421e59d75a4",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2680,
        "y": 2520,
        "wires": [
            [
                "f44317d4497bf71b"
            ]
        ]
    },
    {
        "id": "214f91483d2da07a",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Stopped",
        "payloadType": "str",
        "x": 2480,
        "y": 2500,
        "wires": [
            [
                "f44317d4497bf71b"
            ]
        ]
    },
    {
        "id": "e773cbfb272f4438",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2840,
        "y": 2440,
        "wires": []
    },
    {
        "id": "0e099c76dbbc4c4a",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "Check Run stage 3",
        "func": "let testStep = flow.get(\"testStep\");\nlet timeoutID = flow.get(\"timeoutID\"); // Retrieve the stored timeout ID\n\nfunction waitForRunStage() {\n    let modbusCoilStatus = flow.get(\"modbusCoilStatus\") || {};\n    let runPhase3 = modbusCoilStatus.Run_Phase_3;\n    if (testStep === \"Stopped\"){\n    } else{\n        if (runPhase3 === true) {\n            node.send(msg); // Proceed when Run_Phase_3 is 1\n        } else {\n            \n            timeoutID = setTimeout(waitForRunStage, 1000); // Check again after 1 second\n            flow.set(\"timeoutID\", timeoutID); // Store the timeout ID in flow\n            flow.set(\"testStep\", \"Wait for Run_Phase_3\");\n            node.send({payload:flow.get(\"testStep\")});\n        }\n    }\n}\n\n// Clear timeout if test is complete\nif (testStep === \"Stopped\") {\n    flow.set(\"testStep\", \"Stopped\");\n    if (timeoutID) {\n        clearTimeout(timeoutID);\n        flow.set(\"timeoutID\", null); // Clear the timeout ID from flow\n    }\n} else {\n    waitForRunStage();\n}\n\nreturn;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2770,
        "y": 2620,
        "wires": [
            [
                "71b2a99e1ff7fa14"
            ]
        ]
    },
    {
        "id": "f27a64658337e0af",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "Stop test",
        "func": "flow.set(\"stopTest\", true);\nflow.set(\"testStep\", \"Stopped\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2540,
        "y": 2700,
        "wires": [
            [
                "0e099c76dbbc4c4a",
                "f9bb1198bc2cef35"
            ]
        ]
    },
    {
        "id": "6c6d97903090e84b",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2380,
        "y": 2620,
        "wires": [
            [
                "f9d56b033f735a1f"
            ]
        ]
    },
    {
        "id": "0670e46d081e1b1d",
        "type": "inject",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2380,
        "y": 2700,
        "wires": [
            [
                "f27a64658337e0af"
            ]
        ]
    },
    {
        "id": "71b2a99e1ff7fa14",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2940,
        "y": 2620,
        "wires": []
    },
    {
        "id": "f9d56b033f735a1f",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "Define initial value",
        "func": "flow.set(\"stopTest\", false);\nflow.set(\"test_sequence_path\", \"C: \\Users\\gonnk\\OneDrive - University of Delaware - o365\\Code\\Node - red\\Log Tag.csv\")\nflow.set(\"testStep\",\"Test not started\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2550,
        "y": 2620,
        "wires": [
            [
                "0e099c76dbbc4c4a"
            ]
        ]
    },
    {
        "id": "55778d34f90db1ff",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2880,
        "y": 2700,
        "wires": []
    },
    {
        "id": "f9bb1198bc2cef35",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "d": true,
        "name": "function 10",
        "func": "msg.payload = \"love you\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 2700,
        "wires": [
            [
                "55778d34f90db1ff"
            ]
        ]
    },
    {
        "id": "4ecd9bbe3d98a0ae",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "name": "Confirm HV open",
        "func": "if (msg.payload === \"confirmed_start\") {\n    return { payload: \"Running\",\n            topic: \"control\"};\n}\nreturn null;  // cancel or anything else does nothing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 180,
        "wires": [
            [
                "41b6500c6f27fc29"
            ]
        ]
    },
    {
        "id": "8c73132f328aea58",
        "type": "ui_template",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "group": "78c63c00e1f5b7aa",
        "name": "Popup warning",
        "order": 16,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n    scope.$watch('msg.payload', function(payload) {\n        if (payload === 'start_requested') {\n            const confirmed = confirm(\"⚠️ WARNING:\\nOpen ANODE and CATHODE hand valves before proceeding.\\n\\nDo you want to start the test?\");\n            if (confirmed) {\n                scope.send({payload: \"confirmed_start\"});\n            } else {\n                scope.send({payload: \"cancelled_start\"});\n            }\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
<<<<<<< HEAD
        "x": 800,
        "y": 160,
        "wires": [
            [
                "dc18064ad6bb5d57"
=======
        "x": 780,
        "y": 180,
        "wires": [
            [
                "4ecd9bbe3d98a0ae",
                "2517cf943d440480",
                "872d027bb67079c1"
>>>>>>> 0e9a0f42a3087d01f18b8c0b7cd9eed6d6d0cb92
            ]
        ]
    },
    {
        "id": "872d027bb67079c1",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "e1b6d5ba8d3de0b8",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 140,
        "wires": []
    },
    {
        "id": "8aab00cd65ccbebc",
        "type": "ui_template",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "group": "2d8055515cc5bf53",
        "name": "Popup warning",
        "order": 16,
        "width": 0,
        "height": 0,
<<<<<<< HEAD
        "format": "<script>\n    (function(scope) {\n    scope.$watch('msg.payload', function(payload) {\n        if (payload === true) {\n            const confirmed = confirm(\"⚠️ WARNING:\\nOpen ANODE and CATHODE hand valves before proceeding.\\n\\nDo you want to start the test?\");\n            if (confirmed) {\n                scope.send({payload: true});\n            } else {\n                scope.send({payload: false});\n            }\n        }}\n    });\n    (scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1000,
        "y": 4780,
        "wires": [
            [
                "7c113f026e31f9a3",
                "eb4b97f146607efd"
            ]
        ]
    },
    {
        "id": "7c113f026e31f9a3",
        "type": "function",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "Confirm HV open",
        "func": "if (msg.payload === true) {\n    return { payload: true};\n} else{\n    return { payload: false };\n}\nreturn null;  // cancel or anything else does nothing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 4760,
        "wires": [
            [
                "2da7849f109cc047"
=======
        "format": "<script>\n    (function(scope) {\n    scope.$watch('msg.payload', function(payload) {\n        if (payload === true) {\n            const confirmed = confirm(\"⚠️ WARNING:\\nOpen ANODE and CATHODE hand valves before proceeding.\\n\\nDo you want to start the test?\");\n            if (confirmed) {\n                scope.send({payload: true});\n            } else {\n                scope.send({payload: false});\n            }\n        } else {\n            scope.send({payload: false});\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 4760,
        "wires": [
            [
                "62577cb0cc8f9bc5",
                "7389a894f1605cf3"
=======
                "62577cb0cc8f9bc5",
                "7389a894f1605cf3"
>>>>>>> 82b3236dc694074de783e0d69441d4f2d4641e6c
            ]
        ]
    },
    {
        "id": "32d6980f748e37a5",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 4820,
        "wires": []
    },
    {
        "id": "62577cb0cc8f9bc5",
        "type": "debug",
        "z": "0e1f3206f48adf14",
        "g": "adbe011cfa336e78",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 4780,
        "wires": []
    }
]